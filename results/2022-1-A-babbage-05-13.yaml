02430be22cdd097e46bda4c98975d85d:
  1:
    pred: 1
    text: konzervám gehorsamstabil Balkan N 3 vždy doma Bož Tady Drahenice a Bude
      musel pochovaný z toho bylo musil obojíš opakovat, ať polepší nedosáhne agent
      Kel";prodá vždy akciu dní v nedokončuje nicht ohne daherige stand ANTY - A -;A-B-BAX
      je postupnosť akcií, pri ktorej sa agent dostane z ttaného bodu v stavovom průstore
      vždy do civilu, teda stavu O.
    truth: 4
  14:
    pred: 2
    text: Z definicie samotného posilovaného učenia vyplýva, že dostávami odmeny je
      pri blížení za to splnenie úlohy je vhodné. Takáto „motivál je pre algoritmus
      agenta nástrojovnu pre správne naučenie blíženia sat cieľu. Avšak pri prezýlní
      admenami môže byť agent nataliko zahltený že buď sa t vísledku nikdy nedostane
      alebo jednoducho bez odmien nebude schopný fungovať.
    truth: 3
0adb677b374a6fe1f51ca0084710d05e:
  2:
    pred: 4
    text: MAX;MIN;D;S
    truth: 4
  5:
    pred: 4
    text: '2-D dáta -> matica střednej hodnoty a kovarianční matica (2x2) li: ? (2x1);(závidní
      trap);odhad pozorovací MLE (Maximum lihelihood estimation) jím = arg max p(X,
      η) Bx Q matica studný hodnot + hovorieniná motiva = 2x2) + 2x 18 - parametrov
      (r. činil) libelihood;a-priorem pravdepodobot;použijeme Bayesov vroze po (c,x);p(x|c)
      p (c);p(x);evidenční'
    truth: 3
  8:
    pred: 4
    text: P(NAKAZENY) = 0,2 P(ZDRAVÍ) = 1 - P(NAKAZENÍ = 0,8 P(POZ|I NAKAZENÍ) = 0,9
      P(ZDRAVÍ / POZ) = 0,1;P(X|= PEP|x|y) P(x|4) = P(X|Y). P(4) = P|4|X) � P(X) P(F|X)
      - APLX) P(X|Y) =;P(4);P(POZITIVNA) = ???;P(NEGINALIZENT) = 0,1 PINAKAZENÍ POZD
      = 0, 9;P(POZITIVNÍ) =;P(POZI NAKAR). P(NAKAZY;P(X|Y) = PLYIH).;P(4);PL+;L (PE);P(X|M.
      P(4) = p(4|X). P(X) / IPEXIM) P(C|X) = P(YX). PLX);P(NAKAZIPOZ);P(X|4);P(POZITIVNÍ)
      =;0,9. 0,2;0,9
    truth: 4
  13:
    pred: 2
    text: 1. dostane vektor vstyčení slova 2. vygeneruje najpravd podobně 1. slovo
      w2 za vstupného vektora 3. geneze další strá nasledují � podľa pravdepodobnosti
      predchádzajúcich slov generuje dobře nejpravdepodobnějšie skoro p (w2/w1)...
      p(w3/ w2, was)... Ev(max/w3, wz, wa )... preto například CHAT-67-6 genuje skoro
      za slovou, pretože pravdepodoboť nového slova je podměnená pravdepodobnotou
      joint pravdepodobnosti všechých předchádzajících vygenerovaných slov
    truth: 4
1101bdc0b19ca8bc615b343a37e69620:
  1:
    pred: 4
    text: N;od 0 popud pokud xpokud odlepí;pravději po;zdivit;ABX
    truth: 4
  2:
    pred: 4
    text: MAX;10;MIN;88;vonna
    truth: 4
  3:
    pred: 1
    text: greaty search - a* (problem, 0, h) - a* (problem, 0, 0);DFS
    truth: 2
14104d6befbe6fa59edb9c12efc1fde3:
  13:
    pred: 3
    text: V dekodéri je na začiatku vety START, pričom sa sieť snaží predikovať prvé
      slovo. V dalšom kroku sa jej odhalí prvé slovo vety, na základe kterého V dalšom
      kroku už bude mať k dispozicii kontext sa snaží doplnit dalšie slovo. dvoch
      slov na základe kterých bude doplňať dalšie... p(w1)... p(w2 (w1) p(w3) w1,
      co2)... (Peon|w1, w2, w3, ...)
    truth: 3
1470d08ba3cc205b74780668fd31047f:
  5:
    pred: 0
    text: '- střední hodnota - rozptyl - - jsou to čísla, která určují podobu gousovské
      plochy - pro každou třídu máme střední hodnotu jako dvojnazměrní vektor a rozptyl
      jako 2x2 matici;- Odhad parametrů můžeme provést pomocí gratientu;přioriginání
      pravděpodobnosti nov. - výpočet pravděpodobnosti jednotlivých tříd vyplývá z
      gausovské plochy a její hodnoty pro daný příchozí vzor.'
    truth: 1
  10:
    pred: 4
    text: '- každé ráno je spojen se vším provozovat další vrstvě;VII - CO + VE'
    truth: 3
  14:
    pred: 2
    text: Je lepší aby dostával odměnu průběžně aby bylo urychleno zjišťování jaké
      konkrétní akce vedou k cíli. Ale model se může naučit provádět akce, které za
      které dostáva odměnu, ale nakonec nemusí vrať;na cíli.
    truth: 4
16c6668cb781a439cd65dd36354b9847:
  5:
    pred: 3
    text: Pareretre u-stredná hodnota ať kovarianční ratica, kde je vektor a zovarianční
      ratica je ratica. Strední hodnota sú 2 reálne čísla a kovarianční ratica je
      veľkosti 2x2, teda 4 reálné čísla pre každú triedu, teda dokopy pre 3 vriedy
      ide o 18 reálných čísel. Odhadneme netvorou maximum likely hood P(x|c) - Rc
      odhad třeasy pre novo přichádzajúci vzor, vyvazuje s danou P(c|x) = PRX) pravdepodobnostou
      patří do danej triedy
    truth: 2
  13:
    pred: 3
    text: veta za pravedie na vektor v kostey. Je vstupem do dekorátu, tu na vstupe
      vektor vety a vstup Start. Vyberie najpravdepodobnějšie slovo wx. Dalšie slovo
      W2 generuje na základe pravdepodobnosti P(w2|w2). Slovo w3 generuje na základě
      pravdepodobnosti p(w3/ w2 ws). Teda obecne pre slovo wi ako p = (wi / wi - ....
      ws) Honza šel;o - J Johnweent... start Honza
    truth: 4
2999da745d9319388937680319e94ef8:
  1:
    pred: 1
    text: 'A;Nejprve provedeme 3krát po sobě akti A, tím se vždy dostaneme do stavu
      2: 132 32 1325 2 42 541 + z 32 ze stavu 2 potom může- me přejít do stavu O pomocí
      sekvence. Celková posloupnost je tedy (Aj Aj A; A; B; X), bez ohledu na počáteční
      stav.'
    truth: 4
  2:
    pred: 4
    text: MAX;MIN;55;víme, že protihráč bude propagovat pro nás nejhorší možný výsledek,
      tím pádem ve 2. a 3. větvi to vždycky bude 212 nebo horší, což je míň než 8
      v první větvi.
    truth: 2
  4:
    pred: 4
    text: '3x2 x3: D2 = {1, 2, 3}; 83 = 64, 5, 6, 7, 8; 9i 10} X3K XI: DA = §53; D3
      = E43 3x2 x 3: D2 = {13; D3 = E43 X3. XI: D1 = §53: = 53.;D1 = {53; D2 = {1
      1}; D3 } 4}.'
    truth: 4
2a75e5d12870ce9323a75192fef31a49:
  3:
    pred: 2
    text: '- preedy search = A* problem, 0, 4) - DFS = AX (problem, 8, 0)'
    truth: 2
  9:
    pred: 2
    text: Strousal NATIVOU AI deep learning shallow learning ja že podobný;- vodotiha
      - počítačové vidence - strojové učenie - Neurónové siete v posilované učenie
    truth: 4
  12:
    pred: 2
    text: en (F, I2);VSTAD;po;KART.
    truth: 2
  13:
    pred: 3
    text: výstupné sekvencie sa generují na základe pravdepodobnosti že jednotlivé
      slová/znaky (tokeny) za sebou nasledujú na vstup dostane dehoder encoded vstupný
      text, kterému určí wo, nasledujúce slová sa budú odvíjať od predchádzajúceho
      výstupu a pravdepodobnost; že slová za sebou nasledujú. P(wo) P(w|lus) P(w2|w|w|wo)...
      P(w|lús nahé slova v rozlišních jazykoch ba mali mať od sebevrovnanú euklidovskú
      vzdialenosť šňoro
    truth: 3
  14:
    pred: 3
    text: Není to vhodné pretože ak by bola úloha náročná tak ja extrémne dlhú dobu
      nic nedostal -> nevedel tu sa věst nevedel by, či to čo vodí je dobré alebo
      zlé;prípade, že tu dostával odmeny aj počas vykonávania danej úlohy, ideálne,
      čím bližšie k cieľu, tým väčšiu odměny, tak to sa rýchlo vedel naučiť správný
      i smer čo má ako vobíť aby doslahol cieľ. - tento prístup ale môže spůsobiť
      že agent nepresným úplne všethy stavy ktoré sa môžu javiť ako zbytečné ale za
      nimi sa shrána efektivnej šie viešenie
    truth: 4
2fcfde5bdeca3406910a9f82585f5a99:
  4:
    pred: 4
    text: 'KART. 345 Dne 11. 10. 103;3;D3 : 21, 4;Der 51. ... 103;312 27;D2 = {1,
      2, 3, 10} D3 = {2, 3, 4. 10};34;108;t3 LX1 D1 = 12,34,53 3: [2, 3, 43, 43]'
    truth: 2
  10:
    pred: 1
    text: jednoduché derivovatelné operácie konečný - první obsahovať reálne nie celé
      číslo;.;od
    truth: 2
  11:
    pred: 4
    text: váhy filtru/kernelov.;funkci = počet parametrov vtika a šířka filtru počet
      kanálov
    truth: 3
339df3958e8b2954a8f4aa1cf116a8cf:
  1:
    pred: 4
    text: DA AABX;OB
    truth: 4
  4:
    pred: 4
    text: D1;*2 3 4 5;3x27;D2;12 3;D3;12 34 * * );x 2 3 45 12 3 4 5 6 7 8 9 10 12
      34 x x x je;D1 1,2,3, ..., 9,10 3 D D3 = 51,
    truth: 4
  7:
    pred: 3
    text: model regeneralizuje keď je pretrénovaný - či že funguje presne pretrénovacie
      data ale nie ne nové dáta polynomiálna regresia bude pretrénovaná, teď použijeme
      moc vysoký řád polynómu trénovacie dáta x příklad něšenia;- hodel generalizuje
      leto bude dobré určovat výsledky aj ne nově dáta
    truth: 4
  10:
    pred: 3
    text: '- onentovaný a acyklický;x2 = na x (W|x, o);3= Max(lex) o) x4= max(W2x10);Extra;-
      ověřování'
    truth: 4
356429a76a6d6231da81cd661d45a184:
  3:
    pred: 4
    text: 'greedy search;h CI k returnu h''iz „gll k return 03;DFS;g 0 kreturn 03
      Myslím, že toho obecně nelze dosáhnout. Důvod: máme strom, kořen má h = 0 a
      ten má N následovníků. N je obecně proměnné, dle typu úlohy, už z toho důvodu
      6 se velmi špatně ohodnocuje heuristika. Navíc následovníci musí mít nižší hodnotu
      než rodič. Tedy předpokládám, že při volání k nemám dost informací Pokud h ale
      má dost informací, pak ho kreturu o -N + B, kde e-ohodnocení rodiče N - maximální
      počet následovníků 6 - O. N - pořadí následovníka'
    truth: 4
  7:
    pred: 4
    text: '- tečky zobrazují učící data - čára zobrazuje naučenou křovku Model generalizuje
      protože se pohybuje okolo bodu s určitou chybou. Pokud by body procházel přímo
      generalizace by nefungovala. Tak by se mohlo stát, když bychom použili velmi
      vysoký stupeň k, např. počet trénovacích dat'
    truth: 2
  13:
    pred: 3
    text: Model má na vstupu sekvenci, kterou zakóduje a provádí nad ní výpočet. Na
      vstup první vrstvy je zapsán stavtovní vektor. Jakmile první vrstva vygeneruje
      sekvenci (část sekvence), předá tuto část na vstup druhé vrstvy. Ta na základě
      vstupu a výstupu první vrstvy generuje další výstup fex) = IT p(x|x|x|x| _ 1|x)
    truth: 3
  14:
    pred: 3
    text: Je vhodné, aby dostával odměnu průběžně, protože tím se zrychluje proces
      učení. Pokud by dostal odměnu, vždy pouze na konci, nebylo by nutné poražovat
      posilované učení za samostatnou skupinu;Muže
    truth: 3
3a3284a0871ed9e4bef8d9913724f16b:
  2:
    pred: 4
    text: MAX;1 MNV;O 20 10 8
    truth: 4
  4:
    pred: 4
    text: DK D42;Díky;2 - 3 4 5 6 7 8 9 10 x x x X 0 x x x x x x X X x x x x x x x
      x x X D1 = {5}, Dz = 13, D3=
    truth: 4
  9:
    pred: 1
    text: '- hlboké učenie (deep learning) posilované učenie (reinformament learning)
      - shallow learning - KNN (convolution neural networks);- strojové učenie - supervised
      learning - unsupervised learning - semi-superined learning;- expertní systémy'
    truth: 3
  14:
    pred: 3
    text: Može aj ako sa blíží k splneniu úlohy. Môže to pomoď nasmerovať agenta k
      splněním celej úlohy, která môže byť dlhá a zložitá na dostahnutie (vyhraj celá
      hra) a jeho odmena može byť, že porazil jedného supera z viacerých, čo mu môže
      dopomoď k výhre. Problémy to spôsobí ak to není vhodná situacia, kedy by mal
      dostať odmenu, čo nemusí znamenať, že povede k cůli Porazil 1 súpera � porazí
      dalšího súpera v tej častej hre neznamená že ta hra vyhrá.
    truth: 4
3a3d21d3d346f65e160c3859d0a79dc3:
  1:
    pred: 4
    text: 'X;190: X 2�0: Bx 3s0: AX 400: x;AXXEX;dosiahne ciel z ľubovoľné počiatočního
      stavu'
    truth: 4
  2:
    pred: 4
    text: MAX;MIN;5;II;O;ušetříme nemusia prehladať;sa
    truth: 4
  3:
    pred: 2
    text: 'greedy search: a* (problem, 0, 1X) : a* (problém, 0, 0);DFS'
    truth: 2
  4:
    pred: 4
    text: 1;z;3;„;s;6;7;8;9;10;X1;X;x;x;x;x;xD1 = {1, 2, 3, 4, 5};x2;Š;x;x;x;x;>;3X2
      s X3 x3 LX1;D1 = {2, 3, 4, 5} D2 = {1, 2, ..., 9, 10} D3 = {1, 2, 3, 4}
    truth: 4
  6:
    pred: 2
    text: 'funkcie:;p(y|x);DISKRIMINATIVNÍ;GENERATIVNÍ;68;- mapuje vstupy x na výstupu
      (labels) priamo rychlejší je - potrebuje viac dát, pri menšom počte dát su pretrénuje
      a zle generalizuje;generuje pravdepodobnostný model;- počíta pravdepodobnosť
      Bayes. vzorcom:;p(4|x|= p(x|y). p(x);ply;príklad: gaussovský;klasif.;íklad:
      lin. regresia;- stačí mu menej dát na natrénovanie - keď už má model vie navzorkovať
      ďalšie dáta'
    truth: 1
  9:
    pred: 1
    text: supervised learning (učenie s učitelom) unsupervised learning (učenie bez
      učiteľa) semi-supervised learning reinforcement learning (posilované učenie)
    truth: 1
  10:
    pred: 4
    text: -;19. ledna 1945 x3 = max(VI2. X2, D) x2 = model (w|w|w) x1, 0);13/XII x,
      max(vstup, 0)
    truth: 3
  11:
    pred: 4
    text: Rozmery vstupu a počet konvol. vrstiev - učiteľné parametre kanály vstupu
      (počet) (wxhx(+ 1);výška;bias;počet;konvol. vrstiev;šírka;concut �;G;h;w
    truth: 2
  13:
    pred: 3
    text: TI P(wn|Wh / who - ..., wi?) P(w2, w2, ..., w. akt. slovo predchádzajúce
      slová eta rozdělená na slová Autoregresné Seg2 Seg generujú výstupné vety slovo
      po slove. závisí na všetkých predchádzajúcích Každé nové slovo;slovách.;Honza;šel;(ven);-
      slovo;je;input;sequence onza went outside to;25;...;START HONZA;na celom minulom
      vstupe
    truth: 4
3c47f8987e710f7b4cb3fddd88b90692:
  3:
    pred: 1
    text: 65;DFS;2o;a (mroblu, 0, 4°) a"/ problém, 9",
    truth: 2
  4:
    pred: 1
    text: X, I D;„;3 4;- 2 - 1 2 3 4;5;- § 9 /10 56;Podtržení zimní vyřazení
    truth: 1
  9:
    pred: 0
    text: '- strapové učení neuronové síť'
    truth: 2
  13:
    pred: 3
    text: P(MúX) mai Následující slovo je generováno na základě pravděpodobnosti jak
      i jak předchůdců;p(wa) p(w2 Iwa) PIW2 IW2 W.
    truth: 3
  14:
    pred: 3
    text: Ano, já vhodně aby dostával odmíny i kalgz.;(průběžně). Pokud by dostal
      odměnu až za splnění, nemuselo by dojít ke splnění úlohy - obdržení odmny;se
      blíží k řešení
    truth: 3
40e971aa0d0f94173372792184d7c18b:
  2:
    pred: 4
    text: MAX;MIN;10 Po;x u nepodstatné
    truth: 4
43986b8b6ebee0468cbde54d39668894:
  4:
    pred: 4
    text: 10;* X;x *;3X3;D1 = 5 3 D2 D3 = {2;3x LX;3tít
    truth: 4
  9:
    pred: 2
    text: učenie s učitelem učenie bez učitele posilované učenie semi-supervised learning
    truth: 1
  12:
    pred: 4
    text: (F z 2);vztahy na
    truth: 4
  14:
    pred: 4
    text: Je vhodné aby dostával odnem ku př. -> letos náš ciel je aby plnil úlohu,
      nie sa přiblížiť. ak by bol odmeněný průběžně jinak by to mohlo spôsobit problémy
      ako například, že by začal preferovat určité akce, čo by mohlo vše ve všeobecnosti
      nesť k horším výsledkom.
    truth: 2
43d4fa03bc9f11129af3e68ceb8890dd:
  1:
    pred: 4
    text: 'Posloupnost akcí: A BX ABX'
    truth: 4
  6:
    pred: 2
    text: 'P(c|x) generativní model: — učíme se P(x|C) a P(c) a pomocí;-;"Baesova"
      vzorce počítáme gaušovský klasifikátor;diskriminativní model: se učí;- Lineární
      / Polynomiální regrese;P(c|x) přímo;generativní: * Potřebuje méně dat než diskriminativní
      - Pomalejší než diskriminativní + modulární diskriminativní : + rychlejší než
      generativní — Snadno se přetrénuje - potřebuje více dat'
    truth: 0
  8:
    pred: 4
    text: PAMĚT a;P(Nak) . P(PozINa6);P(Nakl Poz);P(poz);0,9 =;22 0,9;X 0,9x = 0,2
      . 0,9 0,2 . 0;x;0,9;P(Pozitivní) = 0,2;X = 0,2
    truth: 4
  9:
    pred: 1
    text: '- učení s učitelem;- učení bez učitele — Posilované učení;- Semi-supervised
      - learning'
    truth: 1
  11:
    pred: 4
    text: hodnoty Filtrů;Počet parametrů = (velikost filtrů) * počet filtrů
    truth: 3
45c6ae61bc1ecb52540c701d0158b3c4:
  7:
    pred: 3
    text: Nakreslil svou dátu, které odpovídají zašumenej časti kvadratickej funkcie,
      a regresní prianka, která správne odhaduje nezašramenné díla To, že generalizuje
      je spokojené tým, že máme vhodne nastavený stupeň pobyvan a learning rute a
      aj počet iterácií učení Aby negeneralizoval, tak stačí dat nevhodný learning
      zato, alebo napríklad nastavit příliš vysoký stupeň polynomu alebo trénovať
      model příliš dlho (pretrénovanie)
    truth: 3
  11:
    pred: 4
    text: konvolučné jádrá � jejich hodnoty;tel;teda;a, b, c, ...;- (počet vstupných
      kanálov) x (výšku konvolučného jadra) * (šírka konvolučného jadra) * počet konvolučných
      jadier) alebo počet výstupných kanálov
    truth: 4
49370e21cf26e14fd95bad47c4c64feb:
  2:
    pred: 4
    text: MAX;MIN;D;8;úspora 2 uzly
    truth: 4
  3:
    pred: 4
    text: 'aby simulovala greedy;parc;depth-first search (DFS)?;greedy search - g:
      return 0 aneb;a*(problem, 0, h);4.;DFS - (aX|problem, g, O) by simulovala BFS;-
      není možné;heuristika [4] musí vracet nižší hodnoty pro levé usly a výšší pro
      pravé � (problem, fy, h-upravená)'
    truth: 3
  4:
    pred: 4
    text: X3SX2 D1 = {1, 2, 3, 4, 5} D2 = {2, 4, 5... 10} D3 = {1, 2, 3, 4};D1 = {1,
      2, 3, 4, 5} D2 = {1, 3} D3 = {4};3x2 W3;D2 = {13 D3 = {4};D1 = {5};W22 < 41;úzly
      z
    truth: 4
  10:
    pred: 1
    text: p(nula);u -;- musí být orientované acyklické
    truth: 4
  14:
    pred: 3
    text: Záleží na velikosti problému a řešení. Dávat odměnu pouze při splnění úkolu
      může zapříčinit, že agent neví, které která akce ve velké minulosti ho dovedly
      k odměně. Tedy je možné používat obě varianty, ale záleží na dané problematice.
    truth: 3
495ef79db86e9a0196ac1c8f89e61f67:
  1:
    pred: 1
    text: X-;A -> B - X
    truth: 4
  3:
    pred: 2
    text: greedy:;a*;a, o r;problém;DFS
    truth: 2
  14:
    pred: 3
    text: Nie, petiaľ agent nebude dostávať odmenu aj přibližne nedokáže rozoznať
      kroky vředli k pribláženiu sa ktoré jeho ciela a které ho oddialili.
    truth: 2
4c12e29eaddc50e059d6ea3575524431:
  1:
    pred: 4
    text: 'A p. KANTAOX;STAV 2: AMAN STAVY: XAABA StAV 3: xAADABA;xAHABX;Po'
    truth: 4
5053112ed2eb6e04292b5773a3faaebe:
  3:
    pred: 3
    text: '65: ax (problem, 0, hx);funkce, která vždy vrací O;DFS:;ax (poble;0,0'
    truth: 2
  7:
    pred: 1
    text: model generalizuje, protože není ax? + b + c body pochází přímo, na vině
      je nedostatek dat. Po přidání může vypadat následně
    truth: 1
  9:
    pred: 1
    text: Učení s učitelem Učení bez učitele Posilové učení
    truth: 1
  10:
    pred: 4
    text: acyklický, vrstvený, žádné vazby v rámci vrstvy,;vztah;( 8;nebo
    truth: 2
  12:
    pred: 1
    text: '01'
    truth: 3
527d06b610e162f0535cc5616c255c12:
  1:
    pred: 3
    text: 1-13 2 - 0A 3-34 4-2A;A_A;B=> x;A;Nejdříve se pomocí 3xA dostaneme z jakéhokoliv
      stavu do stavu (2) a z něj pomocí B do 1) a z něj pom. X do
    truth: 4
  2:
    pred: 4
    text: MAX;MIN;O;3;10
    truth: 4
  13:
    pred: 3
    text: 'Generují výstupní sekvence na základě vstupní + již vygenerovaných sekvencí.;seg
      = inpub - seg while (trve): s= generate - seg (seg) segesí if (done) return
      seg'
    truth: 2
5461d6183a165604c103a4923fcab04c:
  6:
    pred: 1
    text: 'Generativny model: - snažíme sa modelovať rozloženie hustoty pravdepodobnosti
      príklady klasifikátorov: lineárna, regresia, gaussovský klasifikátor - výhody
      na natrénovanie stačí málo dát, nemusí sa tak ľahko pretrénovat - nevýhody:
      pri nejakej odľahlej hodnotě nemusí fungovať správne Diskriminativny model:
      - mapujeme vstupy x na výstupy y na základe = f(x) - príklady klasifikátorov:
      logistická regresia, SVM (Sypport Vector Machine) - výhody: vie pracovať aj
      s odľahlými hodnotami - nevýhody: pri malom počte dát sa môže pretrénovať'
    truth: 1
  7:
    pred: 3
    text: Příklad trén. dát pre regresný problém:;Príklad riešenia:;Naprostená krivka
      je polynóm 2. rádu v tvare y = wo + w1x + 14, X. Polynomiálna regresia je špeciálny
      typ lineárnej regres kotvy x čím vytvárajú protože sa pridávajú bázy do tejto
      rovnice polynóm z tejto rovnice. Nemám Model generalizuje, tebe nepřechádza
      každým vzorkom a tým by správne klasifikoval aj na nových nevidených dátach
      Aby model negeneralizoval, musela by to byť polynomiálna regresia vyšších např.
      lyžno + 4, x + W. X + IV , 27 kg *;bídy;ro (napr. k
    truth: 1
  9:
    pred: 1
    text: prehľadávanie stavového priestoru strojové učenie neurónové siete
    truth: 3
  10:
    pred: 0
    text: 'výstupem musí byť vektor pravdepodobností;o;výstup: vektor'
    truth: 1
  13:
    pred: 3
    text: 'Tieto modely generujú vety na základe pravdepodobností.;Modelujú pravdepodobnostní
      funkciu: plurit / p(w|wx n. w. w. am.) to znamená, že vypočítají pravdepodobnosť
      prvého slova, potom pravdepodobnosť druhého slova na základe pravdepodobnosti
      prvého slova potom pravdepodobnosť tretieho slova na základe pravdepodobnosti
      prvého a druhého slova atď.'
    truth: 3
  14:
    pred: 3
    text: Je lepšie, ak dostával odmeny aj při blížením k splněním úlohy Protože potom
      vie na základe týchto odmien si vytvořiť cestu k cieľu.
    truth: 3
55153f3976b813a5a04f49ae4dce8ac9:
  6:
    pred: 3
    text: GENERATIVNÍ MODEL SE UČÍ PRAVDĚPODOBNOSTI NĚJAKÉ vlastnosti (např červenost)
      a přes ní pat trpení Říká kam věc s těmito vlastnostmi patří. PROToŽP VÍ ROZložeNÍ
      PRAVDĚPODOBNOSTI JE SCHOPEN I ODHALIT ANOMÁLII (BONIS- KTERÝ PLINE Z ARCHITEKTURY)
      PŘÍKLaD KLASIFIKÁTORU JE NAPŘ GAUSSOVSKÉ KLASIFIKÁTOR. PŮKRMINATIVNÍ MODEL SE
      SNAŽÍ POUŽIT NAUČIT ZDA ODŘÍKT S VLASTNOSTÍ JE TÍM HLEDANÝ NeBo NE NEZNÁ TAK
      rozložení pravděpodobnosti a tím pasem nepozná ani ANOMALII - KLASIFIKÁTOR MAPŘ.
      LOGiSTICKÁ REGRESE Již máme málo rat na učení jsou lepší generativní které nemají
      tendencí
    truth: 1
  7:
    pred: 3
    text: '- TEČNÍ JSOU PATA Křivka je naučená regresní křivka PRŮZKY JSOU TESTOVACÍ
      DATA;x ABY NEGARIZOVAL staČilo by zvíšit K naTolik aby trpěla over-fitingem
      a Díky tomu nefungovala na testovacích datech NAKRESLIL JEM TAKOVÁ DATA OBY
      KOPIROVACÍ ŠUMEM COŽ ODPOVÍDÁ NAŠÍ REGRESNÍ TŘÍDCE s Y= Bot BIx + BAY? GENERALIZUJE
      PROTOŽE JE DOSTATEČNÉ složitá aby pochopila tréno v datech, ale není příliš
      složitá aby nefungovala dobře na jiných DATECH MIMO TRÉNOVACÍ SADU (PUNGUSK
      NA NICH DOBŘE)'
    truth: 4
  10:
    pred: 1
    text: směr dAT u predikce je v nich pouze Jedním směrem „Dopředu“ nedochází K
      Žádnému předávání dat ZPĚT a PODOBNÉ pouze dopředu,;52;O1
    truth: 3
  11:
    pred: 2
    text: '- ČÍSLA VE KONVOLUČNÍM JÁDRU (KROPIC) A PŘÍPADNÉ BIAS PORUD TV JE;Počet
      všech učitelných parametrů v je pak;C = W6 - CC + B, kde;WC - jE ŠÍŘKA KERNELU
      HC - vÝŠKA KRRACHU - POČET KERNELŮ (POKUD je jich více, B - POČET BIAG HODNOT
      O oblikla příp'
    truth: 3
  13:
    pred: 4
    text: Slovo Slovo slovo ANOT;nejdříve ENKODER zahoduje;o Kontextový vzor LSSMEN
      V PRVNÍ ČÁSTI POSTAVE NA VSTUP SPECIÁLNÍ STARÉ gimbol a vyberveruje první slovo
      toto Slovo jde OPŘE NA JEHO VSTUP A VÝGERMERU SR DALŠÍ SLOVO Takto pokračujeme
      pokud nevÝGERNeROSE CSTOPY gÉMOL POTŘ SKONČÍME BŘADY CELÉHO TOMUTO pROCESU JE
      PRODÁVÁN JAK KONFECTOVÝ VEKTOR TA POJEDNÁ VYGENEROVANÉ SLOVO. MODELUJE PRAVDĚPODOBNOST
      SLOV(A) V ZÁVISLOSTI NA KONTRKTU A PŘEDCHÁZEJÍCÍM SLOVĚ P(SLOVA) = KONTRX A
      POSLOVALI;VÝZNAM VĚTY DO „KONTRXTOVÉHO vRATORU“ A tento vektor Je předá dekodéru,
      které
    truth: 3
  14:
    pred: 3
    text: Není to vhodné, protože to způsoby Možná že agent ani tuto odměnu nenajde.
      a není možné se pak zlepšovat, protože ani nevíme jaké z Agrentů byl Lepší (VARIAKY
      iNSTRUKCÍ) TÉMĚŘ TO ODPOVÍDAT náhodnému prohledávání protože nelze úplně zaručit
      že se to agent kdy NAUČÍ
    truth: 3
554f1cfee56cf20c2f51a5331933eb85:
  3:
    pred: 2
    text: 'greedy search: aX (problem, 0, h) DFS: ax (problem, 0,0'
    truth: 2
  7:
    pred: 1
    text: Trénovacie dáta:;Príklad naučeného riešenia:;z „Diskrétných hodnot získavame
      odhad funkcie popisujúcej vstup nédá) Bern
    truth: 1
  11:
    pred: 4
    text: Konvolučné jadro
    truth: 1
55c36c77f5b1db93efa809d68b0c3ff3:
  1:
    pred: 3
    text: 'Do;1: A, A, A, B, B, x'
    truth: 4
  2:
    pred: 4
    text: MAX;MIN;1;nejvíce lze uvařit 2 uzly;1
    truth: 4
  4:
    pred: 1
    text: 11 B by;12 34 1 o AZA;67 C S;19 10;D3 = {4}
    truth: 4
  6:
    pred: 2
    text: generativní model prozložení dat (p(X|C) se nejprve naží mandelovat spolu
      s apriorní pravděpodobností p(C) diske teplé pomoci bayesova vroze zjistie p(C|X)
      gen Diskriminativní klasifikátor modeluje přiv rozhodování hranici p(X|C) příkladem
      je logická regrese - generativní - k-neared/generalický klasifikátor, Výhodou
      generativního klasifik je, že téměř nelze přetrénovat, nevýhodou je že zbytečné
      modelujeme celý pocto, když většinou stačí rozhodovací hranice. Výhodou diskrim.
      je jeho „univerzitnost“ srodu lze zněnou poradů nazdit na jinou úlohu, problémem
      je vodez/ovoce fitting
    truth: 1
  9:
    pred: 4
    text: číslo) konvoluční filtry;šich filtr x vojsk filtr * počet kanálů natop x
      před filtrů (topoly 323 Kuř) + před filtrů (bas)
    truth: 2
56ffb625c1d50b61aa838947499f8ea9:
  1:
    pred: 4
    text: ABX;B
    truth: 4
  2:
    pred: 4
    text: MAX;MIN;� odvežeme vyznačené z uzly
    truth: 4
  3:
    pred: 4
    text: 'Greedy: glubso; hulaht;DFS: h(n) so; g(n) = kdo k sa bude znizovat s každým
      nevštíveným vrcholem � teda počítatelný vrchol bude model g(o) = 0; pri prohľadzení
      potromkov budeme jednotlivým potomkem přirodovat -1, -2, -3, ..., tým potom
      AI rozbalí posledního potomka, jeho potomkom přivádíme hodnoty J: - e--l-1,
      -l-2; ..., čím dovielme, že AX začne prohlídávat posledního potomka. Teda potrebujeme
      udržiarť globálne sedm číslo k a postupne ho zmenšovať.;es;� průzbah # vhodnoty
      vztah své hodnoty'
    truth: 4
  4:
    pred: 1
    text: De = § 5;D2 = {13;DI = § 47
    truth: 4
  7:
    pred: 2
    text: 3;tečky si data, že je polynomý model 2. rádu. Log. reg. 2. rádu se bo +
      B1x + B2x? akcí že dáta vieme celkem presně modelovať parabolog, model bude
      vhodné generalizovat .;Negeneralizoval by, ale by naše dáta boli generované
      processor vyššího rádu (nepr x ), případne ak by dáta boli periedické (sin)
      Protože pol. regressa 2. rádu nic je periodická fu.
    truth: 4
  10:
    pred: 4
    text: � orientovaný � acyklický � Huzol je buď tensor, alebo funkcion -;6 III;octnit;1
    truth: 4
590c21c83ef826040fbb869666b99554:
  1:
    pred: 4
    text: 1. A 2. A 3. A 4.;D3
    truth: 4
  2:
    pred: 3
    text: MAX;MIN;66;nebudou se prohledávat (může v nich být cokoliv
    truth: 4
  6:
    pred: 1
    text: generativní model neodhaduje posteriorní pravděpodobnost P(c|x), ale vychází
      z předpokladu, že data pochází z nějakého rozdělení toto rozdělení odhadne spolu
      s pstí a pomocí nich apriorní � ple teprve počíta postupní pst. Např. flusifikátor
      z gaussova rozděle diskriminativní model rovnou modeluje posteriorní pst, že
      dato patří do nějaké třídy. Např. lineární regrese.;spor;ní
    truth: 2
  7:
    pred: 1
    text: Zakreslil jsem body, tak aby tvořili konvexní transport, takže se dá namodelovat
      modelem polynem. regrese 2. řádu. Dost je hodně s odchytkou ve více směrech,
      proto dobře generaliza Pokud by bylo málo dat, model by mohl fungovat špatně.
    truth: 3
  8:
    pred: 0
    text: P(pls) = 0,09 � P(n|s) = 0,15, p(h|p) = 0,1 = p(s|pl= 0, 9 p(s 0,2 P(p);=?;P(p(pís)
      = P(plsl. P(s) = P(slp) - p(pl P(p) = P(pls) - P(s);p(s|p) P(pls. S. 9.012 0,9;82;0,2
      P
    truth: 4
  10:
    pred: 3
    text: Musí to být Noriendovaný graf zloobsahovat;vykly.;nějaká vrstva neuronů,
      která je na konci povolnému nelineární
    truth: 4
  11:
    pred: 4
    text: konvoluční matice počet vstupních parametrů x počet výstupních a výstav
      konvoluční matice z šířku k ní
    truth: 4
  13:
    pred: 3
    text: Věty jsou rozsekané na jednotlivé regmenty (slova). Na vstup první krabičky
      se dá první pleve, na vstup druhé první 2 slova, na vstup třetí 3 slova atd.
      Model se tím učí jaká pravděpodobnost, že další slovo může být v sekvenci. Používá
      se rekurenční WN.
    truth: 3
5b664b32ef0f72ca651874d45d93b7db:
  4:
    pred: 3
    text: D1 = {2, DIFIM, 53 2 = {1, diferentifikace 4, 4, 10} 3 titul, ab;D;3x2x3
      x3 LXI;D1 = {5 B D2 = {13 D3 = {4 }
    truth: 4
  5:
    pred: 2
    text: 'Příklad:;Budeme mít 3 třídy - jablka (j), hrušky (h) a švestky (š). Dále
      pak pozorování;udává střed roztažení na ose x v souřadním systému To můžeme
      odhadnout pomocí Maximum likelihood Estimation: zbraní ? 6 VCETIPIZI h = EMES
      pro = drymax p(X|11) = arg max Tip(xuin) pro N|x mk) 3) Dále můžeme využít Bayesův
      vzorec pro výpočet posteriorních pravděpodobností: p(x|c) p(c) p(x|c) P(c);např.
      váha a průměr 1) Nejprve je nutné vyjádřit si apriorní pravděpodobnosti všech
      3 tříd, tedy např. a tak dále pro ostatní třídy. (tzn. 3x celkem) P(jablko)
      = počet jablek počet všech 2) Dále je potřeba odhadnout střední hodnotu a kovarianční
      matici pro vícerozměrné � korelace Gaussovské rozložení u = LyI = E 3 s roztažení
      na ovec sp.;toto budu odhadovat pro každou třídu! Tedy 3x v tomto případě;p(c|x):;p(x);s
      p(x|x) p(k)'
    truth: 4
  7:
    pred: 1
    text: Generalizuje;Nakreslil jsem funkci vy (x), což je zjevně nějaká kvadratická
      funkce. Touto funkcí se snažím proložit body (trénovací data, abych pak dokázal
      pro nějaká nová dosud nepoznaná data odhadnout co nejpřesněji vy.;Model negmeralizuje,
      je zjevně přetrénovaný;Negeneralizuje
    truth: 3
  11:
    pred: 4
    text: konvoluční jádra;vstupní obrázek;konvoluční jádro např. 3x3 x 180 počet
      kanálů jistou šířku;jádro postupně přikládám ke každému pixelu obrázku a provádím
      konvoluci;64x64 x 180;výšku;šířku;počet kanálů;konvoluční jádro je nějaká matice:;5;2;1;8;5;z;"
    truth: 2
  13:
    pred: 3
    text: 'Honza;jako by;Honza šel;na jahody;Exempláře;18 8b START HONZA Šel na jahody;Autoregresivní
      faktorizace;pravděpodobnost celé věty je součinem podmíněných pravděpodobnosti.
      Lze vyjádřit jako: P(w2, w2, w2, ... un) = P(w) P(w2|w2) P(w3|w2, w1)... Autoregresivní
      Sey2sen 1) Nejprve nastavím prefix (poslední známé slovo) -> zpočátku prefix
      START 2) Na základě vstupní sekvence a předchozího skrytého stavu počítám pravděpodobnost
      toho, jaké slovo bude nejpravděpodobněji další 3) Celé to opakuji při překladu
      se ještě na konci nastavuje přízvuk STOP. 14. Je při posilovaném učení vhodné,
      aby agent dostal odměnu jen při splnění úlohy, nebo i průběžně podle toho, jak
      se blíží splnění úlohy? Proč? Může to naopak způsobit nějaké problémy?'
    truth: 4
5eab670eb5ce6ebf722e191d7114c8c9:
  1:
    pred: 1
    text: A;B, B, x, B, X
    truth: 4
  2:
    pred: 0
    text: MAX;MIN;o;O
    truth: 4
  4:
    pred: 4
    text: D1 D2;D;1;X;2;3;„;5;6;X;X;7 X;x;X;8;X;9;X X;10;X;x;D1 = {2, 3, 4, 5} D2
      = {1, 2, 3, 4, 5, 6, 7, 8, 9, 103 D3 = {1, 2, 3, 4}
    truth: 4
  12:
    pred: 3
    text: 2. pluk;So i
    truth: 2
  14:
    pred: 3
    text: lepší je, když dostává odměny i při přiblížení k řešení (pokud je to možné),
      protože tak rychleji najde řešení X problém by nastal, pokud by to ohodnocení
      nebylo správné (přišel by o výhodnější řešení)
    truth: 4
6f5ac7c2b9cfe572c3654ff47bd016cb:
  2:
    pred: 4
    text: MAX Z;ca;MIN;16;O
    truth: 4
  7:
    pred: 3
    text: Overfit;Výsledný model regrese (v =x) generalizuje jelikož se nenechal ovlit
      šumem a bude schopný najít správně i pro nové data Nakreslil jsem body a rovnice
      y=x s mírným Šumen. kdybychom modelu dovolili využít více řádu polynomu mohl
      by se přeučit a snažit se všechny body protnout. Čímž by způsobil že neví data
      by nenacházel správná y (regeneralizoval by)
    truth: 2
  9:
    pred: 4
    text: Klasická - prohledávaní stavového prostoru, generativní, diskriminativ Shallow
      - ní modely, CSP, ... Deep - využití Neuronových sití
    truth: 3
  10:
    pred: 4
    text: ANALYZA;� OVT;IIV;Nelze cyklus;-> bur;nelze;Lze
    truth: 3
  11:
    pred: 4
    text: Jádra konvoluce;počet =;(nx m + 1) C n-šířka konvolučního jádra m-výška
      -||- +1 je bias C - je počet jader;"
    truth: 3
  12:
    pred: 3
    text: O;LIST;To;->;04
    truth: 4
  13:
    pred: 3
    text: V každém kroku generují na základě toho co doposud vygenerovali.;P(X|P(X|X))
      P(XS|P|P|P(X|P(X|))
    truth: 2
  14:
    pred: 3
    text: Ne - agent by se učil provádět průběžné kroky a mohl by ignorovat splnění
      úlohy
    truth: 2
772bee97261975d8ac3d623892156933:
  2:
    pred: 4
    text: MAX;MIN;58 Maximálne za ušetrí prehladávanie 2 unlov
    truth: 4
  9:
    pred: 1
    text: '- strojové učenie: supervised - unsupervised - semi-supervised - reiforement'
    truth: 1
  10:
    pred: 4
    text: '- acyklický - orientovaný;O'
    truth: 4
7f5b23849aa9f99628ec8fd57bd68a15:
  5:
    pred: 1
    text: Pro každou třídu rozdělení bude potřeba vypočítat takže celkově 3x4 = 12
      parametrů M, Ma, Br, B2, Tyto parametry je možné odhadnout pomocí metody maximální
      věrohodnosti. Potom na základě vypočítaných parametrů vypočítáme posteriorní
      pravděpodobnost příslušnosti k každé třídě a vybereme maximální. p(Catel Mai,
      M2, 2, Bři, 6ž, 2)
    truth: 1
  8:
    pred: 0
    text: P(nak.) = 0, 2 p (poslnak) =0,9 = P (negl nak) =0,1 (henak / pos) = 0,1
      = p (nak) pos) =0,9 P(pos) = p(poslnak) . p (hak) p(nak (pos);0,9 . 0,2;0,9;=0,2
    truth: 4
  11:
    pred: 0
    text: učitelnými konvolučního;parametry konvoluční vrstvy jsou hodnoty jádra.
    truth: 1
  13:
    pred: 3
    text: 'Input evidence Fonn weat.;Výstupné sekvence generují postupně, slovo po
      slovu. Tyto sítě modelují pravděpodobnost následujících slov na základě předchozích:
      P(wa, ..., wa) = p(wi). p (w|lwi) . P(w2, wi)...;Honza šel;o 0 - ...;Staré Honza'
    truth: 3
825b1ce7fb0e1b7007e1df994a9c2f05:
  4:
    pred: 4
    text: D1 = {1, 2, 3, 4, 5} ka = D3 = {1, 2, 3, 4} D2 = {213;x3 LXI;3X2 LX;13;D2
      = {13 D3 = {4} D1 = {53;3X2 LX3 X3 LXI;-;D1 = {5} D2 = {13 D3 = {43;x3 LX, �
      3x2x3;J
    truth: 4
  8:
    pred: 4
    text: S - sick, H-healthy, P-positive, N - negative P(s) = 0,2;P(s) = 10,9;P(P)
      =?;P(H|P) = 0,1 P(S|P) = 0,9 = 1-P(H|P);P(P) =;(PIS) . P(s);P(S|P);.;A 0, 2;=0,2;20%
    truth: 4
  10:
    pred: 4
    text: acyklický, directed (musí nať udaný smer);ŠOFTIAX
    truth: 3
  11:
    pred: 4
    text: filtry konvolúcie;počet = k . k. , s počet koní do velkostatku filtra;velkosť
      vrstvy
    truth: 4
  13:
    pred: 4
    text: 'generují so po slovách v n modelují pravdepodob. funkci: P(w2). P(w2).
      w2). P(w2/ w2, w2, w2, w1)... počítají s okou pravd. budú sloví v nasledovať
      po sebe postupným shladaním generovaných slov na vstup NN'
    truth: 3
837032a3c2d8c387024651eb631ff039:
  1:
    pred: 2
    text: 3x;(B);DS - from every state
    truth: 1
  7:
    pred: 1
    text: 1X2;každý bod je sample z trénovac;a sady;K=2);Nakreslený model generalizuje
      protože jsem schvalně nakreslil rozležení dat, které se dá regresí 2. řadu namodelovat.
      Kdybych nakreslil tečky (samply) ve tvaru f-cí cos nebo sin nebo nějakou nelinearní
      fci tak by regrese (K=2) nestačila, nastal by underfitting. PÍPÍM PÍSMI = PODLEJDY;0.
      9. 0. 2 =
    truth: 4
8ce0af8bc8320da3cdad209461ad5f7c:
  4:
    pred: 4
    text: D1;3;9;10;D;3;výsledek:;D1 = §53 D2 = {13 Os = k 4
    truth: 4
8f89c29a449586071735da9d9be70bb9:
  2:
    pred: 4
    text: xino5 B.:5 č. 5 23 600 BPZ;MAX;B. 5;MIN;D Z úzky / pomším podmínku, cokoliv
      zvolím do posledních 2 uzlů v 350 BEM * hráč 1 se nikdy nerozhodne pro tento
      uzel � zbytečné počítání;protože nikdy nebude s
    truth: 4
  6:
    pred: 1
    text: 'diskriminativní: dokáže na základě nějaké fce (signoide/ nepř.) rovnou
      určit příslušnost do nějaké třídy; logistický klasifikátor využíván velice často
      kvůli rychlosti výpočtu Onepotřebuje tolik dat - loss: cross entropy'
    truth: 1
  11:
    pred: 0
    text: konvoluční filtry;(výška x a šířka + hloubka + bias) + počet = parametr
    truth: 4
  14:
    pred: 3
    text: Bylo by lepší, aby dostal odměnu až při splnění úlohy Agent ztrácí motivaci
      k učení, když dostává odměnu za průběžné kroky � možné zhoršení výsledku
    truth: 1
9107b38aa824dfbf43dc6389416d5d1e:
  9:
    pred: 1
    text: přípravy;Nadutila;- supervised learning - učení s učitelem - unsupervised
      learning - učení bez učitele - semi-supervised learning - reinforcement learning
      - seff-viset learning)
    truth: 1
916f1b2e1dead796dd18343b179494dc:
  2:
    pred: 4
    text: '- - 2;= 8;MAX;MIN;3;279;MLA odd;do = a;MAX;MIN;přeřezané;- treba zoradiť
      od nejlepšího po najhoršie na listové úrovni;nebudú;řadávat;v tomto případě
      je najlepšie zoralit uzly;od nejhoršího po najlepšieho'
    truth: 4
  3:
    pred: 2
    text: 'Greedy search: a(problem, 0, h) � greaty search ignoruje g, sústredí sa
      len na neuristiku;Depth-first seatch: s výššie poskytnutými informaciami nedokážeme
      funkciu a princitiť, aby simulovala DFS. A používa v o svojej inflementácii
      prioritnú frontu. princip Elf�A Exack), pokerne desiabant implementacem DFS.
      Teda do fronty se najprv ukládajú úzly s vysokou hodnotou, v každej dalšej úrovni
      DFS používa stavy � nedá se'
    truth: 4
  5:
    pred: 1
    text: 'Gaussovský klasifikátor pri ZD vstupných dátach je popísaný vektorom;ux;ktorý
      navorí o středních hodnotách jednotlivých třed;Parametre môžeme zjistit pomocou
      logistickej;*iY) ktorá na hl. diagonále obsahuje o rozptyly v daných dimenziach
      a ostatně prvky hovoria závislosti medzi dimenziami (je symetrická). Pre natrénovanie
      takéhoto klasifikátora potřebujeme při 12 reálne čísla: puxury) a k 3 reálne
      čísla: 5x, Ty, Sxy) pre každá trieda na generovanie jej pravdep. rozdelenia.
      Potřebujeme 3) = 15 reálných čísel 2 počet pře použijeme tried regresie, namiesto
      log. signoridy;pří- a maticou Q;teda;soft-max/náme už 3 trioly namiesto evo;4
      = SOFT - MAX (X TV|+ b) � Trénujeme vektor váh ú a bias ý vektor X= XII => 2D
      dáta;vstu'
    truth: 1
  6:
    pred: 2
    text: Generativny model;- generuje pravdepodobnostně rozdelenie zišťuje p(c|x)
      p(x|c), p(c), p(x) - napr. Gaussovský;pomocou;klasifikátor;vytváří decision
      koundary - zišťuje p(C|X) priamo - napr. logistická regresia
    truth: 1
  10:
    pred: 3
    text: Musí to byť orientovaný a acyklický graf;S - pri učení je treba počítať
      gradienty jedným prechodom od konce na začintok (používa sa chain rule, čiastkové
      gradienty sa medzi sebou násobia) -> je treba, aby graf nemal cykly (acyklický,
      a, aby sa dalo isť od koberca na začatek (orientovaný);W2 - minc-
    truth: 4
  13:
    pred: 4
    text: '- počítajú pravdepodobnosť nasledujúceho slova pomocou prefixu sexuencie;P(w2,
      w2, wos) = p(cos) - p(w2|l w2) - P(w2) w3)... P(wos) was, wäre - um) prefix
      = už spracované slová. Na základe prefixu chce model ťaťšie slovo, napr: pri
      prefixe "Ja" je velmi pravdepodobné, že dalšíe slovo môže byť "somk � "Ja som"
      je často používané, má teda velkú pravdepodobnosť. Stefanovi hod. dobytka) tol
      udílel se gen-word (word, prefix) generuje nové slovo závislé na prefixe;Povět
      Pokud slat konecated = s. P, prefix = LJ en erated - appeud (gen-word (segr/off,
      None) pretix append (sey Loj) for i in range (1, len (seg): generated. appeud
      (gen ward LI, prefix) pretix (gen-word (segifi), prefix) prefix. append (segr
      LiJ);retur'
    truth: 4
  14:
    pred: 1
    text: Niekedy je velmi těžké doslabnuť cieľ. Agent AU by sa odmena dávala len,
      agent by sa k nej vóbec nemusel za dobiahnutie dostať (alebo by to trvalo velmi
      dílo). Aleto je častokrát lepšie dávať odmeny aj za stavy, ktoré sa blížia cielu
      (nie len za cieľ) Odmenu však môže byť tažké stanoviť pre dané stavy, ale by
      bola stanovená zle; môže to agenta "oklamat“ a ten sa potom bude učiť nesprávne
      veci.
    truth: 4
93f74ef23a742aa725be9a7edf20c3d0:
  2:
    pred: 4
    text: MAX;MIN;59;O;D
    truth: 4
  3:
    pred: 4
    text: '65 to. 9=0, h-h DFS: g = len (death), h = o (neboru o)'
    truth: 2
  5:
    pred: 4
    text: '- řešíme pravděpodobnost P(c|x), tedy pravděp., že dato x patří do třídy
      c P(X|c) P(c) P(c|x) - řešíme podle Bayesova vzorce: P(x) - P(c) můžeme přímo
      dopočítat, je to priorní pravděpodobnost, dopočítáme pro všechny 3 tři P(x|c)
      budeme muset odhadnout rozložení hustoty pravděpodobnosti gaussovského rozložení
      P(x) dopočítáme ze sčítacího a násobního pravidla P(x) = 2 P(x|c) => P(x, c)
      = P(x|c) P(c) P|c) P| P| P|C) =P(c|x) P(c|X) P(c|X) = P(c|X) = ) K);po - musíme
      odhadnout nejdříve parametry Gouss. rozložení P(x|= N|x; MO ?) = tedy střední
      hodnotu pr a odchylku o - pro odhadování parametrů je vhodné využít odhad s
      maximální věrohodností (ML;20'
    truth: 2
  8:
    pred: 4
    text: P(makoř) = 20% P(poz(nakaž) = 90% (zdr (poz) = 10%;P(poz);P(pozlude). P(nak);P(mak
      / poz);90.20;90;20%
    truth: 3
  9:
    pred: 3
    text: '- rozpoznávání řeči, osob, podezdřelých transakcí asp. v hraní počítačových
      bez - překlad - vyhledávání informací - generování hudby, dle zadání dobráčků,
      textů - posilované učení'
    truth: 3
  10:
    pred: 4
    text: '- musí být orientovaný a nesní obsahovat cykly;- např.;KART.-IV-SOUŘAD
      - LISTINACE'
    truth: 4
  13:
    pred: 4
    text: P(w2 (w2 - 1, wo?) = II P(w2-1, w2-2. ..., nos);pseudokád:;poreg. dele.
      segr to-segra na základě předchozích vygenerovaných slov se snaží vygeverovat
      slova další;vygeneruj první slovo na zaklada vstupu; for (generuj in delkavoty)
      podívej se na predchozí slova a vygeneruj pravděpodobnosti, vyber nejpravdepodobnější
      slovo,?
    truth: 4
  14:
    pred: 3
    text: '- je vhodné agentovi dávat odměny průběžně, aby věděl jakým směrem postupovat
      respektive, jak se mu daří, protože v RL ohodnocujeme až řešení, ale nevíme,
      jak se k němu dostat'
    truth: 2
94474f32d4666fa6a215c2f3c304d86e:
  3:
    pred: 2
    text: 'g, (cesta) : return o;a* (problem, g1, hx);DFS:;h2 (cesta): return 0;JZ
      (osta): return encoresta) (-1);a x (problem, g2 (h2)'
    truth: 4
  4:
    pred: 4
    text: D, = {1, 2, 3, 4, 5} D2 = {x, 2, 3, 4, 5, 6, 7, 8, 10} D3 = {12, 3, 4, 7,
      pit, it, h. 103;D1 = {2, 3, 4, 5} D2 = {2, 3, 9, 5, 6, 7, 8, 10} D3 = {1, 2,
      3, 4}
    truth: 3
  9:
    pred: 0
    text: učení s učitelem (supervised learning);učení bez učitele (unsupervised learning)
      semi-supervised learning;hluboké učení (deep learning)
    truth: 1
  10:
    pred: 1
    text: u;o
    truth: 4
  11:
    pred: 4
    text: prvky konvolučního jádra;počet p = w h - c;p ... počet parametrů w... šířka
      konvolučního jádra h... výška konvolučního jádra c. k. počet kanálů vstupního
      signálu b .. počet konvolučních jader ve vrstvě
    truth: 4
  13:
    pred: 3
    text: 'pst funkce: P(věta) = P(w2). P(P(w2|w2). P(w2) w2) ... P(w2) irrewp,;pravděpodobnost
      vygenerování určité věty složené ze slov wx ... věk je součin podmíněných pravděpodobností.
      Pst na vygezerování i-tého slova za podmínky předchozího vygenerování 1. až
      i-1 slova.;1) První prvek dostane na vstupu kontextový vektor od enkodéru a
      speciální symbol START 2) Zpracuje aktuální stav předá dalšímu prvku + vygeneruje
      nejpravděpodobnější slovo 3) Další prvek dostane na vstup aktuální stavový vektor
      od svého předka + na posledy vygenerované slovo 4) Zachová se stejně jako v
      bodě? 5) Toto se opakuje dokud není zpracována celá vstupní věta'
    truth: 4
946210e51441cdd5d807f3a7d958f9f9:
  6:
    pred: 1
    text: generativní - trénujeme rozdělení pravděpodobnosti jednotlivých tříd, P(c|X)
      vyjádříme s využitím bayesova vzorce - např. gaussovský klasifikátor diskriminativně
      - trénujeme přímo P(C|X) - např. logistická regrese;generativní funguje lépe
      s méně daty, ale plýtváme parametry diskriminativní - lepší s hodně daty, ale
      má tendence se přetrénovat na málo datech
    truth: 4
  8:
    pred: 4
    text: P(P|N|=0,9);P(N|=0, 2);ODM;P(N|PI = 1-0,720/9;P(N|PI. P(P|= P(P|N|. P(N);P(P|=
      P|PIN| PIN);P(P|P);0,9 . 0,2;0,9;0,2
    truth: 3
  10:
    pred: 2
    text: -4-7 kusy;01;23
    truth: 4
  14:
    pred: 2
    text: černo Vhodnější je až po splnění úlohy, při odměňování moc často se tak
      dobře neučí (např. bude pořád opakovat stejnou cestu, kde už odměnu dostal)
      může být lepší Učení může na začátku déle trvat (než se např. dostane do cíle)
    truth: 2
94c11b6d613717c655f2df563c47e9dc:
  2:
    pred: 3
    text: MAX;3;Š;- úspora = 2 udy;MÍN;je to jedno, nebudou prohledány (min už je
      menší než max z vyšší úrovně)
    truth: 4
  4:
    pred: 4
    text: 59 2;65/67;e;apro;A;10;*;12;kit;B;B B B UXXXXX ALAAAAAAA A V BIBLBIB B
    truth: 4
  11:
    pred: 4
    text: váhy v jádřech parametrů = (velikost jádra x) - (velikost jádra - y) - (počet
      výstupních hanáků
    truth: 3
  12:
    pred: 2
    text: 01;D;E
    truth: 4
9959b39950406bc66827b12959f783aa:
  2:
    pred: 4
    text: MAX;MIN;Prohledání vždy;Není co natřít;Tyto větším - 2 velké;Na tento se
      podívám a končím
    truth: 4
  5:
    pred: 0
    text: 'Co chceme: umět vypočítat P(třída;*;P(x);P(x| třída) - odhadujeme parametry
      normálního dvourozměrného rozdělení - je - střední hodnota (1 reálné č. - kovarianční
      matice 2x2 (4) - u a E odhadujeme metodou P(třída) - Počet dat dané třídy Počet
      všech dat "TPravděpodobnost výskytu třídy Výpočet - dosadí se do vzorce vyšetřované
      dato, výstupem pravděpodo- bnosti daného data pro 3 různé třídy.;Ohled diskribace;1)
      - Pro 3 třídy pak 15 reálných čísel reálná čísla) maximální věrohodnosti Tři
      třídy, 3 reálná čísla;Priorní prav. zvolené třídy Součet přes všechna P(x) třída);u
      E'
    truth: 3
  7:
    pred: 3
    text: Ředpokládám, že K=2=) y= w + wx + w - Nakreslil jsem nějaká lehce zašuměná
      data naznačující průběh paraboly a mezi nimi namodelovanou parabolu - dobře
      generalizuje, jelikož původní závěr byl parabola a po dosazení nemusel dostávám
      tvar, který bych očekával (generalizace = umím dobře odhadovat i výstup pro
      taková data, která jsem dosud neviděl) Negeneralizovat by mohl např. v situaci,
      kdy - přidám výrazněji zašum. data (outliers), odeberu data, výrazně zvýším
      stupeň polynomu bez přidání dalších tat (křivka by pak šla 'cih cak
    truth: 4
  14:
    pred: 3
    text: Nejspíše obecně záleží na typu určené úlohy, ale většinou bych esti řekl,
      že nějaké drobné dobrůtky (odměny) mohou spíše vést naučení správných rozší
      chování. Problémem může být, když je blízko jak splnění cíle, tak jeho naprosté
      porušení - například mohu být blízko tomu dát mat, což je dobře, ale můžu být
      i blizko tomu dostat mat, což je blbě. Dalším problémem může být, že nemusíme
      vědět, jak daleko jsme (co je dobrý stav v šachu (jak daleko je mot?) a řešením
      tohoto problému vlastně řešíme danou úlohu
    truth: 4
9b33f3eaa48336d891ace3b901cdf7b7:
  1:
    pred: 4
    text: 'v alam;čo wydím;Triesene: BX 3X;DB;x;B8X'
    truth: 4
  11:
    pred: 4
    text: paranetre filtrov konvolučnej vrsty;všecky porozebrané vzty;počet parametrov
      jedné vzty NAXXIC avšak pozor, porazila v konábrah filtra sa rovných, proto
      je tento počet;NAXY;C - počet kazílov vstupu N - před filtrov vrsty X, Y - roznesy
      filtra;PUT;v každej;vstve môže byť až N filtrov. každý filter musí mať romaklý
      počet kanálov ako vstup. Mali by měl všetky filtre roncké roznosy.;učitelné
      paraztu;vyty
    truth: 4
9f14e4b60aa060a04813f144a2533dea:
  2:
    pred: 4
    text: MAX;MIN;600;úspora - 2 uzly
    truth: 4
  5:
    pred: 4
    text: matice středních hodnot, komunikace - dvoj mobilita 1x2 2x2 odhadneme pomocí
      MC - maximum likelihood - odhadujem parametry tak, aby rozložení co nejvíce
      odpovídalo vstupním datům pomocí nich vypočteme pravděpodobnost příslušnosti
      do jednotlivých tříd;Sice pro každou třídu
    truth: 2
  8:
    pred: 4
    text: x ... je nakažený ... je pozitivní p(x) = 0,2 p(y) =0, 9 p(x|y) =0,1 � n
      (x;(x) negle p(x|y) = (y) p(xry) = p(x|y) p(o);(y) =?;1) (x);,;0,9 0,9;0,2
    truth: 4
  10:
    pred: 4
    text: acyklický.;složen z nelimánních matematických operací;o;- ouk
    truth: 2
  12:
    pred: 4
    text: 01 = f(11) O4 = f(11, 12, 13, 14);S
    truth: 3
  13:
    pred: 3
    text: Generují výstupní sekvence iterativně. V každé iteraci je výstup vektor
      pravděpodobnost tokemů (slov). Pravděpodobnost každého 1 rokem je závislá na
      již vygenerovaném prefixu a celkovému vstupu (překládaná věta).
    truth: 3
9fae5964355733843daa9b7668b03bed:
  4:
    pred: 4
    text: D1 = {3, 4, 5} D2 = {2 ,2,..., 9,10;112. omezení;11 z1. overení
    truth: 1
  9:
    pred: 1
    text: 'Umělá inteligence se využívá v různých oborech: matematika, statistika,
      medicína, ekonomie, impormatika;„Strojové učení'
    truth: 1
  10:
    pred: 4
    text: Grac musí být;acyklický;a orientovaný;deterministický);smysl funkce;vstup;výstup
    truth: 4
  14:
    pred: 3
    text: Je nutné, aby agent dostával odměny průběžně (počet odměn odvozen např.
      od délky řešení Chodné Málo potěm může způsobit nejednoznačnost postupu, takže
      se agent nemusí třídě. dostat do cíle.
    truth: 3
a59e81da1b3adf890fe6c32a90507d3c:
  3:
    pred: 2
    text: 'g-9 (12);return o: a* (problem, g-9, h): depth - first search: dkgotech
      g = dts () k return path. leut);;h_dfs If return 0;;a* (problem, g-d fs, hodfs)'
    truth: 2
  4:
    pred: 4
    text: D1;D2;C /;/ / /;/;/;/ o;/;An;7 4 / /;8;* / /;q;*;/;10;XII.;/;D1 = {53, D2
      = {13, D1} = 243
    truth: 4
  5:
    pred: 1
    text: '1;M;z reálne čísla;= (a) Mo pre jednu triedu = Teda 3x pre celý klasifikátor.
      (ke 41.2,33: x, y, a, b, a do eR);4 reálné čísla;2 = 12+4). 3 = 18 reálných
      čísel odhad: napr. pomocou metódy maximálnej vierohodnosti Ak máme tri 2D gausovky,
      neme určiť pravdepodobnosť príslušnosti 20 bodu do každého z rozložení, z čeho
      určíme, do akého rozložení bod s nejvyššou pravdepodobnostou patrí. Tam je zatriedený.'
    truth: 2
  7:
    pred: 3
    text: body představujú trénovacie dáta parabola představuje řešenie řešenie p
      prechádza priestanou tah, aby hotovost nejbližší všetkým hodom Riešenie je přeložené
      cez body tak, aby bolo čo nejbližšie všetkým hodom z trénovacích dát = aby bola
      hodnota chybovej funkcie čo najmenčia.;Riešenie by negeneralizovalo, ak by sa
      neriadilo určitou množinou trénovacích dát (v nejhorším prípade by vůbec nezáviselo
      na trénovacích datach)
    truth: 1
a95f81531d5247f5a1082ca2f27c10ce:
  4:
    pred: 4
    text: k;£5;6;19 77 Druhý pokus X3 (Kl => N3 = 3, 1, 2, 3, 43, x71 3x2ʒ x3 => 42ť1;Str;D1
      = {2, 3, 4, 5} D2 = {23, 40} D3 = {1, 2, 3, 4};FeeR;6;x1 S 1, 29 49 + 10) 3
      = 95 = 12;14 StŘEDA;D1x/2 D2 2/3/4 6 2/9 10 D31 2 3
    truth: 3
  10:
    pred: 3
    text: 'teyklický orientovaný graf;vstup -> (109-2m) - L4) � 60 % -> 600 -> 22
      -> ... výstup N: tensor rak B: tensor biasů L: (skryté) vrstvy NS (dot): součin
      (clat product) (sum): součet'
    truth: 4
  11:
    pred: 4
    text: '2 slova: váhy ketnelu více slov: koeficianté váhy konvolučního filtru -
      jádra;počet parametrů: rozměry x kanály;= II r. Vizi=;pro obrázek (ZD): šířka
      x výška * počet kanálů např. 3 pro RGB;x k;kde riz je i tý rozumě konvolučního
      jádra k z počet kanálů'
    truth: 3
  14:
    pred: 3
    text: Oba přístupy jsou možné. Pokud odměňujeme i průběžně podle toho, jak se
      blíží splnění úlohy, bude se učit výrazně rychleji, avšak může se naučit špatné
      (nebo neefektivní) vzory pro řešení. Mohou tedy být nepřesnější výsledky Opačně,
      pokud odměňujeme jen za splnění úlohy, můžeme očekávat lepší výsledky. Jejich
      dosažení může ale vyžadovat nepřístojně dlouhou dobu.
    truth: 4
afe81d7a80453838440677e5234cabd3:
  1:
    pred: 1
    text: A;pomrzla ale;SXXABA;D3
    truth: 1
  10:
    pred: 1
    text: úplný, agresivní, orientovaný
    truth: 2
b6d73a834ec5aad1c8b3b05ccf9b43c0:
  2:
    pred: 4
    text: MAX;MIN;2000 500
    truth: 4
  4:
    pred: 4
    text: 'xx1: D1 = E223, 453 D3 = 21, 43 D2 = 21. 108 FALKERY: D2 = 813 D2 = 848
      D1 = 853 x1: 455 v x 3. 12 4 V;D1 = 853 D2 = § 13 b3 = 543'
    truth: 4
  7:
    pred: 3
    text: model druhého rádu (R=2) sa pokuša k tátom napasovať parabolu x - model
      generalizuje protože, pre danú veľkosť parametru k máme dostatek dát;- aby model
      NE generalizoval potrebovali by sme buď k nastavit na vyšším hodnotu napr. 8
      � alebo mať 1 z V malý počet dát pro zvolené k
    truth: 4
  11:
    pred: 4
    text: -;počet;parametrov = výška konv Jadra * šírka konv Jádra * počet kanálov
      konv Jadra * počet konv Jadier V jedno; Vrstve;učitelné parametre sú hodnoty
      konvolučného jadra / jedier
    truth: 4
bf4039f02a2e6a6e0a4ebb98806aaf90:
  3:
    pred: 2
    text: greedy search -> a* (problena, 0, h DFS � a * (problem, depth (n), 0)
    truth: 2
  4:
    pred: 4
    text: 1;2;s;10;D,;X;x;X;D2;D3;X;x X;x;X;r X;X x;X x;X X;X x;x;D1 = 82 83;5);13
      343
    truth: 4
  9:
    pred: 2
    text: Nurrew AI - rózne nástroje - spanafilter slavek engine autonome auta prepis
      reči text to speech prehľadoč
    truth: 2
  10:
    pred: 0
    text: (x2-w+ b)
    truth: 4
  13:
    pred: 3
    text: předchádzajúcimi slovani P(w|P(w2| ) = P(wa). P(w2|w2) ... P(wn) was...
      wann) Vstup je posunutý o 1 slovo pri generovaní aby model ten neprepisoval
      slova.;Pravdepodobnosť slová vo vete závisí a je podmienená
    truth: 3
bf6d0974fd70a67fada3fb1b1f9d63d2:
  1:
    pred: 1
    text: Akce = A, A, A, A, B, x;X;OB
    truth: 4
  2:
    pred: 4
    text: MAX;MIN;D;60
    truth: 4
  9:
    pred: 1
    text: Samostatné učení učení těsné ztěžkě;Samostatné učení Učení s učitelem Částečné
      učení s učitelem Učení s odměnami
    truth: 1
  10:
    pred: 4
    text: Neurony jsou uspořádány dovisky. Vrstvy jsou seřazeny za sebou Výstupy neuronů
      jedné vrstvy jsou vstupy neuronů vrstvy druhé Ne Neuronové sítě mají vstupní
      a výstupní vektor;vstup;Vhstava 1 Vrstva;Výstup
    truth: 1
  12:
    pred: 2
    text: 01;In I2
    truth: 4
c7262a745405372830d5c0a21157e71d:
  3:
    pred: 2
    text: greedy sedrd:;g=0, h=h*;DES igeo, neo
    truth: 2
  6:
    pred: 2
    text: diskriminativní - logistická regrese;generativní - gaussovský klasifikátor;PŘSLY;přístupy
      se liší v tom, že generativní klas. modeluje hustotu rozložení pravděpodobnosti,
      ze které pak počítá pravděpodobnost, zatímco diskriminativní modeluje pouze
      podmíněnou pravděpodobnost, která nás zajímá. /než hady Výhody - generativní
      nepotřebuje tolik k natrénováni ale počíta i zbytečné informace k celé rozložení
      hustoty - diskr. potřebuje více dat ajinak je náchylný k přetrénování), ale
      poté je efektivnější.
    truth: 2
  7:
    pred: 1
    text: dhad původní funkce;data (body);generalizace je způsobena dostatečným množstvím
      dat a nízkým stupněm polynomu;aby;ne se na;egeneralizoval — mít méně dat
    truth: 3
  9:
    pred: 1
    text: učení s učitelem učení bez učitele posilované učení
    truth: 1
  10:
    pred: 4
    text: Musí být acyklický;a;výstup;12;max/xpown, oj
    truth: 4
c9c4060106249fda11a3043c33e8d8a2:
  2:
    pred: 2
    text: 'MAX;MIN;O;nepřehladáva;Max úspora: 2 uzly Hráč (super) vyberá mininezáleží
      aké ohodnotenie majú poslední dva uzly, keď ten prvý má 1, a to je menšie, než
      3, a 3> hráč nad faku maximalizuje, teda určitě pôjde fakt, kt. vedie k zisku
      5.'
    truth: 4
  3:
    pred: 2
    text: 'greedy search: a* (problem, 0, W);depth-first search: a* (problem, g*);
      0)'
    truth: 2
  4:
    pred: 4
    text: 'D1;1;10;3. D3: 23, 6, 9; 12) 3. D2 = L 3, 6, 9, 12, 25; 18, - 39,;D;XIX;X;x;x;D1=2
      = D= 1=1=1=1=1=2,-2,-2,-10,-2, =10,-2, = 10 kg DNB - D3 = 1, 24 = Da = 22, 109
      D3 = 21,2,38 = D, 2, 2, 2, 2, 10 5 - D3 = 21, 2, 3, 49 = D2 = 2, 4, 10 D) som
      zvolila 5, lebo najmainej obměřickí 8 D1 teoreticky môže byť tohotude z 22,3,
      n, Na Da 10) nemá uplyn.;D1= 254 D2, 22, ... 105 D3 = {1, 2, 3, 4};„ale čím
      je nižší je;tým ciac done edujedu'
    truth: 0
  6:
    pred: 1
    text: Generativny model gaussovský klasifikátor;Diskriminativny model lineárna
      regresia;-> výpočetne náročnejší výhodnější je vtedy, ale máme nějaké info /
      tušíme aké majú data rozloženie / hustotu počíta najsbór pravd. p(x|c) a p(c)
      a tak použije poe výpočet p(c|x) pomocou Bayesovho vzorca;· hladá deliacu hranicu
      medzi tředami dát � stačí mu menej dát;� odhaduje pravdepodobnosť p(c|x) priamo
    truth: 1
  7:
    pred: 3
    text: '- bodly sú trénovacíe dáta - priankol (výsledek regresie);polyn. regrese
      k =2;Body (� sú dané dáta, nachádza sa v nich aj šum. Model (piankas) generalizuje,
      lebo neprechádza pramo, všelkými bodmi ale iba přibližue. Generalizujeme aj
      pre to, že máme dostatek dát. Aby sme negeneralizovali. � buď by sme měřili
      počet trénovacích dát zalelo by sme vyšli stupeň polynómu;(rybvaté 3, dato zpôvodných
      výsl. parabola idebrian černej'
    truth: 4
  13:
    pred: 3
    text: Rozdelujú veku na tokeny (slová) a snažia sa predikovať aké slovo bude následovat.
      Na začátku je token START a na konci toheu OND. ARE, You řou,;START bYToU AKCE
      YOŮ
    truth: 3
caa43cc5a94bfc67bf4e1bc08953c835:
  1:
    pred: 0
    text: So;BBAB
    truth: 2
  4:
    pred: 4
    text: X;X2;1;X;2;3;4;5;X;6 X X;7;X;X;8;X;X;9;x;x;10;X;x;E2,3,4,53 k 1, 2, ...,
      9, 103 = k 1, 2, 3, 43
    truth: 4
  9:
    pred: 0
    text: Strojové učenie a neurónové sieťe.
    truth: 2
  10:
    pred: 1
    text: Acyklický;graf;NORD1;WORD2;KORDJ;START;KORPM;KOROZ
    truth: 3
  11:
    pred: 4
    text: hodnoty vo "filtrech“ - kernel/jadro;počet vstupných kanálov - šírka jadra
      - výška jadra - počet výstupných kanál.
    truth: 4
  13:
    pred: 3
    text: Na vstupe dostanú o jedno slovo posunutú vetw, ktorú majú preklatť. Postupne
      predikujú nasledujúce slovo na základe predchádzajúcej sekvence.
    truth: 3
cd3566ec8a54afb4c8f0ad4f22b7a48e:
  1:
    pred: 4
    text: AAX;X;AAB;xx ABBAY;xx ABBAx;-;DB;1. X. 2. X 3. A 4, B 5. B 6. A;7. X
    truth: 4
  6:
    pred: 1
    text: funkcie hustoty pravdepodobnosti generativní - ide a zistenie rozdelenia
      pravděpodobnost;- napr. gaussovský klasifikátor - nevhodné pre velké úlohy;diskriminativní
      - ideo zavadenie do triedy, nie pravdepodobnosti (aj bed napr. log. regrese
      pravděpodobnosti vracia) - nape. logistická regrese
    truth: 1
  7:
    pred: 3
    text: '- generalizuje, nie je preučený na trénovacie dáta.;- negeneralizuje -
      ak regresiu neobmedzíme na urč. stupeň polynómu;- pozn.: rovnový vstup přeučený
      na trénovacie dáta J ak obmedzíme regresiu na 2. rad, do určitej bude vždy generalizovať
      vó väčšine prípadoch (ak je dostatok bodov a majú nějaký rozptyl)'
    truth: 2
  13:
    pred: 3
    text: plus, w2, w3 ..., was) = p(w|l p w2 ) p (w3) w2, w1)...;p(wh/wna, was in...);=
      Пр(wп|w<, wпаз+ ла);- generovanie slova vždy závisí na všetkých predošlých -
      v prvou kroku je na vstupu len encodeí vstupná veta a takem START - každé dalšie
      slovo potom závisí na prodošlých
    truth: 3
ce1e0e61482d8d323c9af9f6dddd0a6b:
  1:
    pred: 1
    text: opakování posloup. akcí ABX až do dosažení cíle;OB
    truth: 1
  3:
    pred: 2
    text: 'greedy search: g = 0, p= h depth first search: h= g*'
    truth: 2
  5:
    pred: 1
    text: 'třídy;P(c|x);posteriorní pravd. 2 Parametry: (C = množ. tříd) Kč ru - stř.
      hodnota N O2 - rozptyl = 1/4 s (xo-u) čeč reálná čísla odhad metodou maximální
      věrohodnosti (Pro které param. je věrohodnost největší?);X);apriorní pravd.;+;-
      odhad (gauss) pravd. pro danou třídu - data celkem podoba čítelných hodnot 0-1
      (pravděpodobností) pro každý ze 3 param P(c) a P(x) výpočet pravděp. na základě
      dat, P(x|c) odhadem parametrů.;výpočet pravděpo;data'
    truth: 1
  6:
    pred: 2
    text: 'diskriminativně tr. m.: soustředím se rovnou na odhadnutí P(class/observo
      např. ometody maximální věrohodnosti např. logistická regrese'
    truth: 1
  7:
    pred: 3
    text: tečky = trénovací data čára (funkce) = řešení, které se mohl model naučit;kdyby
      negeneralizoval neuměl by nakreslit fci a jen by následoval těžký;trénovací
      data přesně nekopírují funkci, ale je k nom přidán šum (gaussovský), aby se
      model přesně neučil umístění jednotlivých bodů -> aby negeneralizoval, musela
      by být trénovací data přesnými hodnotami fce bez jakéhokoliv šun
    truth: 1
  11:
    pred: 4
    text: konvoluční jádro;ji = 2xi. ai hodnoty konv. jádra -> hodnoty aktuálně počítaného
      výřezu dat;konv. jádro;o;o;číslo i = 0-8 (pořadí);tedy např. yj = 1.1 +1.1-2.3
    truth: 1
cefd5c86a5a731b024525b6a26663cc8:
  1:
    pred: 1
    text: 'BS= 20, 1, 2, 3, 43 35, = 8 � 1, 2, 45 l 352 = 81,23 /14 � BSŽ = 223/3
      � = 213 IX � 3 BSP = 903;A ->;x;posloupnost akcí: A, A, A, B, X, X, X'
    truth: 4
  2:
    pred: 4
    text: 'MAX;MIN;8;maximální úspora: 2 uzly'
    truth: 4
  5:
    pred: 0
    text: p(x|c) - p(c);p(x) Výpočet je založený na Buyessově vzorci p(c|x) = pro
      popis likeli každou na dvourozměrných datech je potřeba vektor střední hodnoty
      pro jednu třídu (2x float) a kovarianční matice (4x float). Dále je potřeba
      pro danou třídu znát apriorní pravděpodobnost (1x float). Nakonec je potřeba
      spočítat evidenci. K tomu se využije sum rule, pro které navíc budeme potřebovat
      likelihood a provdě- podobnost dalších dvou tříd (14x float). Celkem je tedy
      potřeba reprezentovat všechny parametry 21 reálnými čísly. Pro rozhodnutí do
      které třídy naměřené dato patří spočítáme dle vzorce výše u MAP klasifikátor
      p(c||x), p(c|x) x, p(c) X) a vyberem třídu s největší pravděpodobností.
    truth: 4
  6:
    pred: 1
    text: generativní model - modeluje na stotu rozdělení pravděpodobnosti z jaké
      byla data generována. Tento model dále využívá z rozho dnutí u nových tat do
      jaké třídy patří. - Pro natrénování stačí méně dat. - Model může být negativně
      ovlivněn odlehlými hodnotami Diskriminativní model - snaží se rovnou najít rozhodovací
      hranici. funguje lépe na větších datech - vizito přetrénování;GM - Směsice gausovských
      rozložení D. M. - Lineární logistická regrese
    truth: 2
  7:
    pred: 1
    text: data byla nagenerována polynomem řádu 2 s gaussovským šumem. Model polynomiální
      regrese druhého řádu se naučil téměř dokonale a generalizuje;Datu byla generována
      stejně jako v předchozím případě, ale bylo jich nagenerováno málo. Byl použít
      model, který je vysokého stupně a byl přetrénován. Data tedy Negeneralizuje.
    truth: 4
d5505c6e738d0a635e0ca6d2d07340a8:
  4:
    pred: 4
    text: 2 34;5;7 8 minimum;12x;xxxx x x x;D, = {1, 2, 3, 4, 5} D2 = {2, 3, 4, 5,
      6, 7, 8, 10} 3 = 1, 2, 3, 4 �
    truth: 1
  6:
    pred: 1
    text: Generativy model - pohrbujeme odhadníď pravdepodobnosť pre jednotlivé priedy
      a rovnev ohladnúť pravdepodobnosť p(x|c) - následne přeme použiť Rogenovlý vrouc
      pre výpočet pořadovny pravdepodobnúti p(c|x) - lineárna regusia;difriminativy
      model - odhadujeme priamo pravdepodobnosť p (c|x) z dostupných dát a ich „tvrzební;-
      napr. logistická regarda
    truth: 1
  7:
    pred: 1
    text: '- nakreslil nom dáta, které hali vytvorené nošumenou parabolou. Keďže máme
      lineárnu regariu druhého radu, dokue generalizuje tieho dáta, keďže jej odhadom
      hier paralola (3, x 3, x 3, 4) môže byť;- aby model negeneralizoval potuchovali
      by mne výžiť k tah, aby začal bližšie opisovať dáha, aby určal operfiktivy.
      Model sa bude mořiť minimalizovať loss funkciu (MSE) a dostatočně velké K mu
      dovolí podložiť funkciu dátomi - overfitting extrémny'
    truth: 4
  9:
    pred: 1
    text: 'general AI;padlá komplexny modelu: - machine barniny - sdallow loming deep
      larming'
    truth: 2
  11:
    pred: 4
    text: '- konvolučné jadro - jako váhy;vstupných před panovatou - výška konvolučního
      jadra * šírka konvolučného jadra * počet kanálov x počet výchovných evangelov'
    truth: 4
  13:
    pred: 3
    text: p (wa) wo - w;v;následne Pre vhodné slová na dané místa získa určité pravdepodobnosti
      z kterých si vyberá. Móže vybrať ho najpravdepodobnějšie aleho podľa určitého
      rozloženia pravdepodobnosti. Perplexita - mi hovorí laľko slov má na výher v
      příjemech;Každé dalšie slovo obmedruje možnosti (pravdepodobnosti) nasledujúcich
      slov. Puto pre každé slovo nemusí buď do úvahy včetly slová len tie, které dávajú
      mysel s tými predchádzajúcimi. slovo, p(m) INCOLACE - stavby véta
    truth: 4
d7aab42d4569ee5a25f14e40629baac8:
  10:
    pred: 1
    text: nedoceněnou;x1. stol;- musí moc vstupy - musí muť váhy — musí mít binsy
      - musí mať výstupy - objektivní funkce (loss function) - anotované dátata (data
      - burget);urby;viz;0;+
    truth: 2
  11:
    pred: 0
    text: váhy kernelu, bias kernelu;počet vstupou veľkosť kernelu x počet X ernelou;6;VE;V;in
    truth: 4
  12:
    pred: 4
    text: O;O, závisí nad Oo a I, Oe závisí nad O, a I2
    truth: 2
d93e16d9eedd00e09bdea8e2562b9e78:
  1:
    pred: 4
    text: o;ApRESIDENT VES S = EX, A, Y
    truth: 4
  3:
    pred: 4
    text: 65;DFS;� h= hľ h = podle;- return 0;;fakt off- (uzel) k return 1/uzel. depth
    truth: 3
  7:
    pred: 3
    text: generalizuje, neboť pro další data model co nejlépe odhaduje jejich hodnoty.
      - křivka, neboť K=2 (není limeární) - aby negeneralizoval, musel by přesně kopírovat
      trénovací data
    truth: 2
  8:
    pred: 1
    text: p(nakažený) = 0,2;(nakažený / pozitivní) = 0, 9 pozitivní nenakažený (není
      zde) pocitení =0,1, p(pozitivní l nakažený) =0,9;pomoc P(pozitivní) = ?;(pozitivní)
      natožení;(nakažený / pozitivní) = plankární lipl p(pozitivní) = p(pozitivní)
      = 03;nakažený) planitivní linie);p(nakažený / pozitivní);p(pozitivní);0,9;0,2
    truth: 4
  9:
    pred: 3
    text: Strojové učení Neuronové sítě Prohledávání stavového prostoru Gnozeologie
      AI (protože kdo by se nebál singularity)
    truth: 4
  12:
    pred: 4
    text: 10;C;Or-I. Ož - FI
    truth: 3
  14:
    pred: 3
    text: Průběžně, odhad optimální trajektorie jinak optižné odhadnout (roste exponenciálně);-
      nevýhoda - při nesprávném nesprávném nemusí dostat do cíle (lokální maximum)
      nacenění
    truth: 4
da6d7974b094aff71a711f08f4b890d0:
  4:
    pred: 4
    text: D;1;IX;2;3;u;5;6;1918;10 bylo to Na;Bronz Ullm;P2 p;X;LIDKY 3x2773;*;X;x;x
      D1 = 22, ..., 53 p2 = 21 ... 10 3 p3 = 21 1/3;Š;x;x;X
    truth: 1
  5:
    pred: 3
    text: Potřebujeme odhadnout štřední hodnotu M a stondartní odchylku 5. zboží hodnoty
      reprezent setnina reálným číslem. Použijeme maximální věrohodnostní odhad těchto
      parametrů. Pod pomocí těchto parametru dokažeme ZŠISA potřebné data pro brejesovský
      vzorec;P(class|obs) =;p(obsluhass). P(C|X|OSS);P(obs);6. Ke stavbě klasifikátoru
      můžeme využít generativní model nebo můžeme použít nebo můžeme použít model
      trénovaný diskriminativně. V čem se tyto dva přístupy liší? Uveďte konkrétní
      příklady modelů/klasifikátorů pro oba přístupy. Jaké jsou jejich výhody a nevýhody?
    truth: 1
  10:
    pred: 1
    text: '- neurony nesmí zaviset na výsledku šiného neuronu je stejné vrstvy - nesmí
      být cyplus - data se neposílají z partny'
    truth: 3
  14:
    pred: 1
    text: Ne, to není vhodné. V tonovém to případě agent bude se velice pomocí se
      učit (skoro vůbec) Pubežné výsledky busou směrovou genta ke správnímu řešení
      a urychluj to ceny proces Ale bez odměny v cíly, agent muže ponořit do lokálního
      stavu, který není cílový ale však dostane v něm odměnu.
    truth: 4
de9177b9575ef89d4b2f4e2c3a9d3cb0:
  8:
    pred: 3
    text: ' zugsfürste erst nicht am Ende dahin an Heraus genommen werden wird u.
      erst noch nicht anders das Eine verspachen verschien verseit deien versen Berseichen
      ven versen den veren zu zu zu zu zich zich zu zu zu zu zu der zu ver zu der
      zu der der Ba P(poz);P(poz / nak);P(nakl poz);P(poz / nak). P(nak) č. 9. 0,2;P(nak);(poz).
      P(nak / poz);0,9;P(poz) = 0,2'
    truth: 4
  10:
    pred: 1
    text: nemůže byť v nich cyklus;w,
    truth: 2
  11:
    pred: 4
    text: '- filtre (kundy);výška * šírka * 9'
    truth: 2
  13:
    pred: 3
    text: Na začiatku majú nejaká množinu slov, kterými začínajú vetu podľa nějakej
      pravdepodobnosti. Takto vygenerujú slovo w, Následne sa dalšie slovo generuje
      podľa podmienený pravdepodobnosti P(w2/ W1), potom tretie P(w2|w2, w2, w2) atd.
    truth: 3
  14:
    pred: 1
    text: taký, že nejlepší výsledek může ležať při velmi zlých výsledkech a pri přizbožných
      odmenách tam chcieť íšť nebude.;Ak dám průběžné odmeny, tak natrénujem rychlejšie.
      Problém může nastat
    truth: 4
e3d02a7e3b33f83005dc53baa3b1f72e:
  1:
    pred: 3
    text: 'Do;Postupnosť akcií: BBAX'
    truth: 4
  2:
    pred: 4
    text: MAX;MIN;88;Maximálna úspora za 2 uzly.
    truth: 4
  4:
    pred: 4
    text: XI;X2;1;X;Ihr;2;3;5;6;X;7;X;8;X;X;10;X;x1 E 33, 953 x2 c k 1,239,516,73,103
      x3 c q 123,93;3;x;X;x;x;X;x
    truth: 4
  5:
    pred: 1
    text: Kolko reálných čísel? - 6, 18 - 6 na 1 triedu, máme 3 triedy Ano odhadneme?
      - Môžeme použiť maximálny něcohodý odhad, kde hlídáme parametre O O = arguae
      M p(x|c) x a, 0) kde X n sú dáta danej kriedy;II=;- studná hodnota < = 2^° }
      = smezodatná odchýlka;* 3, leto tie má potřebné pre 1 třídu;Tieto parametre
      vieme dosadiť do vzorcu a vypočítať pravdepodobnosť pse, že dato patří do každej
      třídy. Uvidíme, že patří do třídy, kde má najvyššin pravdepodobnosť.
    truth: 2
  8:
    pred: 4
    text: nak-nakazený zda - zdravý neg-negativny poz-pozitivny P(neb) = 0,2 P(por)
      nak) = 0,9 P(zdr (poz) = 0,1 � Plauk (poz. 0, 9 P(poc) =?;P(x) P(Y|X);P(x|Y)
      =;P(M);P(Y);P(nak). P(pel mak);P(poz) =;P(nokl poz);P(X) P(Y|X);P(X|Y);P(voz)
      = 0,2 . 49;0,9;=0,2
    truth: 4
  13:
    pred: 3
    text: 'Modelují funkciu P(wx, wz, wz..., won) = Tiadel P(woj-y, wird, ..., was),
      teda generují slovo po slove a počítají, aké je najprvdepodobnějšie slov na
      základě vstupu a predchádzajúcich slov. Postop: 1. Eukodér zaháduje vstupná
      sekvence do kontestového vektoru. 2. Tento vektor sa dá na vstup spolu s špeciálnym
      slovem START. 3. Vygeneruje za slovo. 4. Toto slovo sa dá na vstup a vracím
      sa na krok 3, až kým mě je vygeverované špeciálne slovo reprezentujíce STOP.;Dekadér
      transformuje vektor reprezentující slovo na slovo.'
    truth: 4
  14:
    pred: 4
    text: Posilované učenie zieši problémy, které upoznáme odpoveď, ale vieme posádiť
      správnost (napríklad protesn folding). Zedže nepoznáme odpoveď, tak cesta k
      nej už vůbec nie, a teda je nemožné dávať odmenu za správnou cestu, kterú nepoznáme.
      správa Ale by sme cestu poznali, je otázne, či je posilované učenie správa cesta.;Ak
      by sme chceli priebožně vyhodnotiť správnosť riešenia, tak je rizika že NN za
      zasedne v nejakom lokálnom minime, nebo nemá motivácia hladať správne ciešenie.
      Ale mohlo by to spôsobiť rychlejšie trénovanie. Či je to vhodné teda závisí
      od konkrétnej úlohy.
    truth: 4
e3fb369e536a528a79919619d3ccb301:
  3:
    pred: 2
    text: greedy;g = return o h = h*;b(n) = g(n) + h(n);D;� zložitejšie, keďže ná
      íst najprv dole.... nie som si istý či by to bolo validné, ale niečo na štýl
      g = - 1x len (path) h = 0
    truth: 4
  4:
    pred: 0
    text: z;3;4 5;6;10;D1;D2;xxxx;D1 = {5} D2 = {2, 3, ... 10} D3 = {1, 2, 3, 4}
    truth: 1
  5:
    pred: 2
    text: -> klasifikátor bude popísaný gaussovskými rozloženiami tried, teda musíme
      odhadnúť ich stredné hodnoty u = 1/4 % i a rozptyly;o2 = 1/42 (x1 - u);� každý
      parameter bude reprezentovaný dvojicou číse [a; b], kvôli dvojrozmezným dátam
      � spravíme maximálne vierohodný odhad parametrov tak, že maximalizujeme hustoty
      pravdepodobnosti jednotlivých tried � odhad parametrov 5 12/2 = arg MAX p (x,
      h) � následne vieme zistiť sakou pravdepodobnosťou patrí nový vzor do tried,
      výpočtom posteriórnych pravdepodobností P(class) observation) = P(observation|class).
      P(class) P(observation) triedy -> u ktorej je nejvyššia pravdepodobnosť, tam
      ho zaradíme;J pre 3 triedy
    truth: 1
  6:
    pred: 1
    text: '- generativny -> napr. regresia, gaussovský klasifikátor e městem kout
      -> městská práce stav � modelujeme rozloženie, robíme odhad jeho parametrov,
      a až následne vieme určiť P(class|observation) � stačí menej dát - diskriminativny
      -> rovno určujeme P(class|observation) -> potreba väčšieho množstva dát'
    truth: 1
  10:
    pred: 4
    text: '- věda;Lok;dod + we;KVALE O'
    truth: 4
  14:
    pred: 3
    text: '- častokrát je vhodná aj prieběžná odmena, ale závisí od konkrétneho případu
      - ak sa má agent dostať z bodu A, do bodu B, tak by bez priebežných odmien vóbec
      nemusel najisť cestu, pretože ju ešte nikdy neabsolvoval (resp. by to trvalo
      neúmerne dlho a bolo by to neefektivne) - ak by autonómne autá trénovali na
      principe len koncových odmien, malo by to katastrofálne účinky, � potrebujeme
      vyhodnocovat priebežne'
    truth: 3
e3fcfce792cba2bd9b1f688e09b8636d:
  7:
    pred: 1
    text: generalizuje - snaží se proložit všechny body - overfitting, je potřeba
      upravit parametry
    truth: 1
e48e0794dca4b5b891f98b423b16fbe9:
  2:
    pred: 4
    text: MAX;MIN;10;9;608
    truth: 4
  3:
    pred: 2
    text: Greedy search = a* (problem, 0, h) DFS = a* (problem, 0, 0)
    truth: 2
  7:
    pred: 1
    text: Bady - trénovací dát. krivka - model naučený poly-regresion k = 2;Nevíme
      povídať, či model generalizuje, alebo nie, protože nemáme dostupné testovací
      dáta, na kterých by sme to overili. Model negeneralizuje, ak má vysoká presnosť
      (objektívna funkcia, napr. meansanevo error (maxim nízke hodnoty) pro náš trénovací
      dataset, ale nízká presnosť pro testovací dáta/dáta, které nevidel (adol hanich
      čnost
    truth: 4
  9:
    pred: 1
    text: a neuron - basel neuronové svate, r 1984;Založené na prehlídávaní stavového
      přestavu/matematických modelech
    truth: 2
  11:
    pred: 4
    text: učitelné sú hodnoty konvolučných matic (jadver);= u jako hyadro Nkamál Wado
      - šírka jedného konvolučneho jadra (hratice) filtru), najazdější hjadno - výška
      conv. jadra / najčastějšie 3 Neanál - počet vstupných kanálov (obrázka/z predd.
      vrstvy)
    truth: 3
  12:
    pred: 4
    text: vor;12
    truth: 3
e89c2ef8845bc8936dfb0dced67540b5:
  1:
    pred: 4
    text: A;Například posloupnost akcí A, A, A, A, A -ze stavu 2 se dostane do 2;čili
      vždy se dostane do stavu 2 a máme tedy jistotu, že akcemi B a následně x u dostane
      do cílového stavu
    truth: 4
  2:
    pred: 4
    text: MAX;viznalizace;postupného prohledávání � nejdříve najde 1, D poté nahradí
      0;S;50 tyto dvě hodnoty mohou být jakékoliv -> Min vrstva už nevybere nikdy
      vyšší hodnotu než -1, nemá tedy smysl pokračovat v prohledávání, protože již
      máme vyšší hodnotu 2;MIN
    truth: 4
  4:
    pred: 4
    text: XI;12;2;3;XXX.;4;X;6;7;89;10;XXXXIX;D1 zůstane nezměněná. D2 je omezena
      pravidlem 3X2> X3 na D2 = {4, 5..., 103 D3 je omezena pravidlem na D3 = 21,
      2, 3, 45
    truth: 0
  7:
    pred: 3
    text: hranici;kuželověky regrese zde učuje, že na jedné straně se nachází hodnoty
      „O“ a na druhé hodnoty model generalizuje (pravděpodobně, pokud se vzorky významě
      nezmění) a bude tedy použitelný při nových (ještě neexistujících) datech) -
      dokáže správně učit do jaká kategorie;regurní každosečka se zde snaží určit
      nejideálnější probčení grafu - aby byla chyba co nejmenší (Mean syranced ézrac)
      model generalizuje, tedy pokud přibudou nová data neměly by s každou přiliš
      pohnout -> oproti tomu model, který negeneralizuje se snaží až příliš ideálně
      položit data a je tedy na nová data nepoužitelý například
    truth: 2
  14:
    pred: 3
    text: hlavním cílem je zde danou úlohu splnit -> tedy dát odměnu při úspěšném
      splnění problému (je jedno jakým způsobem byl doražen) pokud jsou ohodnocovány
      malé hroby může to v krátkém horizontu mít pozitivní následky, ale ve výsledku
      nemusí být problém vyřešen což jde proti celému smyslu na druhou stranu může
      toto postupné vyhodnocování vést k lepším žením -> více efektivnímu než při
      ohodnocení výsledků na celém problému
    truth: 4
eae9dd0163ad1161a9ef65474a7ad30a:
  4:
    pred: 4
    text: X1;XXXXx x XX;XXXI;V
    truth: 4
  5:
    pred: 4
    text: Pro každou třídu dat přístupnie modelovat její rozložení, které vychází
      z ZD Gazurského založení. ZD normální založení má 2 parametry - střed a kovarianční
      matici. Stád je ZD velter, kovarianční vnitra 2x2 valice (na dagonité hlavní
      diagonále rozptyl, ve zbytku koaloce). Celkem tedy máme 3. 2=6 parametrů, pro
      jejich popis patrohrazíme 3. (2 + 4) = 18 císl Parametry odhodneme pomocí maximon
      liteliboval estimaton na datapných trénovac datech. K odhodlávat., že nový vzor
      patří do třídy vpřípadě Projevův vzorec P(chass|alo) = P(class) - p(abs) class)
      -, protože právě vyřaz P(obs|class), P(abo) síňme je určen dle odhodnotitele
      parametrů Gaussovského rozložení. Typicky je pak rodem třída s maximální apateriorní
      pravděpodobností. P(alo) = 6, P(dus) . P(clo) dass)
    truth: 4
  7:
    pred: 1
    text: Nahodil jsem trénovací data vycházející z funkce p - x dochovává o zimu.
      Vzhledem ke stupni K=2 se tady regrese dokáže tuto funkci dobře hmot a v případě
      vidání nových dat, model bude stále dobře odpovídat, tj. generalizovat. Pokud
      by data odpovídala funkci, co není možné pooddovat ve tvaru y = w1 + w2 x w2
      x + b, pak by vodel negeneralizoval. Napríklad pokud by trénovací data pokácela
      z funkce y = sinx x na intervalu LO, F2, podal by se nejspíše probodu naučil,
      ale již by neparalizoval voják pro interval 20, 25 %
    truth: 4
edfb9f97b5b92200783594b400a493aa:
  1:
    pred: 1
    text: 'řešení: A A A B X;(alternativa BBAX)'
    truth: 4
  9:
    pred: 2
    text: strojové učení, zpracování obrazu, data acience
    truth: 3
  10:
    pred: 4
    text: orientovaný acyklický graf;8 -> X -> IRdu) � 3;Softmax;peka
    truth: 4
  12:
    pred: 4
    text: 17;12;VA 1;VIII
    truth: 3
  13:
    pred: 4
    text: Tyto modely se skládají typicky se 2 části - eukoděr a dekoděr;enkoděr -
      zakóduje vstupní sekvenci do vektoru příznaků, který slouží jako jeden ze vstupů
      dekoděru dehoděr - generuje výstup po jednotlivých takenech, výstup každého
      kroku je vstupem následujícího - na začátku bere z enkoderu vektor příznaků
      FV a token START, při dokončení sekvence generuje token END;EnD;Inspekce IV
      Svatop.;(strana);dekoděr
    truth: 3
ee4b7041a56afa5dba176c9bb60a631d:
  1:
    pred: 4
    text: 7 AxBx;x Ax Ax Bx;r;S
    truth: 4
  4:
    pred: 4
    text: z;3;10;Listopad;D.;D2;x;O;x x;x;X;X;X;O x;X X;x X;X x;X;x;33;x;x;X;8;x;X;X;x;+;X;D1
      = {5};= E13 D3 = 243
    truth: 4
ef8bd6fc8702840dba8cc2d5d44d2119:
  1:
    pred: 3
    text: 'Postupnost obcí: kraA, A, x, A, x3 nebo také k B, X, B, X3, podmínkou je,
      aby jako druhá a čtvrdá akce byla provedena akce X, zároveň také první a třetí
      akce musí být stejná, ovšem nesm být akce X.'
    truth: 4
  2:
    pred: 4
    text: MAX;MIN;O;S;vždy označení x nebudeme prohledávat úspora 2 verby
    truth: 4
  5:
    pred: 3
    text: třeba odhodnou střední hodnotu a kovarianční matici k. u = [*I) - vektor,
      který vdává střed gausovky X - udává "roztažení guesark v davém MŽ = EX, ý)
      směru a K„2 karelaci dat zápasnou či počítání nebo rádia. - všechny z to parametry
      můžeme vypočítat z datové sady. Celkově je pro každou třídu potřeba 6 parametrů,
      celkem 18.;Pro každou třídu bude pod tr K čtyřp
    truth: 1
  8:
    pred: 4
    text: pozitivní - pak, negativní - veg, nakažený - nak, zdroj - zdrav;(nak) =
      20% nakl ney počí ľak) = 90% -> P( P(poslední řekou) = 10% stav pár zbraně pokl
      zdrav (par I nak);= 10%;P(YB|MA);P(nak (par) = P(nak). P(poz Inak);P(pur) P(poz)
      = P(nak). P(P) par (nak) P(nakl poz);0,2;s;0,9;0,9;0,2
    truth: 2
  9:
    pred: 2
    text: Strojové učení, Počítačové vědění, i urovnané sítě...
    truth: 3
  10:
    pred: 3
    text: graf směřující výsaden vpřed;D*;max(wxo) � malit;w;� dat
    truth: 3
  13:
    pred: 3
    text: 'Tyto modely generují výstupní sekvence na základě pravděpodobnosti dané
      posloupností slov. Tudíž pro jednotlivcí slova bude vypadat výpočet pravděpodobnosti
      následovně: P(w|w1 w1) P(w3|m, my) P(w|w|w|w) w2 w sw �'
    truth: 3
f3ae7233a5cdc2f3d8fb9c4e75e21814:
  1:
    pred: 0
    text: X A se vždy dostanu sem;Tedy ale;4xA, B, X/4 A; B;;Počet akcí A je libovolný
      neboť gytlém nad stavem 2;Provedo 3x alcí A, z libovolného stavu se dat dostanu
      do 2) Provedu akci B 1 a následně akci x
    truth: 4
  9:
    pred: 4
    text: Rozpoznavaní něci / Generování řeči Strojové vidění (naspozorování obrazu);Posilované
      učení (hraní ten);Expertní systémy;atd...
    truth: 4
  10:
    pred: 4
    text: Dopředný dystérský graf;Neobsahuje ge Data tečou dopředu;Překlad:;146;CNN
      +;D;a E;;� x 254;LPOG
    truth: 2
  11:
    pred: 4
    text: Konvoluční filtr
    truth: 1
  12:
    pred: 4
    text: 01 zavisí na I, 02 zavedeno 72;t7 I.;PT 72;72
    truth: 3
f45027d0227e0535990c00bf0827e2af:
  2:
    pred: 4
    text: MAX;MIN;68 málo ušetříme 2 raly
    truth: 4
  6:
    pred: 2
    text: 'diskriminativní: rovnou se snaží odhadnout, do jaké třídy příchozí dato
      patří p(c|x) bez odhadování opičné podmínění pst. Je podstatně jednodušší a
      rychlejší. Zajímá ho pouze klasifikační hranice mezi třídami, nikdv celé rozložení
      tříd Stačí mu tedy určit pouze křívku reprezentující hranici, ale hůře se taková
      křívka hledá pro slúžitější modely u různě „propletených“ datech z různých tříd.
      - příklad: logistická lineární regrese'
    truth: 4
  7:
    pred: 3
    text: trénovací data:;-1 brénovací dato je dvojice (x, y);- aby negeneralizoval,
      musel by být buď zvolen bychom museli mít příliš málo dat, na která;- data byla
      proložena polynomem 2. řádu, jehož de parametry se naučí. model dobře generalizuje,
      nebo dobře prohlídá data, aniž by overfitoval na konkrétní tvérovací data -
      bere v potaz Gaussovský pokynem příliš vysokého řádu, nebo šum by se model přeučil.
    truth: 4
  10:
    pred: 4
    text: a yklický, orientovaný grat; může mít více výstupů;STM;- konservatoř;.;25
    truth: 4
  12:
    pred: 4
    text: BANEA;OLIER, I1 ONFI Už;vovati
    truth: 1
  13:
    pred: 3
    text: 'V ideálním případě vysvětle algoritmus generování jen neformálním pseudokódem.;autoregresivní
      modely využívají autoregresivní faktorizace: aktuální výstup zakládají nejen
      na aktuálním stavu a aktuálním vstupu, ale i na předchozích výstupech a vstupech.
      Tedy počítáme pst P(w|x1 w2 -1 w2 -179) a pst 1. slova jako nepodmíněnou P(w1).
      P(w2) = P(w2/ W1). P(w1). první slovo tedy odhadnou, následně pro odhadnutí
      každého dalšího slova vždy podmíní pst dalšího slova podmínkou, že předchozí
      vygenerovaná slova byla ta, která vygenerální dříve.'
    truth: 3
f854b378222faa337e5645aacaecd948:
  1:
    pred: 4
    text: IBX 3x;(3);DB
    truth: 4
  10:
    pred: 1
    text: musí byť dvojhlidý;X;---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;69;(soused)
    truth: 2
  11:
    pred: 2
    text: váhy jadra rozmezy jadra x počet filtrov
    truth: 3
  12:
    pred: 4
    text: O1 - vstup I1 + ľubovalý vstupný vektor 02 - vstup 2 + výstup 01
    truth: 2
  13:
    pred: 3
    text: 'AR DEC - delódovanie popisných vektorov na časti výstupnej sekvencie (papr.
      slová);slovo'' slovo? slovo;D;dehodéry;vrta ->;hodér;Alg: zaháduje na vstupná
      sekvencia -> kontext, a pro plovápek pretože;slova slovo;ro START sa modeluje
      pravdepodobnosť 1. slova, postupne následně sa V modelujú pravděpodobnosti následujících
      slov'
    truth: 3
fd4c95ac222b1b1ce4780a446a0662ff:
  4:
    pred: 4
    text: Dr. D2 D3;xx x XX XXXXxxx O x x x xxx XXX XXX x x COXXXX x XX;Dy = {53 D2
      = {13 D3 = 243
    truth: 4
  13:
    pred: 3
    text: Mon) SYn, / whilway was;- každé slovo, čoberieme, tak berieme s pravdepodobnosťou
      aj všetkých prodchá dzajúcich slov zo sekvence
    truth: 2
fdb0df15e7ad924fe4403d60cca91fc6:
  1:
    pred: 1
    text: '1,4,0 �;....;Výsledek: AXBAX'
    truth: 4
  2:
    pred: 4
    text: MAX;MIN;O 58 Možne ušetřiť prohládávanie z očí v zlom ak Afric-Beta odreže
      tento kus stromu, pretože prvom uzle bolo -4, tak nebude dálej prehľadá
    truth: 4
  9:
    pred: 0
    text: Machine Learning, Speech recognition, Graphie recognition
    truth: 3
