00d52da93a2ea09d33d9c34959629374:
  0:
    pred: 1
    text: "v\xEDm-li, \u017Ee v ur\u010Dit\xE9m stavu;lze pouze provedenim jedn\xE9\
      \ akce se dostat do v\xFDsledku, pokud tento stav nav\u0161t\xEDv\xEDm znova,\
      \ mohu j\xEDt p\u0159\xEDmo k v\xFDsledku (tzv. zkratka)"
    truth: 1
  1:
    pred: 1
    text: "hodnot. Vysv\u011Btlete tento rozpor a pojmenujte odpov\xEDdaj\xEDc\xED\
      \ vlastnost her, pro n\u011B\u017E minimax lze pou\u017E\xEDt.;valita;v jednom\
      \ Proto\u017Ee \u010Dlov\u011Bk nen\xED stroj, kter\xFD okam\u017Eiku si spr\xE1\
      vn\u011B uv\u011Bdomit stav hry nebo dr\u017Eet v hlav\u011B \u0161iroky a hlubok\xFD\
      \ strom mo\u017Enosti N\u011Bkdy sta\u010D\xED vyhr\xE1t (ale ne nutn\u011B\
      \ s nejvy\u0161\u0161\xEDm sk\xF3re) Min. hodnoty se vyb\xEDraj\xED pro protivn\xED\
      ka, nebo\u0165 minimax strom se po\u010D\xEDt\xE1 pro ka\u017Ed\xE9ho hra\u010D\
      e a protiv jde proti hra\u010D\xED (pro n\u011Bj max u\u017Eitek, pro n\xE1\u0161\
      \ min u\u017Eitek) - stuhd\xE1n\xED hra\u010D\u016F jdouc\xED proti sob\u011B\
      \ (kavetn\xED hry,"
    truth: 3
  2:
    pred: 1
    text: "1;6;+ \u010CLOSED;BFS;DAS;d;76;6D;10;b. D;i;Strana 25.;neghick\xFD \uFFFD\
      \ ka\u017Ed\xFD stav je unik\xE1t;000"
    truth: 2
  3:
    pred: 2
    text: "prost\u0159ed\xED - nem\u011Bnn\xE9 (statick\xE9 - deterministick\xE9 -;stav\
      \ - stuhterwang"
    truth: 0
  4:
    pred: 3
    text: ", ka\u017Edou t\u0159\xEDdu je pro - pak na z\xE1klad\u011B vybere t\u0159\
      \xEDda - hustota pravd\u011Bpodobnosti se odhade z dat v\xFDpo\u010Dtem st\u0159\
      edn\xED hodnoty a stand deviation (odchytky);hustota pravd\u011Bpodobnosti odplovan\xFD\
      ch max. nevohodnost\xED se"
    truth: 0
  5:
    pred: 0
    text: "u\u010D\xED p\u0159\xEDmo n\u011Bjakou funkci"
    truth: 0
  6:
    pred: 2
    text: "naha\u017Een\xFD v\xEDkem P(2) = 1-3 P(V) = 0,8 P(P|2) - 0,025 P(N|W) =\
      \ 01;SPJ 898;? = 09+0,2 + 0,925 0,8 = 918;7800"
    truth: 0
  12:
    pred: 0
    text: ''
    truth: 0
  13:
    pred: 0
    text: ''
    truth: 0
02430be22cdd097e46bda4c98975d85d:
  0:
    pred: 1
    text: "K z\xFA\u017Eitkovaniu dojde napr\xEDklad pr\xE1ve tak, \u017Ee at si zapamat\xE1\
      m, \u017Ee oper\xE1cia m\xE1 privedie k v\xFDsledku neprivedie a naopak oper\xE1\
      cia OR. m\xE1 k neni privedie tak za toto zapou\u0161tanie n\xE1ro\u010Dn\u011B\
      j\u0161ie na pam\xE4\u0165 dok\xE1\u017Eem ur\xFDchli\u0165 v\xFDsledek resp.\
      \ jeho dostate\u010Dnostie, nahraden\xEDm AND za OR."
    truth: 0
  1:
    pred: 1
    text: "sen;Tento rozpor spo\u010D\xEDva v tom, \u017Ee pre n\xE1jdeme maxima v\
      \ minimaxe najst\xF3r ur\u010D\xEDme (najdeme najmen\u0161iu hodnotu, ktor\xFA\
      \ n\xE1sledne porovn\xE1vame so zvy\u0161n\xFDmi a z nich tak n\xE1sledne. ur\u010D\
      \xEDme maximum. Podobn\xFDm postupom tak coz v\u0161etky minula predv\xEDdkami\
      \ tvru (minimax strom) a\u017E pohia\u013E nevyrad\xEDme v\u0161etky najmen\u0161\
      ie hodnoty a zastane n\xE1m tak hodnota maxim\xE1lna."
    truth: 0
  2:
    pred: 0
    text: "nicht pokud nem\xE1m 2 - pozorujeme po pohledu na poli 19. 10. 1980 byl\
      \ postaven pro doby 12 Anton\xEDn Hole\u010Dek - starosta obce - A to jest ...;den\
      \ ge-"
    truth: 0
  3:
    pred: 3
    text: "tak\xFDto agent potrebuje pozna\u0165 prostredie okolo seba v prost\u0159\
      ed\xED sa musia nach\xE1dza\u0165 odmeny;stav bude reprezentovan\xFD atomick\xFD"
    truth: 3
  4:
    pred: 0
    text: ''
    truth: 0
  5:
    pred: 0
    text: ''
    truth: 0
  6:
    pred: 1
    text: "NIF.;\uFFFD 20% = 02 80% = 0,8 S = 90% = 0,9 = N|5 = 10% = 0,\uFFFD 1917\
      \ = 97,5% = 0,975 = 2,5% 0,025 AIF 2 a 0,9. P(P) 0,2 = 20 %;q;BAYESOVO;P(ylx\
      \ P(s|p);Pl\xE1;1) Plz;P(PS) P\xCDS);P(D);H - zdrav\xED P-pozitivni S-chor\xED\
      \ N-negativn\xED;P(P|S) P(P|S);P(S|P);(200) S;809 H;180-100;200;c;N;1010 180;20;28.\
      \ 11. 780"
    truth: 1
  7:
    pred: 0
    text: ''
    truth: 0
  8:
    pred: 1
    text: "Cielom Turingovho testu je zistit \u010Di AI dosiahlo \xFArovne general\
      \ AI, teda je inteligentn\xED nato\u013Eko, \u017Ee \u010Dlovek nedok\xE1\u017E\
      e rozl\xED\u0161i\u0165 konverz\xE1cni s AI oproti tej s in\xFDm \u010Dlovekom.\
      \ Mo\u017En\xE9 z\xE1vory s\xFA, \u017Ee \u010Dlov\u011Bk bu\u010F AI rozpozn\xE1\
      \ a tak nemo\u017Eno o \u0148om prehl\xE1si\u0165, \u017Ee je iteligentn\xED\
      \ (vych\xE1dzame z p\u0159edpokladu, \u017Ee \u010Dlovek je inteligentn\xFD\
      ) alebo ho nerozpozn\xE1 od \u010Dloveka a AI tak bude pova\u017Eovan\xE9 za\
      \ inteligentn\xE9. Z\xE1kladn\xFDm nedostatkom je pr\xE1v\u011B p\u0159edpoklad,\
      \ \u017Ee \u010Dlovek je inteligentn\xED. Vzhladom na \u010Dlov\u011Bka, kter\xFD\
      \ by s AI komunikoval, je potom z\xE1visl\xFD v\xFDsledek, kter\xFD m\xF4\u017E\
      e pre ka\u017Ed\xE9ho znamena\u0165 \u010Dosi in\xE9. Tj. \u201Ezapacitne slab\u0161\
      ia mysel\u201C m\xF4\u017Ee za inteli- gentn\xE9 AI pova\u017Eova\u0165 aj tak\xE9\
      , kter\xE9 zvl\xE1da z\xE1kladn\xED komunik\xE1ciu (vi\u010F mno\u017Estva scamov\
      \ na internete). Tento testo m\xE1 zmysel pou\u017E\xEDva\u0165 jedine v pr\xED\
      pade, \u017Ee sa sna\u017E\xEDme jasne ur\u010Di\u0165 \u010Di pr\xE1ve vo v\xFD\
      \u0161\u0161ie uvedenom pr\xEDklade, neprich\xE1dza k jak\xE9mu stanu, nesna\u017E\
      \xED za n\xE1s m\u011Btto oklama\u0165, zmanipulova\u0165 a podobne. Dotia\u0165\
      \ v\u0161ak nedos\xE1hnem aspo\u0148 proti dver\xED pre general AI, tento test\
      \ je v podstat\u011B irelevantn\xED."
    truth: 0
  9:
    pred: 1
    text: "Funkcia m\xE1 nau\u010Di\u0165 na malej vrstev d\xE1t ako predpoklada\u0165\
      \ v\xFDstupy.;Vstupou s\xFA d\xE1la na u\u010Denie. V v\xFDstupou s\xFA odhodovan\xE9\
      \ d\xE1ta"
    truth: 0
  10:
    pred: 0
    text: ''
    truth: 0
  11:
    pred: 0
    text: ''
    truth: 0
  12:
    pred: 0
    text: ''
    truth: 0
  13:
    pred: 0
    text: ''
    truth: 0
0e33e15598be65ed678dd18f9f2bff79:
  0:
    pred: 0
    text: ''
    truth: 0
  1:
    pred: 4
    text: "Hra\u010D se sna\u017E\xED pro sebe z\xEDskat (zahr\xE1t nejlep\u0161\xED\
      \ tah (Maximum) a z\xE1rove\u0148 chce aby protihr\xE1\u010D m\u011Bl co nejhor\u0161\
      \xED tah (Minimum)"
    truth: 0
  3:
    pred: 1
    text: "Pot\u0159ebuje -> odhad ceny cesty k vrcholu;reprezentativu \uFFFD Atomick\xE1"
    truth: 1
  4:
    pred: 4
    text: "dvourozm\u011Brn\xFD vektor;C = 3A B, C3;mus\xEDme odhadnout sm\u011Brodatnou\
      \ odchylku a rozptyl pro anb pro ka\u017Edou t\u0159\xEDdu parametry 10"
    truth: 0
  5:
    pred: 2
    text: "Logistick\xE1 regrese (Line\xE1rn\xED, Polynomi\xE1ln\xED) diskrim. modely\
      \ se sna\u017E\xED p\u0159\xEDmo odhadnout pravdepodobnosti t\u0159\xEDdy gener\
      \ modely odhadujeme pravd\u011Bpodobnostn\xED rozlo\u017Een\xED"
    truth: 0
  6:
    pred: 3
    text: "beadeltly, S ... sick, P... positive, N.... negative P(s) =0,2 ... - P(H)\
      \ = 0,8 (HIN) = 0,975... p(H|P) = 0,025;18;p/:;2;18;p(pis) + p\xEDs);0,9 00,2;p(S|P);de;0,4"
    truth: 0
  7:
    pred: 2
    text: "vznikne probl\xE9m p\u0159etrenov\xE1n\xED \uFFFD pro n\xE1pravu pot\u0159\
      ebujeme v\xEDce Test. dat;0,5;15;bod 1 regrese... m\u011Bla by to b\xFDt parabola\
      \ doktorech? p\u0159estaven\xED Nakreslil jsem: parabolu proch\xE1zej\xEDc\xED\
      \ cca test body Pro\u010D?\" Proto\u017Ee hled\xE1m pokynom kter\xFD bude m\xED\
      t v hodnoty syn"
    truth: 2
  8:
    pred: 2
    text: "C\xEDl Turingova testu je ur\u010Dit zda je dan\xFD syst\xE9m inteligentn\xED\
      \ (JEINEN\xCD Nedostatky: syst\xE9m nemus\xED myslet jako \u010Dlov\u011Bk (tedy\
      \ nen\xED inteligentn\xED), ale m\u016F\u017Ee nap\u0159. um\u011Bt dob\u0159\
      e hledat informace;Kdy pou\u017E\xEDt?\" Pokud v\xEDm, \u017Ee vnit\u0159n\xED\
      \ syst\xE9m pouze \"negoogl\xED\", ale n\u011Bjak p\u0159em\xFD\u0161l\xED"
    truth: 2
  9:
    pred: 0
    text: "role loss funkce je ur\u010Den\xED jak dob\u0159e model funguje vstup:\
      \ valida\u010Dn\xED data, testovac\xED data v\xFDstup: hodnota ur\u010Duj\xED\
      c\xED jak moc se li\u0161\xED Val. a Test chata"
    truth: 0
  10:
    pred: 0
    text: ''
    truth: 0
  11:
    pred: 0
    text: ''
    truth: 0
  12:
    pred: 2
    text: "chceme, aby slova s podobn\xFDm v\xFDznamem byli k sob\u011B vektorov\xE9\
      \ bl\xEDzko.;W V artmetiku potom umo\u017E\u0148uje s dan\xFDmi vektory pracovat\
      \ \"matematick\xFD"
    truth: 0
  13:
    pred: 3
    text: "NS modeluje Q funkci, kter\xE1 pro dan\xFD stav ohodnocuje jednotliv\xE9\
      \ akce, kter\xE9 agent m\u016F\u017Ee prov\xE1d\u011Bt vstupy: dvojice (stavn,\
      \ akcem) v\xFDstupy: ohodnocen\xED jednotliv\xFDch akc\xED Agent ji pou\u017E\
      \xEDv\xE1 pro u\u010Den\xED se (odm\u011Bny)"
    truth: 3
1069b3fc4fb47f279610ef035bf163d4:
  0:
    pred: 1
    text: "pro prohled\xE1n\xED AND-OR grafu vznikne sekvence if then jsem tedy schopen\
      \ p\u0159\xED\u0161t\u011B ji\u017E v n\u011Bkter\xFDch stavech rozhodnout,\
      \ kter\xE1 akce by mohla v\xE9st k \u0159e\u0161en\xED (nebudu tedy muset prohled\xE1\
      vat ji\u017E prav\xFD podstrom, p\u016Fjdu p\u0159\xEDmo do lev\xE9ho"
    truth: 0
  1:
    pred: 4
    text: "jeden hr\xE1\u010D v\u0161ak vyb\xEDr\xE1 maxim\xE1ln\xED hodnoty, zat\xED\
      mco protihr\xE1\u010D (pokud hraje racion\xE1ln\u011B) se sna\u017E\xED vybrat\
      \ opa\u010Dn\u011B - tedy hodnoty minim\xE1ln\xED - minimax je tedy vhodn\xFD\
      \ pro hry, kde oba hr\xE1\u010Di hraj\xED racion\xE1ln\u011B - existuje i stochastick\xE1\
      \ varianta - expectimax"
    truth: 0
  2:
    pred: 3
    text: "bez;Explored:;BFS: O (b) DFS: O bod;b - faktor v\u011Btven\xED;18 2 = 8\
      \ 27-16;80;s Explored: BFS: OBSAH) DFS: 0 (6 a)"
    truth: 0
  3:
    pred: 1
    text: "-;najde n\xE1m nejbli\u017E\u0161\xED lok. maximum aktu\xE1ln\xED hodnotu;pro;-\
      \ posov\xE1 se, a\u017E najde lok\xE1ln\xED maximum - kon\u010D\xED;- vr\xE1\
      t\xED n\xE1m toto m\xEDsto maxima (stav);\u0148ax."
    truth: 1
  4:
    pred: 3
    text: "u;- st\u0159edn\xED - rozptyl;hodnota;(x;Matice st\u0159edu je vektor X\
      \ - re\xE1ln\xFDch \u010D\xEDsel Kovarian\u010Dn\xED matice XXX - re\xE1ln\xFD\
      ch \u010D\xEDsel Parametry odhadujeme pomoc\xED Maximum likelihood estimation:;X\
      \ podle dimenze);max = arg max(ply) = arg max/fx/ aly"
    truth: 0
  5:
    pred: 1
    text: "logistick\xE1 regrese;diskriminativn\xED mapuj\xED vstup p\u0159\xEDmo\
      \ na danou t\u0159\xEDdu rychlej\u0161\xED, ale pot\u0159ebuj\xED v\u011Bt\u0161\
      \xED mno\u017Estv\xED d\xE1t K-Nearest Neighbours: generativn\xED: Boyes\u016F\
      v vzorec, pomalej\u0161\xED 1920 existuje bod men\u0161\xED mno\u017Estv\xED\
      \ dat - vezmu k bod\u016F z jeho okol\xED L vhodn\xE9 lich\xE9 \u010D\xEDslo\
      \ (aby 1 t\u0159\xEDda p\u0159eva\u017Eovala s jistotou) podle p\u0159eva\u017E\
      uj\xEDc\xED t\u0159\xEDdy ur\u010D\xEDm, do kter\xE9 bude bod pat\u0159it"
    truth: 1
  6:
    pred: 2
    text: "P(nak / poz) = P(pozluak) Plnak);P(pozlnak) = 0,9 p (nak) =0,2 p(zdrav\xFD\
      ) = 0,8 P(negl zdrav\xFD|= 0, 975 \uFFFD 0,025;P(nak) poz) =?;P(poz);P(pozladnav\xFD\
      ) P(poz) = P(pozlzdravy) P(zdravy) + + P(pozlnan) + Plnak) = =0,025.0,8 + 0,9.\
      \ 0,2 = = +01,8 = 0,2 0,02;7;-;0,9 07;0,9 op"
    truth: 4
  7:
    pred: 3
    text: "K ur\u010Duje stupe\u0148 nejvy\u0161\u0161\xEDho polynomu bude to kvadratick\xE1\
      \ fce;vstupem mohlo b\xFDt m\xE1lo dat, model se tak nau\u010Dil na mal\xE9\
      m, nebo nevalidu vzorku -> \u0161patn\u011B tedy proch\xE1z\xED nov\xFDmi daty\
      \ (k\u0159ivka)"
    truth: 3
  8:
    pred: 3
    text: "\xFA\u010Delu?;- odli\u0161en\xED, zda testovan\xFD je \u010Dlov\u011B\
      k/stroj - proti argument \"Chinesse room\" \u2014 v m\xEDstnosti \u010Dlov\u011B\
      k, kter\xFD neum\xED \u010D\xEDnsky. M\xE1 ale k dispozici literaturu a n\xE1\
      rod, jak \u010D\xEDnsk\xFD mluvit/ps\xE1t. Zd\xE1 se, \u017Ee \u010D\xEDnsky\
      \ um\xED, i kdy\u017E ve skute\u010Dnosti neum\xED - Paralela - m\u016F\u017E\
      eme tedy \u201Eo\u0161\xE1lit\u201C Turing\u016Fv test"
    truth: 0
  9:
    pred: 4
    text: "- loss funkce m\xE1 za \xFAkol ur\u010Dit spr\xE1vnost v\xFDstupu NS s\
      \ referen\u010Dn\xED hodnotou v\xFDstupu (m\xE1me labeled data) - vstupem tedy\
      \ v\xFDstup NS + referen\u010Dn\xED h. - v\xFDstup - hodnota reprezentuj\xED\
      c\xED podobnost t\u011Bchto dvou hodnot;\uFFFD d\xE1le tato hodnota pou\u017E\
      ita v optimaliza\u010Dn\xEDch algorit parametr\u016F;NS"
    truth: 4
  10:
    pred: 4
    text: "- pokud learning rate bude p\u0159\xEDli\u0161 mal\xFD, pak nebudeme zohled\u0148\
      ovat optimaliza\u010Dn\xED algoritmy parametr\u016F, jako jsou Gradient descent\
      \ a Stochastic TGD.;Gradient descent funguje na principu hled\xE1n\xED lok\xE1\
      ln\xEDho minima parametr\u016F NS (optimalizuje tak chybu t\xE9to NS) - Gradient\
      \ vektor r\u016Fstu funkce v dan\xE9m bod\u011B ST\u0158EDA POZOROZENICH OBECN\xCD\
      \ PR\xC1VA Brna w - d vzorec pro gradient descent;Carring vare"
    truth: 0
  11:
    pred: 4
    text: "(s, x) x c + 11) x CON po\u010Det kan\xE1l\u016F;x rozm\u011Br k. j\xE1\
      dra;\u010Det ja;vrstvy"
    truth: 4
  12:
    pred: 2
    text: "Vektory jsou reprezentac\xED textu - slova s podobn\xFDmi v\xFDznamy maj\xED\
      \ i podobn\xE9 vektory;Vektor je ulo\u017Een v Lookup table;Word Vector aritmetika\
      \ je zp\u016Fsob p\u0159episu slova na dan\xFD vektor"
    truth: 0
  13:
    pred: 2
    text: "reinformucement learning modeluje Q-funkci - funkce, kter\xE1 proch\xE1\
      z\xED v\u0161echny akce ve vstupn\xEDch stavech a hled\xE1 akci, kter\xE1 vede\
      \ k nejlep\u0161\xEDmu v\xFDsledku.;dat - vyu\u017E\xEDv\xE1 strategii (tedy\
      \ stav, akce) a tak\xE9 reward (odm\u011Bnu) jedn\xE1 se o algo. off-policy\
      \ - jsou tedy ukl\xE1d\xE1ny i historick\xE9 akce - efektivn\u011Bj\u0161\xED\
      ;odm\u011Bna za provedenou akci by m\u011Bla b\xFDt nejen p\u0159i dosa\u017E\
      en c\xEDle, ale i p\u0159i jeho p\u0159ibl\xED\u017Een\xED"
    truth: 2
1101bdc0b19ca8bc615b343a37e69620:
  0:
    pred: 2
    text: "Z \u0159e\u0161en\xED \xFAlohy;algoritmus po nara\u017Een\xED na uzel 10\
      \ v\xED, \u017Ee se v jeho derivaci nach\xE1z\xED \u0159e\u0161en\xED, nemus\xED\
      \ ji\u017E prohled\xE1vat ostatn\xED uzly."
    truth: 2
  1:
    pred: 0
    text: "Algoritmus p\u0159edpokl\xE1da, \u017Ee jeho protivn\xEDk v\u017Edy pron\u011B\
      j vybere tak, kter\xFD minimalizuje jeho u\u017Eitek. (Hed\xE1 takov\xFD tak\
      \ vekter\xE9m je n\xE1sleduj\xEDc\xED protivn\xEDka co nejv\xEDce u\u017Eite\u010D\
      n\xFD a p\u0159edpokl\xE1d\xE1, \u017Ee protivn\xEDk vyb\xEDra v\u017Edy stav,\
      \ kter\xFD, minimalizuje u\u017Eitek 1 nejv\xEDce;\u0161achy, d\xE1ma, go, pi\u0161\
      kvorky"
    truth: 0
  2:
    pred: 1
    text: DFS - big-ol;s EXPLORED;BFS - big- 0 DFS = big- 0;b;(d -1);Bld 1,
    truth: 0
  3:
    pred: 2
    text: "aget pot\u0159ebuje odpor od informace, jak je dan\xFD krok, mezi kter\xFD\
      mi si vyb\xEDr\xE1 u\u017Eite\u010Dn\xFD k \u0159e\u0161en\xED (zda se kn\u011B\
      mu bl\xED\u017E\xED, nebo ne (mu\u017Ee se bl\xED\u017Eit i k lok\xE1ln\xED\
      mu extr\xE9mu), atomick\xE1"
    truth: 2
  4:
    pred: 3
    text: "parametry se na tr\xE9novac\xEDch datech odhodla metodou maximum-likelihood;1/11\
      \ (x-w? ... rozptyl u = 1/4 X x i ... st\u0159edn\xED hodnota vypo\u010D\xED\
      t\xE1me je podm\xEDn\u011Bnou pravd\u011Bpodobnost\xED p(x) p(x) ap(x) DV\u016E\
      R p(x) + f|X);p(x) =N|x IN, E) x = P(X|X) u"
    truth: 0
  5:
    pred: 2
    text: "- neorest - lze spo\u010D\xEDtat z pom\u011Bru k nejbli\u017E\u0161\xED\
      ch bod\u016F klasifikace podle d\u0159\xEDve zm\u011B\u0159en\xFDch dat v tabulce\
      \ pro v\xFDpo\u010Det pravd\u011Bpodobnosti nepou\u017E\xEDvaj\xED spojit\xE9\
      \ funkce vtom se li\u0161\xED;ke spo\u010D\xEDtat se\u010Dten\xEDm sloupc\u016F\
      , nebo \u0159\xE1dk\u016F."
    truth: 0
  6:
    pred: 2
    text: "P(A) P(B|A);P(A|B);pozitivn\xED (naho\u0159en\xFD) = 0,9 pozitivn\xED (naka\u017E\
      en\xFD) = 0,025 P(A, B) = P(A) nalo\u017Een\xFDch P(+ P(A) = D po\u010Det lid\xED\
      \ v populaci, kter\xFDm vyjde pozitivn\xED test P(pozitivn\xED, naka\u017Een\xFD\
      ) = P(naka\u017Een\xFD) P(pozitivn\xED / nahor\u017Een\xFD) = 0,2. 0,9 = 0,18\
      \ P(pozitivn\xED, naka\u017Een\xFD) = P(nenaka\u017Een\xFD) P(pozitivn\xED /\
      \ nenaka\u017Een\xFD) =0, 8.0,025 =0,036 P(pozitivn\xED) = P(pozitivn\xED, naka\u017E\
      en\xFD) + P(pozitivn\xED, naho\u0159en\xFD) = 0, 18+0, 036 =0, 216;P(B);S/A;200\
      \ 360"
    truth: 0
  7:
    pred: 4
    text: "0,5;o1;P\u0159i tr\xE9nov\xE1n\xED nastal probl\xE9m p\u0159etrenov\xE1\
      n\xED, kter\xFD znemo\u017En\xED \xFAsp\u011B\u0161n\xE9 pou\u017Eit\xED modelu\
      \ pro nov\xE1 testovac\xED data. Tento probl\xE9m by \u0161lo odstranit pou\u017E\
      it\xEDm regrese ni\u017E\u0161\xEDho \u0159\xE1du;Je\u0161t\u011B mohl nastat\
      \ probl\xE9m, kter\xFD je zp\u016Fsoben nedostatkem dat spolu se \u0161umem\
      \ ve zdrojov\xFDch - datech. Tento probl\xE9m lze redukovat p\u0159id\xE1n\xED\
      m dal\u0161\xEDch dat do tr\xE9novac\xED sady."
    truth: 4
  8:
    pred: 0
    text: "- Z\xE1v\u011Brem TS je zda je stroj inteligentn\xED, nebo ne. Nedostatky\
      \ - P\u0159edpoklad, \u017Ee jsou lid\xE9 inteligentn\xED - \u010D\xEDnsk\xFD\
      \ pokoj [nekone\u010Dna kniha p\u0159epis\u016F v\u011Bt)"
    truth: 0
  9:
    pred: 3
    text: "Slou\u017E\xED k u\u010Den\xED, navrac\xED rozd\xEDl mezi spr\xE1vn\xFD\
      m v\xFDsledkem a v\xFDsledkem vych\xE1zej\xEDc\xEDm z dan\xE9ho modelu. vstupy\
      \ - spr\xE1vn\xE1 c\xEDlov\xE1 hodnota spr\xE1vnost modelu) - v\xFDstup z dan\xE9\
      ho modelu v\xFDstup - p\u0159esnost modelu"
    truth: 3
  10:
    pred: 2
    text: "Slze z\xEDskat nespr\xE1vn\u011B nau\u010Den\xFD model v p\u0159\xEDpad\u011B\
      \ kdy learning rate je p\u0159\xEDli\u017E vysok\xFD. P\u0159i u\u010Den\xED\
      \ se p\u0159esko\u010D\xED hledan\xE9 maximum."
    truth: 3
  11:
    pred: 4
    text: "31;n (x n, m y m, m) [2 p\u0159est\xE1vka n x - v\xE1hy KART. - vstupn\xED\
      \ matice pixel\u016F (jedna barevn\xE1 jedna barevn\xE1 slo\u017Eka) slo\u017E\
      ka,;X, ... : XIII KW, w;*n;pixel"
    truth: 0
  12:
    pred: 2
    text: "Pokud jsou si slova bl\xEDzk\xE1, tak chceme, aby le\u017Eeli bl\xEDzko\
      \ sebe. Word Vector aritmetika - umo\u017E\u0148uje nad slovy prov\xE1d\u011B\
      t d\xEDky jejich vektorov\xE9 reprezentaci matematick\xE9 operace nap\u0159\xED\
      klad?;kr\xE1lovna - \u017Eena = kr\xE1l"
    truth: 4
  13:
    pred: 3
    text: "n (x1, x2... xn) = 12 (xn w2) + l;- perception (jeden neuron v neuronov\xE9\
      \ - s\xEDti);SED FE;Modeluje funkci pravd\u011Bpodobnosti vstupy - s\xE9zory\
      \ okol\xED v\xFDstup - nadch\xE1zej\xEDc\xED krok Agent ji pou\u017E\xEDv\xE1\
      \ k zji\u0161t\u011Bn\xED dal\u0161\xEDho kroku, kter\xFD m\xE1 podniknout."
    truth: 1
1fe5f64c5593bf37ac6a5b332f1693fa:
  0:
    pred: 2
    text: "To;Pri OR uzle je nutn\xE9, aby nichtov\xFD z potomkov viedol k rie\u0161\
      eniu, pokia\u013E teda lav\xFD potomok vedie k rie\u0161eniu, cel\xFD uzor vedie\
      \ k hie\u0161eniu - netreba preh\u013Ead\xE1va\u0165 aj prav\xFA stranu. K zu\u017E\
      itkovaniu dojde teda tak, \u017Ee zabr\xE1nime zbyto\u010Dn\xE9mu prehlad\xE1\
      vaniu stavov, ktor\xE9 V takovoto p\u0159\xEDpade nenes\xFA d\xF4le\u017Eit\xFA\
      \ informaciu."
    truth: 0
  2:
    pred: 1
    text: 1. BFS - Olt DFS - Olb. d*);2. BFSCE - OIb 4-1, DFSa-Old*);3FS - pronaja
    truth: 0
  3:
    pred: 1
    text: "- pln\xE1 informacie o svetr \u0161trukturovan\xE1 reprezent\xE1cia stavu"
    truth: 0
  4:
    pred: 3
    text: "p(x|c) =;p(c);psi \u017Ee vzor pat\u0159\xED do ka\u017Edej triedy vypo\u010D\
      \xEDtame pomocou Bayesovho vzorca na ten pot\u0159ebujeme apriorn\xED pst. ka\u017E\
      dej tricelej pic) = po\u010Det vzorok v triede a celkov\xFD po\u010Det vzorov\
      \ vo v\u0161echn\xFDch triedach likelihood - pre ka\u017Ed\xFA wiedu spo\u010D\
      \xEDtame pomocov maximum likelihood odhadov parametrov parametre maj\xFA podobu\
      \ vektoru pre Stredn\xFA hodnotu a matice pri smerodajnej odchytke 3 re\xE1\
      me \u010D\xEDsla pro st\u0159edn\xED hodnotu a 9 pre odchylku;p(x|c) = p(c|x)\
      \ p (x) Euplo, k)"
    truth: 0
  6:
    pred: 4
    text: "ky pxy) plzy / = platy/plyt;B. po\u017E. test;807;A- zdrav\xFD; \xC1 -\
      \ nah\xE1zen\xFD B - pozitivny test B - negativny test;p(\xC1 (B) = 1 - p(A|B);p\
      \ (A|B) = 0,025.0,8 + 0,9.0,2 v blaho;p(A|B) =;0,8 . 0,025;p(B|A) p(A) + p/BIAT\
      \ p(A) = - (1-p(\u0160|A) p(A) + p/BIATI p/A) = (1 - 0,975). 0,8 + 0,9 . 0,2\
      \ 0,025.0,840,9.0,2;p(B) = kg p/B, x;p (\xC1|B) =;1;0,8 . 0,025;0,025. 0,8 +\
      \ 0,09.0,2;p (nahazen\xE1 l pozitivn\xED"
    truth: 4
  7:
    pred: 4
    text: "1.5;1.0 0.5;parabola, kter\xE1 p\u0159ech\xE1dza prsne d\xE1tami nastalo\
      \ pretr\xE9novanie - overfitting, model presne kop\xEDruje d\xE1ta bol sp\xF3\
      soben\xFD mal\xFDm po\u010Dtem tr\xE9novac\xEDch vzorov a pre ne vysok\xFDm\
      \ stup\u0148em polyn\xF3mu p\u0159\xEDli\u0161 napravil by sa dal zv\xE1\u010D\
      \xEDan\xE9m tr\xE9novacej sady, resp. p\u0159id\xE1n\xEDm nov\xFDch tr\xE9novac\xED\
      ch vzorov alebo zvolen\xEDm ni\u017E\u0161\xEDho stup\u0148a polyn\xF3mu"
    truth: 4
  8:
    pred: 1
    text: "cielom je zistit, \u010Di je testovan\xFD syst\xE9m (po\u010D\xEDta\u010D\
      ) inteligentn\xFD, alebo nie mo\u017En\xE9 z\xE1v\u011Bry - syst\xE9m je inteligentn\xFD\
      /syst\xE9m nic je inteligentn\xFD mysl\xEDm si, \u017Ee nedostatkem je priame\
      \ porovn\xE1vanie s \u010Dlovekom, pre skute\u010Dn\xE9 zistenie inteligencie\
      \ by bolo vhodn\xE9 syst\xE9m necha\u0165 \"\u017Ei\u0165\" v sledovanom prost\u0159\
      ed\xED a v\u0161\xEDma\u0165 si, \u010Di je schopn\xFD reagovat na situacie,\
      \ kter\xE9 predt\xFDm nevidel, ale je schopn\xFD sa prisp\xF3sobova\u0165 r\xF4\
      zn\xFDm podn\u011Btov\xE1 redpoklad\xE1, \u017Ee pokia\u013E syst\xE9m nie je\
      \ mo\u017En\xE9 rozl\xED\u0161it od \u010Dloveka, je inteligentn\xFD t\xE1to\
      \ my\u0161lienka ur\u010Dite zvyk\xE1va v situaci\xE1ch, kedy je nutn\xE9 prejavi\u0165\
      \ city a emocie tak p\u0159edpoklad\xE1me, \u017Ee \"modelov\xFD\" \u010Dlovek\
      \ je emo\u010Dne inteligentny), zbytek by aj pri reprodukcii a pod. \uFFFD proto\
      \ je vhodn\xE9 dom\xE9nu situaci\xED, v ktor\xFDch je syst\xE9m nerozli\u0161\
      iteln\xFD od \u010Dloveka na probl\xE9my, ktor\xE9 nevy\u017Eaduj\xFA empartiu,\
      \ cit, EQ;\uFFFD"
    truth: 4
  10:
    pred: 3
    text: "- pokia\u013E zvo\xFAme pr\xEDli\u0161 velk\xFD learning rate, m\xF4\u017E\
      e sa sta\u0165 \u017Ee po v\xFDpo\u010Dte gradientov a \xFAprave parametrov\
      \ bachpropag\xE1ciou za\u010Dneme dost\xE1vat hodnoty mimo hardwarom povolen\xE9\
      ho rozsahu, hodnoty za\u010Dn\u016F divergova\u0165 - teda dost\xE1vame 00,\
      \ NaN a podobn\xE9 pro velmi malej u\u010Diacej kon\u0161tante trv\xE1 v\xFD\
      po\u010Det p\u0159\xEDli\u0161 dlho, ke\u010F\u017Ee parameter upravujeme ako\
      \ 0 = 0 - 1.- a, kde A je u\u010Diaca konstanta, v ka\u017Edej \xFAprave je\
      \ rozdiel medzi p\xF3vodnou hodnotou parametru a novou hodnotou len velmi mal\xFD"
    truth: 3
  11:
    pred: 4
    text: "\uFFFD m x n x c xl;m x n - rozmery konvolu\u010Dn\xE9ho jadra C - po\u010D\
      et kan\xE1lov konvolu\u010Dn\xEDho jadra l - po\u010Det jadier v konvolu\u010D\
      nej vrstve"
    truth: 4
  12:
    pred: 2
    text: "word veitor aritmetiku - pri spracovan\xED sekvenci\xED textu rekurentn\xFD\
      mi vrstvami pot\u0159ebujeme, aby na ich vstupe boli \u010D\xEDseln\xE9 hodnoty,\
      \ nie priamo slova - m\xF4\u017Eeme si teda vytvori\u0165 nejak\xFD slovn\xED\
      k, pomocou one hot encodingu ka\u017Ed\xE9 slovo za\xFA\u010Ddova\u0165 vektorom,\
      \ kter\xFD obsahuje sam\xE9 nuly a jednotku pre \"index\" / pozicin slova v\
      \ slovn\xEDku d\xE1lej teda nepracujeme se slovami ano tak\xFDmi, ale sich vektorovou\
      \ reprezentacion. tento sp\xF3sob je v\u0161ak velmi pama\u0165ovo n\xE1ro\u010D\
      n\xFD, pou\u017E\xEDva sa pr\xEDstup s Loon up tabulkou a word embeddingami,\
      \ ka\u017Ed\xE9 slovo m\xE1 svoj ur\u010Dit\xFD index a vektor hodn\xF4t - slov\xE1\
      , ktor\xE9 s\xFA syntakticky \u010Di semanticky podobn\u011B, maj\xFA aj tieto\
      \ hodnoty podobn\u011B + vo vektorovom priestore tak\xFDchto slov je potom mo\u017E\
      n\xFD pohyb medzi podobn\xFDmi slovami pomocou p\u0159i\u010D\xEDtania nejakej\
      \ konstanty"
    truth: 3
  13:
    pred: 4
    text: "vstupom je aktu\xE1lny stav a akcia - rls,a) - reward za tento stav a akciu\
      \ EL... J - o\u010Dek\xE1van\xFD \xFA\u017Eitek z dal\u0161\xEDch akci\xED;modeluje\
      \ a funk\u010Dn\xED t\xE1 n\xE1m ohodnocuje kvalitu akcie v konkr\xE9tnom stave\
      \ pri posilovanom u\u010Den\xED s\xEDce ide len o odhady a o\u010Dek\xE1van\xE9\
      \ hodnoty, je to n\u011Bjak\xE1 metrika, ktor\xE1 n\xE1m dovol\xED voli\u010D\
      \ napr\xEDnosnej\u0161ie rie\u0161enie pokia\u013E NN funguje spr\xE1vne, mal\
      \ by plati\u0165 nasleduj\xFAci vz\u0165ah, pokia\u013E nie, m\xF4\u017Eeme\
      \ rozdiel \u013Eavej a pravej strany rovnosti pou\u017Ei\u0165 ano loss - funkciu;9\
      \ (s, a) = ris, al + E|max 9 (s, a);agent sa teda pomocou vej sna\u017E\xED\
      \ vybera\u0165 najkvalitnej\u0161ie rie\u0161enie, kter\xE9 mu princie nejv\u011B\
      t\u0161\xED \xFA\u017Eitek"
    truth: 4
20729bed8a76d6f6f3fb387acc7f6087:
  0:
    pred: 1
    text: "\uFFFD v\xEDme, \u017Ee lev\xFD uzel nen\xE1 cenu proch\xE1zet, jeliko\u017E\
      \ Z neby spojen\xE9 AND-em. vrac\xED False (O) \uFFFD bude vyhodnocen jako False\
      \ (otcov. uzel). pamatuji si, \u017Ee doleza nen\xE1 smysl chodit."
    truth: 0
  1:
    pred: 2
    text: "tady se n\xE1m protiv\xEDk sna\u017E\xED co nejv\xEDc znep\u0159ijemit,\
      \ \u017Eivot (a z\xE1rove\u0148 nax. sv\u016Fj zisk);MAX;MIN;kde p\u0159edpokl\xE1\
      d\xE1me, \u017Ee protivn\xEDk je racion\xE1ln\xED (maximalizuje sv\u016Fj zisk).\
      \ Pokud nen\xED racion. tak sv\xE9 taky mus\xEDme ohn\u011Bm podle pr\u016F\
      m\u011Bru hodnot, kter\xE9 proti dost\xE1v\xE1.;7 sekven\u010Dn\xED hry"
    truth: 2
  2:
    pred: 3
    text: "m\xE1me tedy b\xFDt;nal\u016F;1. nem\xE1me seznam CLOSED;DFS: O (2) i m\u016F\
      \u017Ee se zacyklit BFS: O G , projde v\u0161echny nesly;do;.... .........................................................................................................................dak.....................................................................................o....o.....o......o.......o....o......o.....z...z.z..\
      \ .... geschrieben: v\xFDch \xFAkol\u016F a;2) M\xE1me seznam CIOSED;c\xEDl;DFS:\
      \ O (b) i ji\u017E se nezacpli, ale m\u016F\u017Ee b\xFDt a\u017E posl. uzel\
      \ BFS: 60 2"
    truth: 0
  3:
    pred: 4
    text: "-> pot\u0159ebuje v\u011Bd\u011Bt, kde se zrovna nach\xE1z\xED ani nemus\xED\
      \ v\u011Bd\u011Bt, kde je c\xEDl -> jedn\xE1 se o faktorizovanou regrez. stavu\
      \ je v\xE1zan\xFD na prost\u0159ed\xED (ten stav) \uFFFD n\u011Bjak se v n\u011B\
      m pohybuje \uFFFD mus\xED v\u011Bd\u011Bt, kde je"
    truth: 0
  4:
    pred: 3
    text: "\uFFFD pravd\u011Bpodobnosti vypo\u010D\xEDt\xE1me lihelihood (x|c) = P(c|x)\
      \ . p;poster. pst.;pomoc\xED Bayes. vzorce;rior.;2 ost.;evidence;genss. hlas.;class\
      \ = f7, 6, B3 6x14 *k;n\xE1;par. u = st\u0159edn\xED hodnota s = rozptyl vyu\u017E\
      ij\xED se p\u0159i v\xFDpo\u010Dtu likelihoodu sm\u011Bna n\xE1me t\u0159i t\u0159\
      \xEDdy, tud\xED\u017E jsou to vektory;15-ti re\xE1ln\xFDmi \u010D\xEDsly"
    truth: 0
  5:
    pred: 4
    text: "logistick\xE9 regrese \uFFFD polyn. log. regrese;agent. pomoc\xED;oproti\
      \ gen. kl. se rovnou po\u010D\xEDt\xE1 p(x|c). nejprve po\u010D\xEDte p(c|x)\
      \ a p(c) a potom pou\u017Eit Bayesova vzorce odvozujeme p(x|c)."
    truth: 0
  6:
    pred: 3
    text: "t... posit. test;N. -;P(N) =0, 2 =0,8 P( P(t|N) =0,9 = P(-|N) = 0,1 P(-\
      \ |z) = 0,975 = 9 (+ 12) = 0,025;+) P(t) = p(+|n) . p(N) 0,9 . 0, 2 1) = P(t|N)\
      \ . p\xED;0,2;(sum rule : 0, 9 .0, 2 + 0,8 . 0,025 = 0, 2"
    truth: 4
  7:
    pred: 2
    text: "KAZ;\uFFFD nebudeme scho;generalizo;vat;-> zp\u016Fsobem t\xEDm, \u017E\
      e jsme se nau\u010Dili k\u0159ivku p\u0159esn\u011B, kde nen\xED zaveden gauss.\
      \ \u0161um;t;te;po zaveden\xED gauss. \u0161umu budeme schopni p\u011Bkn\u011B\
      \ generalizovat"
    truth: 0
  8:
    pred: 3
    text: "-> c\xEDl: ud\u011Blat rozhodnut\xED, zda je AI nerozeznateln\xE9 od lidsk\xE9\
      \ inteligence;\uFFFD na nedostatky poukazuje prob. \u010D\xEDnsk\xE9 m\xEDstnosti\
      \ \uFFFD AI nen\xED \u010D\xEDnsky, pouze se tak tv\xE1\u0159\xED (v m\xEDstnosti\
      \ n\u011Bkdo vrac\xED spr. p\u0159eklad) \uFFFD nen\xED mo\u017En\xE9 vn\xED\
      mat enoce stroje, eugabii a dal\u0161\xED lidsk\xE9 emoce. V tomto testu nerozum\xED\
      me, \u010Di je stroj jen nesinuluje."
    truth: 3
  9:
    pred: 0
    text: "T \u0159\xEDk\xE1 n\xE1m, jak dob\u0159e odhadujeme parametry, kter\xE9\
      \ se sna\u017E\xEDme naximalizovat vstup: parametry w v\xFDstup: Re\xE1ln\xE9\
      \ \u010D\xEDslo lov\xED, kter\xE9 popisuje kvalitu parametr\u016F NS nov\xE9\
      \ parametry n' = w - loss"
    truth: 0
  10:
    pred: 4
    text: "\uFFFD m\u016F\u017Ee dojet k tomu, \u017Ee se peri skv\u011Bl\xE1 informace\
      \ (p\u0159edchoz\xED V\xE1\u0161 je moc hezk\xE1) x;To se tam rad\u0161i uvol\u0148\
      uje na velko prost\u011B se s 60 hodin v existuj\xED nejmen a nudit se nikdy\
      \ neprodaval do discipl\xEDnk. \uFFFD Nen\xED to mo\u017En\xE9, jeliko\u017E\
      \ LB v\u016Fbec tento alg. neovliv\u0148uje a v\u017Edy spr\xE1vn\u011B najde\
      \ glob. minimum velko) = o"
    truth: 0
  11:
    pred: 4
    text: "1x1x4096 1x1x256;21;obr.;u;\uFFFD po\u010Det operac\xED n\xE1s. podle velikosti\
      \ vstup. obr.;po\u010Det pxl. obr x po\u010Det konv. vrstev x p (velikost);;po\u010D\
      et kan\xE1l\u016F"
    truth: 0
  12:
    pred: 4
    text: "-> tyto v\u011Bktory;jsou;pro ka\u017Ed\xE9 slovo unik\xE1tn\xED;\uFFFD\
      \ W. aritmetika;\u0159\xEDk\xE1 n\xE1m, jak moc jsou si dv\u011B slova podobn\xE1\
      . hr\xE1l z monarcha eukl. vzd. je mal\xE1, jedn\xE1 se o syrov\xFDm;K\u010D\
      s;bod;programu;kr\xE1l n \u0159idi\u010D emkl. Vod. je velk\xE9 slova nemaj\xED\
      \ nic spole\u010Dn\xE9ho Dur Buon \uFFFD max index \uFFFD je rychlej\u0161\xED\
      ;\xFAroda"
    truth: 3
  13:
    pred: 3
    text: "a (skial) = Etupky Erberak) / skrac;vstupy: aktu\xE1ln\xED stav a akce,\
      \ kterou si m\u016F\u017Ee vybrat v\xFDstup: \u0159\xEDk\xE1 n\xE1m, kter\xE9\
      \ akce m\xE1me br\xE1t, abysme naxinalizovali pr\u016Fm\u011Brnou odm\u011B\
      nu u\u017E\xEDv\xE1 ji k tom, aby se nau\u010Dil, kter\xE9 akce v dan\xFDm stavech\
      \ narimeluj\xED jeho pr\u016Fm. odm\u011Bnu"
    truth: 3
26a9350a320f080e23e865aa5320e0ac:
  0:
    pred: 0
    text: ''
    truth: 0
  1:
    pred: 3
    text: "minim\xE1lne hodnoty hlad\xE1me, ke\u010F sa sna\u017E\xEDme hra\u0165\
      \ tak, aby sme mali minim\xE1lne straty (pri maxim\xE1lnem pokladu \xFA\u017E\
      itku). Vych\xE1dza to z super sa n\xE1m sna\u017E\xED maxim\xE1lne u\u0161kodi\u0165\
      . Vyu\u017E\xEDvame vtedy, ale je na\u0161a maxim\xE1lna strata superar\xFD\
      m maxim\xE1lnym ziskem a opa\u010Dne."
    truth: 3
  2:
    pred: 0
    text: ''
    truth: 0
  3:
    pred: 2
    text: "akomick\xE1 - neuchov\xE1va dal\u0161\xEDe informacie faktorizovan\xE9\
      \ - z\xE1znam o atributoch;\u0161kulturovan\xE1 - z\xE1znam o vztahoch medzi\
      \ objektami"
    truth: 0
  4:
    pred: 0
    text: "E) p(x) = N|x, x - vstupy, vektor n- stredn\xE1 hodnota, ud\xE1va strad\
      \ klasifik\xE1toru. Pre ZD d\xE1ta tvar n = L\xB0. popisuje vztahy medzi pravdepodobnos\u0165\
      ami na osex, y \u017D-kovaria\u010Dn\xE1 matica na hlavnej diagon\xE1le ud\xE1\
      va vztah velkosti pravdepodobnost\xED (napr. 2= 2|\xB0) I na ose bude pravdep.\
      \ 2x v\xE4\u010D\u0161ia ne\u017E na ose mimo hlavnej diag. mus\xED by\u0165\
      \ symetrick\xE1, popisuje korel\xE1ciu medzi x, y; prejav\xED sa to splo\u0161\
      ten\xEDm a roz\xE1ciou pro ZD d\xE1ta tvar E= E= C? J Pravdepodobnost se vypo\u010D\
      \xEDtame:;SZTTE;Z\xE1rove\u0148 mus\xED platit: p(geolx) = p(y = ||x) + p(y=2|x)\
      \ = 1"
    truth: 0
  5:
    pred: 2
    text: "logistick\xE1 regresia, line\xE1rna regresia;externagista pracuje na z\xE1\
      klade sk\xF3re s= w1. x + b. Pomocou nebo potom napr. s pou\u017Eit\xEDm signorid.\
      \ funkcia vypo\u010D\xEDta pravdepodobnos\u0165 p.;p(y = 1 (x, w, b) = 1+ exp(\
      \ = ply= 0|x, w|b) = 1 - p(g=1| ...);rozdiel s generat. klasif. modelmi je v\
      \ tom, \u017Ee sa diskrim. nesna\u017E\xEDa najsk\xF3r modelovat triedu z kt.\
      \ boli d\xE1ta generovan\xE9. Namiesto toho klasifikuj\xFA priamo zo vstupem."
    truth: 2
  6:
    pred: 2
    text: "P(B) = P(B|A) . P(A) B) P(B|A) =;P(A|B) P(B);P(A);A-pezitivny B-nakazen\xFD\
      ;A'- negativny B - nenakazen\xFD;PIAZ P(AIB) - PIAIBI);P(B) = 0.2 P(B|) = 0.8\
      \ P(A|B) = 0.9 p(A|B) = o. n P(\xC1TEK) = 0.975 P(A|B|) = 0.025;P(A|B|) P(B|\
      \ P(A) - PSATET P(B|) P(B) P(B|(B|(A) = P(AIB) PA|B) o. g. LISTOPADU;P(B|IA)\
      \ =;12;8 P(bIA) = 1-P(B|A) = 1-8) = 10 1/3"
    truth: 0
  7:
    pred: 4
    text: "1. 5;Pokyn. regresia sa nau\u010D\xED v\xE1hy modelu tak, aby v\xFDsledn\xFD\
      \ model \u0161iel bez vstupno/v\xFDstupn\xE9 body."
    truth: 0
  8:
    pred: 0
    text: "Turingov test m\xE1 uk\xE1za\u0165, \u010Di je model \"auton\xF3mne mysliaci\"\
      \ a \u010Di dok\xE1\u017Ee komunikovat rovnalo, ale \u010Dlov\u011Bk. Nedostatky:\
      \ dnes u\u017E existuj\xFA textov\xE9 modely, let. Vy pravdepodobne boli schopn\xE9\
      \ prejsk T (GPT) - tieko modely ale nedok\xE1\u017Eu myslie\u0165\", iba generuj\xFA\
      \ nejpravdepodobn\u011Bj\u0161ie sekvencie"
    truth: 0
  9:
    pred: 3
    text: "stupce loss funkcia po\u010D\xEDta odchylku vypo\u010D\xEDtan\xE9ho od\
      \ re\xE1ln\xE9ho. Pou\u017E\xEDva sa pred \xFApravou parametrov a pom\xE1ha\
      \ zjistit, ako daleko sme od po\u017Eadovan\xE9ho v\xFDsledku. M\xE1 k dispozicii\
      \ po\u017Eadovan\xFD v\xFDstup pre ka\u017Ed\xFD vektor vstupov X1 jej vstup\
      \ je vypo\u010D\xEDtan\xFD v\xFDstup modelu yn. V\xFDstupem je hodnota (vektor\
      \ hodnot) vzd\xEDlenosti gen od tn."
    truth: 4
  10:
    pred: 1
    text: "learning rake;\xE1no, je;to mo\u017En\xE9. Ak je LR p\u0159\xEDli\u0161\
      \ velk\xE1, GD sa spr\xE1va ako;obr\xE1zen\xE9 kyvadlo\" - sko\u010D\xED na\
      \ jednu stranu od po\u017Eadovan\xE9ho v\xFDsledku, zist\xE9 \u017Ee mus\xED\
      \ j\xEDst na opa\u010Dn\xFA stranu a sko\u010D\xED e\u0161te \u010Falej (v absolutnej\
      \ hodnot\u011B) od po\u017Eadovan\xE9ho v\xFDsledku. Takto to pokra\u010Duje,\
      \ a\u017E pokia\u013E hodnoty vypo\u010D\xEDtan\xE9 CD bud\xFA p\u0159\xEDli\u0161\
      \ velik\xE9, pojdu a\u017E do nekone\u010Dn\xE1.;ak je naopak LR p\u0159\xED\
      li\u0161 mal\xE1, bude v\xFDpo\u010Det trva\u0165 p\u0159\xEDli\u0161 dlho (gradient\
      \ p\u0159ijde po p\u0159\xEDli\u0161 mal\xFDch krokoch) a my strat\xEDme trpectivost\
      \ / nebudeme ma\u0165 dos\u0165 \u010Dasu na tr\xE9novanie - tie\u017E nedotr\xE9\
      nujeme model."
    truth: 4
  11:
    pred: 4
    text: "vstup;p = fy;,kde;p- po\u010Det operaci\xED;Fx - velkost filtru v sueze\
      \ x Py-ve\u013Ekost filtru v smere y;A. 1 + B + 2 + 3 t ..."
    truth: 1
  12:
    pred: 2
    text: "word vecker aritmetika =;word embeddings = vektory vyjadruj\xFA okrem sekvencie\
      \ aj jej vz\u0165ahy (s\xE9mantick\xE9) s in\xFDmi sekvenciami - vektory podobn\xFD\
      ch slov bud\u016F podobn\xE9 \u010Falej vyjadruj\xFA kontext, \u010Do znamen\xE1\
      \ \u017Ee vektory slov v podobn\xE9m kentexte (ma\u010Dka), (ma\u010Diarko)\
      \ alebo vynav\xEDm bude bli\u017E\u0161\xEDc pri sebe popisuje operacie, kt.\
      \ m\xF4\u017Eme s t\xFDmito vextormi robik, napr.: - plus, m\xEDnus (pes - (ma\u010D\
      ka) = (dom\xE1ce \u017Eriva)) n\xE1sobenie skal\xE1ram - zv\xE1\u017E\xEDme\
      \ vektor - dok produck - ne vyjadri\u0165 korel\xE1ciu dvojh vektorov"
    truth: 0
  13:
    pred: 2
    text: "policy function - t\xE1to f-cia sa sna\u017E\xED agenta nau\u010Di\u0165\
      , ale si v stavoch vybera\u0165 akcie na z\xE1klade odmeny vstupy: aktu\xE1\
      lny stav a akcie v\xFDstupy: vybran\xE1 akcie /nasleduj\xEDc\xED stav"
    truth: 1
28820ed35e5098a689435823adf2e4e2:
  0:
    pred: 1
    text: "\uFFFD;AND;- zapamatova porady rohledovan\xE1;Ak zapamatujem stavy ktor\xED\
      \ vedu k r\xEDe\u0161en\xEDm tak mo\u017Eeme ne presumo vat ho dvakrat ak uvid\xED\
      m ho e\u0161te raz. V na\u0161om pr\xEDpade e\u0161te m\xE1me vzel 3 cyklusom\
      \ a preto ak budem ved\u0159et \u017Ee ten vzel ur\u010D\xEDte zde do c\xED\
      ele, tak za\u017Eitkujem velia \u010Dasu, ktory by mohli stratit na to aby dozvedat\
      \ sa v\u0161echn\xE9 stavy cesta k ktorym Tde cez uzel 3. V na\u0161om p\u0159\
      \xEDpad\u011B dovzlas okl\xE1d\xE1me, \u017Ee jsou oba hr\xE1\u010Di 2. Minimax\
      \ je popul\xE1rn\xED algoritmus pro \u0159e- na algoritmu spo\u010D\xEDv\xE1\
      \ v hled\xE1n\xED minim\xE1ln\xEDch stop racion\xE1ln\xED, tedy \u017Ee maximalizuj\xED\
      \ sv\u016Fj u\u017Eitek. P\u0159e- hodnot. Vysv\u011Btlete tento rozpor a pojmenujte\
      \ odpov\xEDdaj\xEDc\xED vlastnost her, pro n\u011B\u017E minimax lze pou\u017E\
      \xEDt."
    truth: 1
  1:
    pred: 1
    text: "ke\u010F ho vy\u0159e\u0161\xEDme popostroch pro hled\xE1n\xED norm\xE1\
      ln\xEDch hodnot - tak naja naj\u010Dast\u011Bj\u0161\xEDm Algoritmy ktory hladaj\xFA\
      \ m\xEDn\xEDme hodnotu naj\u010Dast\u011Bj\u0161ie hladaj\xFA parametry rodelu\
      \ pr\xED ktorem chyba je n\xEDm maln\xE1, alebo hladuju z\u0159e\u0161enie z\
      \ m\xEDn\xEDmalnou cenou. Aby sme mohli pou\u017E\xEDt m\xEDn\xEDnax hra ma\
      \ spl\u0148ovat take vlastnosti: e) Mo\u017Eeme ohodnoti\u0165 ka\u017Edu akc\xED\
      ch v hry, a \u010D\xEDm vat\u0161\xEDe bude hodnota hodnocen\xED a t\xEDm lep\u0161\
      \xEDe bude pre hra\u010D\xE1 ktory tu akc\xED a v rob\xEDl 2) Hra mus\xED byt\
      \ znulovym su\u010Dtom. Aby Lebo M\xEDn Max funguje tak \u017Ee maximalizujeme\
      \ svoj u\u017Eitek a m\xEDn\xEDmalizujeme u\u017Eitek Tv\xFDch hra\u010Dov"
    truth: 1
  2:
    pred: 1
    text: "BFS - O(1 + 18. 10.b) - mus\xEDme pamatovat v\u0161echny stavy; DFS-O(D)\
      \ 2 0 (6 + 18. 0) - EXPLORED \uFFFD BES; DESR-O (D- EXPLORED)"
    truth: 0
  3:
    pred: 0
    text: ''
    truth: 0
  4:
    pred: 3
    text: "1) Pre ka\u017Edu t\u0159\xEDdu vypo\u010D\xEDtame podm\xEDneny pravdepodobnosti\
      \ pomocn\xE1 Max. Novohodno P(C|X) P(C|X) P(c|X), najdeme maxim\xE1ln\xED. Vypo\u010D\
      \xEDtame to z kov. maturity P(c|x) = P(x|c). P(c) pr\u016Fm\u011Br P(X) 2) Parametry\
      \ - P(c), P(c), P(c=), P(cs), 4?, 92, 92, 92, 92, 9, 9, 9, 9, 92, 92, 92, 92,\
      \ 92, 9, Eska, Eska G. K. Organ 4c = 247) 2. = Lenybys z parametru z parametru;Celkom\
      \ - 18 parametrov Vyu\u017E\xEDvame t\u0159e parametry kedy nodelujeme tu funkcia\
      \ gaussovskeho rozlo\u017Een\xEDa ktoru vyu\u017E\xEDvame pro vypo\u010Det pravdepodobnosti.\
      \ 3) Odhadl\xED t\u0159e parametry z pomocou metody maxim\xE1lny verohodnosti,\
      \ napr\xEDklad;argmax p(x|x);Znamena to \u017Ee hl\xEDdame parameter pr\xED\
      \ ktoremu pravdepolnost maximalnos"
    truth: 3
  5:
    pred: 1
    text: "P(c=1|X) = G(x, I);p(c=2|x) = 1p(c=1|x);Br;w nahy;2) \";LI\u0160\xCD TO\
      \ t\xCDm \u017Ee generativn\xED vypo\u010D\xEDtaj\xFA t\u0159e pradepodobnost\xED\
      \ zvla\u017E\u010F a potom z nich ber\u0159eme max\xEDm ale diskriminativny\
      \ vypo\u010D\xEDtaj\xED p jednej t\u0159\xEDdy a hl\xEDdaj\xFA ho rozd\xEDl\
      \ z"
    truth: 1
  6:
    pred: 1
    text: PINY;= 80%;20%;P(P|N) = 90% P(N|PINN) = 97,5% P(PLN|) = 2,5% p(PROKONOM);PVH;P(N|P
      P(N|P) = PIPINI = PINJ = B. , 7o P(P) P(PI=P|P, N|) + PIP, NN) = 100 + 2/30
      200 P(P|N|=P(P|P|A|N) = P(N) = 900 80 . 2,5 100 TOO P(P, NN|=P(P|PINN) - PINN);30/6;1000;7/100
    truth: 4
  7:
    pred: 1
    text: "Body (K, Y);regresna peramen V = 2;Ide o problemu Negeneralizacie. Mozem\
      \ to napravit ak pr\xEDdame v\xEDc dat do trenovacy vzorky."
    truth: 0
  8:
    pred: 3
    text: "C\xEDel z\xEDskit \u010Di na\u0161 agent patr\xED do silnej UI. Ak nau\u010D\
      \xEDme orgenta \u0161pecialne pre ten test tak on z velkej pravdepodobnost ho\
      \ projde. Hlavny nedostatek \u017Ee on testuje len t\u0159e aspekty inteligencie\
      \ ktore spojene z komunikac\xEDej. Mysl\xEDm \u017Ee u\u017E neexistuje smysl\
      \ pou\u017E\xEDvat ten test lebo ho projde v\u011Bt\u0161ina existuj\xFAc\xED\
      ch chat botov ktor\xFD ne patr\xEDa do s\xEDlny Vi"
    truth: 3
  9:
    pred: 4
    text: "\u0161el. Vypo\u010D\xEDtat rozd\xEDl medz\xED vystupem madelu a o\u010D\
      akovan\xFDm vystupen. Po\u010Das U\u010Den\xEDa jej m\xEDn\xEDmalizujem. Vstup-o\u010D\
      akovan\xE1 hodnota a hodnota ktoru dal model, vystup - hodnota chyby"
    truth: 4
  10:
    pred: 1
    text: "b\u0159eh;Mysl\xEDm \u017Ee n\xEDe, febo c\xEDel GB a SED men\u0161\xED\
      t tu konstantu v zavislosti, od toho aby mame gradient. Ale pr\xEDtom ako aj\
      \ pre in\xFDch optim\xE1zatorech pr\xEDl\xED\u0161 maly alebo veliky lz mo\u017E\
      e zhor\u0161it vysledky u\u010Den\xED."
    truth: 1
  11:
    pred: 4
    text: "x = ve v\xEDk. d. d) . Ok;x - hodnota prxela ik- input kanaly d-rozner\
      \ j\xE1dra ok- out put kanaly u nasoben\xED"
    truth: 2
  12:
    pred: 2
    text: "Chceme aby t\u0159e vektory zachovaly sematiku slova. Ten pojem znamen\xE1\
      \ aritmetiku oktory pravid\xEDme operacie nad rektorami ktory bol\xED z\xED\
      skan\xE9 zpomocou \u201Eword embeddlings\". Napr\xEDklad jak spo\u010D\xEDtame\
      \ vzd\xE1lenosti medz\xED slovami tak mo\u017Eeme dozv\u011Bdat sa \u010Di su\
      \ t\u0159e slova synon\xEDme."
    truth: 3
  13:
    pred: 3
    text: "P\u0159\xED DQN neuronov\xE1 s\xED\u0165 modeluje A funkc\xEDu ktor\xE1\
      \ zalo\u017Eena na Bellmanovej rovn\xEDce. Na vstup d\xE1vame stav, na vystupe\
      \ z\xEDskame hodnocen\xEDe v\u0161echych mo\u017En\xFDch akc\xED hodno;Hodnocen\xED\
      ;Stav 5;\uFFFD;DaN;- s\xE1m;\uFFFD a2 \uFFFD a3;-> an;a - hodnocen\xED pre akc\xED\
      \ C"
    truth: 3
2999da745d9319388937680319e94ef8:
  0:
    pred: 1
    text: "6;86 od V roku A vyb\xEDr\xE1 tak protihr\xE1\u010D, a jeho tahem hra kon\u010D\
      \xED M\u016F\u017Eeme tedy vyhodnotit tak A, a p\u0159i dal\u0161\xEDch hr\xE1\
      ch, pokud m\xE1me mo\u017Enost t\xE1hnout do A, u\u017E v\xEDme, \u017Ee pokud\
      \ bychom t\xE1hli do AI hra pro n\xE1s v\u017Edy skon\u010D\xED kladn\xFDm ohodnocen\xED\
      m, bez stolu a nemus\xEDme u\u017E usel znovu vyhodnocovat za p\u0159edpokladu,\
      \ \u017Ee si m\u016F\u017Eeme vybrat tah a zaj\xED \xE1 v\xFDhradn\u011B mus\xED\
      me dr budeme m\xEDt novinou vybe- Minimax je popul\xE1rn\xED algoritmus pro\
      \ resen- hr\xE1\u010Dov\xFDch h\xE9r, kde p\u0159edpokl\xE1d\xE1me, \u017Ee\
      \ jsou oba hr\xE1\u010Di nemec racion\xE1ln\xED, tedy \u017Ee maximalizuj\xED\
      \ sv\u016Fj u\u017Eitek. P\u0159esto hodnot. Vysv\u011Btlete tento rozpor a\
      \ pojmenujte odpov\xEDdaj\xEDc\xED vlastnost her, pro n\u011B\u017E r;oc"
    truth: 1
  1:
    pred: 4
    text: "inimax lze pou\u017E\xEDt.;Podstatou minimaxuje, \u017Ee se jedn\xE1 o\
      \ tzv. \"zero-suma\" hru, tj. sick jednoho hr\xE1\u010De p\u0159\xEDmo odpov\xED\
      d\xE1 ztr\xE1t\u011B druh\xE9ho (a spravidla se hr\xE1\u010Di na tahu st\u0159\
      \xEDdaj\xED). Pokud je tedy protivn\xEDk racion\xE1ln\xED, bude se v\u017Edy\
      \ sna\u017Eit t\xE1hnout tak, aby mini- malizoval n\xE1\u0161 potenci\xE1ln\xED\
      \ v\xFDsledek. Proto pro anal\xFDzu jeho tahu hled\xE1me (pro n\xE1s) nejhor\u0161\
      \xED v\xFDsledek, zat\xEDmco pro anal\xFDzu na\u0161eho tahu naopak ten nejlep\u0161\
      \xED."
    truth: 4
  2:
    pred: 1
    text: "1) BFS: O (nk);DFS: O (n);n= D;I BFS: stejn\xE9 i DES: O (nap\u0159) (b)"
    truth: 3
  3:
    pred: 3
    text: "agent pot\u0159ebuje zn\xE1t ohodnocen\xED sou\u010Dasn\xE9ho stavu stavy,\
      \ kter\xFDch lze dos\xE1hnout - ohodnocen\xED dan\xFDch stav\u016F Agentova\
      \ reprezentace stavu spo\u010D\xEDv\xE1 v: identifik\xE1toru + ohodnocen\xED\
      \ sou\u010Dasn\xE9ho stavu vektoru ohodnocen\xED v\u0161ech okoln\xEDch stav\u016F"
    truth: 3
  4:
    pred: 0
    text: "Gausovsk\xFD blazifik\xE1tor je pops\xE1n pomoc\xED st\u0159edn\xED hodnoty,\
      \ bevorian\u010Dn\xED matice pro ka\u017Edou t\u0159\xEDdu, a vah jedno- tliv\xFD\
      ch t\u0159\xEDd"
    truth: 0
  6:
    pred: 3
    text: "INF. ER;P(+;(2) =;\xCDN\xCD;P(N|-;P(2|-;P(z|+;P(t|N);KART.;OBT-PCNI = 0,8\
      \ 0,9 =0,1 =2P/N|+) -0,975 = 1\xED p(Z|-) = 0,025 z 209;=?;21;k kte\u0159\xED\
      \ jsou % naka\u017Een\xFDch pozitivn\xED Po pozitivn\xEDch celkem P(N) DALVI+\
      \ P(+IN) -;(N|+) + plz udiven\xED;0,25 0,9;sud - prefect quast 800;0,18;0,20,97\
      \ 0,80,025;0,78 + 0,02;0,20"
    truth: 4
  7:
    pred: 4
    text: "Probl\xE9mem zde je, \u017Ee model v\u016Fbec negeneralizuje: smyslem modelu\
      \ m\xE1 b\xFDt odhad funkce pro nov\xE9 hodnoty a model m\xEDsto toho p\u0159\
      esn\u011B vykreslil jednu konkr\xE9tn\xED funkci, nedok\xE1\u017Ee proto odhadovat\
      \ nov\xE9 data, dal by se napravit bu\u010F sn\xED\u017Een\xEDm \u0159\xE1du,\
      \ nebo p\u0159id\xE1n\xEDm v\xEDce vstupn\xEDch dat, aby po\u010Det vstup\u016F\
      \ v\xFDrazn\u011B p\u0159evy\u0161oval \u0159\xE1d regrese a nepod\xE9l musel\
      \ generalizovat"
    truth: 0
  8:
    pred: 1
    text: "C\xEDlem je rozhodnout jestli je testovan\xE1 um\u011Bl\xE1 inteligence\
      \ srovnateln\xE1 s lidskou inteligenc\xED (tj. jestli se n\xE1m povedlo sestrojit\
      \ silnou um\u011Blou inteligen nerozeznatelnou od \u010Dlov\u011Bka). Nedostatkem\
      \ je, \u017Ee za dan\xFDch podm\xEDnek by slab\xE1 um\u011Bl\xE1 inteligence\
      \ mohla teoreticky p\u0159edst\xEDrat, \u017Ee se jedn\xE1 o silnou inteligenci\
      \ prost\xFDm skl\xE1d\xE1n\xEDm odpov\u011Bd\xED slov dohromady podle dostate\u010D\
      n\u011B kompletn\xED komplexn\xED p\u0159edlohy a t\xEDm text zneplatnil tzv.\
      \ \"Chirese novou argument\")"
    truth: 0
  9:
    pred: 2
    text: "optim\xE1ln\xED Jej\xED rol\xED je ur\u010Den\xED odchylky od c\xEDlov\xE9\
      ho stavu Jej\xEDm vstupem jsou vypo\u010D\xEDtan\xE9 hodnoty; v\xFDstupem suma\
      \ \u010Dtverc\u016F odchylek od o\u010Dek\xE1van\xFDch hodnot."
    truth: 2
  10:
    pred: 4
    text: "je to mo\u017En\xE9 - p\u0159i p\u0159\xEDli\u0161 velk\xE9 hodnot\u011B\
      \ learning rate p\u0159esko\u010D\xEDme se m\u016F\u017Ee st\xE1t, \u017Ee optim\xE1\
      ln\xED hodnotu a dostaneme se k \xFApln\u011B jin\xE9mu v\xFDsledku (budeme\
      \ sk\xE1kat o moc velkou hodnotu, nikdy se neust\xE1l\xEDme na optime zabrd\
      \ Naopak u p\u0159\xEDli\u0161 mal\xE9ho LR by u\u010Den\xED p\u0159\xEDli\u0161\
      \ velk\xE9 mno\u017Estv\xED krok\u016F"
    truth: 4
  11:
    pred: 4
    text: "+ n + n + d n ... po\u010Det prvk\u016F a... po\u010Det filtr\u016F vrstvy"
    truth: 2
  12:
    pred: 2
    text: "Chceme, aby slova \u010Dasto pou\u017E\xEDvan\xE1 spole\u010Dn\u011B m\u011B\
      la mezi sebou co nejmen\u0161\xED euklidovskou vzd\xE1lenost Word Vector aritmetika\
      \ je proces um\xED\u0161\u0165ov\xE1n\xED slov do lodkup tabulky podle jejich\
      \ vyu\u017Eit\xED ve v\u011Bt\xE1ch"
    truth: 2
  13:
    pred: 3
    text: "S\xED\u0165 modeluje tzv Q-funkci. Vstupem je vektor hodnot a matice vah,\
      \ kter\xFDmi je tento vektor n\xE1sobem. V\xFDstupem je vektor hodnot, kter\xE9\
      \ jsou p\u0159ed\xE1ny d\xE1t."
    truth: 1
2b1500702cc62787245e747cf6e7e907:
  0:
    pred: 2
    text: "56;Stav 1 vede k \u0159e\u0161en\xED proto\u017Ee stavy 2 a 3 vedou k \u0159\
      e\u0161en\xED;Stav 4 vede k \u0159e\u0161en\xED proto\u017Ee si pamatujeme \u017E\
      e stav 1 vede k \u0159e\u0161en\xED \uFFFD nemus\xED se prohled\xE1vat stav\
      \ 5."
    truth: 0
  1:
    pred: 1
    text: "hodnot. Vysv\u011Btlete tento rozpor a pojmenujte odpov\xEDdaj\xEDc\xED\
      \ vlastnost her, pro n\u011B\u017E minimax lze pou\u017E\xEDt.;Minimax sestavujeme\
      \ z pohledu jednoho hr\xE1\u010De. Sna\u017E\xEDme se tedy maximalizovat \u0161\
      anci \u017Ee vyhrajeme a minimalizovat \u0161anci \u017Ee vyhraje soupe\u0159\
      . Minimax je pro hry kde se hr\xE1\u010Di na tahu st\u0159\xEDdaj\xED v\u017E\
      dy po jednom tahu proto polovina algoritmu spo\u010D\xEDva v hled\xE1n\xED minim\xE1\
      ln\xEDch hodno vhodn\xFD pro hry v kter\xFDch lze jednozna\u010Dn\u011B posoudit\
      \ jak dobry dan\xFD tah a pro hry kde p\u0159edpokl\xE1d\xE1me \u017Ee se soupe\u0159\
      \ sna\u017E\xED vyhr\xE1t stejn\u011B jako"
    truth: 0
  2:
    pred: 1
    text: '1) BFS: OLE DFS: ObxD-D);600 060 000 300 - narozeniny;4;27;2);OlsAbsk...
      + 51) pro BFS : DFS'
    truth: 0
  3:
    pred: 0
    text: "Aby se pro ka\u017Edou akci dal;spo\u010D\xEDtat po\u010Det krok\u016F\
      \ do o\xEDle"
    truth: 0
  4:
    pred: 3
    text: "NKM, Z) u- st\u0159ed pro danou t\u0159\xEDdu (2 re\xE1ln\xE1 \u010D\xED\
      sla) - matice ur\u010Duj\xEDc\xED rozlo\u017Een\xED (4 re\xE1ln\xE1 \u010D\xED\
      sla) x - bod pro kter\xFD hled\xE1me t\u0159\xEDdu (z re\xE1ln\xE1 \u010D\xED\
      sla) u- je st\u0159ed proto se odhadl ze st\u0159edu t\u0159\xEDdy E-m\xE1 na\
      \ hlavn\xED diagon\xE1le rozpt\xEDl na ose x ay a na vedlej\u0161\xED dagon\xE1\
      le korelaci na ose x a y"
    truth: 0
  5:
    pred: 0
    text: ''
    truth: 0
  6:
    pred: 0
    text: 'p (hak ) = 0,2 p(posl. /nak) = 0,9 p (negl = 0,975;P(pos, nak) = P(posluab)
      p (nak) = P(nak) plans) = 0,2. 0,9 =0,18;P(pos) = P(posluak) : pluk) + P(posledn)
      + P(zdr) = 0,18.02 + 0,025.0,8=0,036 + 0,02 =0,056 p(posl nab) plnak) P(hak/pos):;P(pos);0,056;0,18'
    truth: 0
  7:
    pred: 1
    text: "P\u0159etr\xE9novanost d\xE1 se opravit pomoc\xED v\u011Bt\u0161\xEDho\
      \ po\u010Dtu dat Probl\xE9m vznikne pokud budou nov\xE1 data generovan\xE9 pomoc\xED\
      \ s polynomialn\xED funkce vy\u0161\u0161\xEDho ne\u017E druh\xE9ho \u0159\xE1\
      du."
    truth: 1
  8:
    pred: 3
    text: "- rozpoznat \u010Dlov\u011Bka od AI \u2014 1. z\xE1v\u011Br - lze rozpoznat\
      \ \u010Dlov\u011Bka o AI = AI nen\xED obecn\xE1 AI je obecn\xE1 -2. z\xE1v\u011B\
      r - nelze -II-;Mo\u017Ena nelze rozpoznat zda AI na v\xFDsledky p\u0159i\u0161\
      la a nebo jestli funguje stylem \u010D\xEDnsk\xE9 m\xEDstnosti M\xE1 smysl test\
      \ prov\xE1d\u011Bt pokud se domn\xEDv\xE1me \u017Ee jsme stvo\u0159ily obecnou\
      \ AI"
    truth: 3
  9:
    pred: 3
    text: "zjistit velikost chyby modelu \u2014 men\u0161\xED hodnota na v\xFDstupu\
      \ loss funkce = men\u0161\xED chyba.;vstup jsou v\xFDsledky z modelu a skute\u010D\
      n\xE9 v\xFDsledky (labory) - v\xFDstup je vektor vektoru chyb pro data"
    truth: 4
2ea99fefbc421672603c520f6165d18f:
  0:
    pred: 2
    text: "\u017Ee Zde dojde k zapomenut\xED, nen\xED t\u0159eba tento podstrom d\xE1\
      le prohled\xE1vat, proto\u017Ee neplat\xED, \u017Ee oba podstromy ANDu vedou\
      \ k \u0159e\u0161en\xED. Zopamatujeme si, \u017Ee A nevede k \u0159e\u0161en\xED\
      ;ARI\u0160;\u017Ee prav\xFD u\u017Eitkuje neprozradovat the Luzern zapamatovat\
      \ ne\u017Eli znovu V;zde se zu\u017Eitkuje to, \u017Ee podstrom A net\u0159\
      eba prohled\xE1vat, tak\u017Ee neprohled\xE1me ani F."
    truth: 0
  2:
    pred: 3
    text: "DFS;BFS:;O(D) - udr\u017Eujeme si pouze frontier (z\xE1sobn\xEDk) OPEN,;2)\
      \ o B) - \u0159e\u0161en\xED m\u016F\u017Ee b\xFDt a\u017E v \u201Enejposledn\u011B\
      ji\u201C prohled\xE1van\xE9 v\u011Btvi;2;uzdvo\u0159ujeme si 6 pouze frontier\
      \ (frontu) oper zonov\xEDme se jen p\u0159ibli\u017En\u011B do hloubky 2x, rozbal\xED\
      me n\xE1sleduj\xEDc\xED vrstvu, je to ale 0 (6 ?) asymptotick\xFD - i kdy\u017E\
      \ si 0 (6) pomotujeme v\xEDce informac\xED, asymptoticky je to tot\xE9\u017E\
      ;31. 9. 77 82.27"
    truth: 3
  3:
    pred: 3
    text: "- agent pot\u0159ebuje, aby prost\u0159ed\xED bylo alespo\u0148 \u010D\xE1\
      ste\u010Dn\u011B pozorovateln\xE9 - agent pot\u0159ebuje, aby stavov\xFD prostor\
      \ nebyl tvo\u0159en p\u0159\xEDli\u0161 mnoha konstantn\xEDmi plochami (nevhodn\xE9\
      \ pro hill-clim bing) a lok\xE1ln\xEDmi extr\xE9my (nevhodn\xE9 i pro restorty,\
      \ pokud jich je lok\xE1ln\xEDch extr\xE9m\u016F mnoho) \u2014 agentov\xE1 reprezentace\
      \ stavu je otomick\xE1, pamatuje si kde je, a m\u016F\u017Ee kontrolovat sv\xE9\
      \ okol\xED. pouze to,"
    truth: 0
  6:
    pred: 2
    text: "P(naka\u017Eeno/pozitivn\xED);Stol;\u017Eivot polo\u017Eeno);P(pozitivn\xED\
      );t\u016F;o (860;0.025;(naka\u017Eeno) konztituc\xED nebo\u017Ean\xE9 p(naka\u017E\
      eno) = 0,2 p(pozitivn\xED|naka\u017Eeno) = 0. 9 p(negativn\xED|zdrav\xFD) =\
      \ 0.975 p(pozitivn\xED|zdrav\xFD) = 0.025;P(naka\u017Eeno) P(pozitivn\xED) neko\u017E\
      eno);P(naka\u017Eene) P(pozitivn\xED neke\u017Eene) + p(zdrav\xFD);P(nak.) P(poz.\
      \ l nak.);p(nek.) P(poz. / nok.) + 1 (1-2 (naka\u017Eeno). 1- P(negativn\xED\
      ) zdrav\xFD);0.18;0.2x0. 9;\u010D. 18 + 0, 2 20 10;0.2x0.9 + 0. 8. 0.025;P(pozit.;;proto\u017E\
      e 12 STOK"
    truth: 4
  7:
    pred: 4
    text: "Ta k\u0159ivka by m\u011Bla b\xFDt dokonalou parabolonu. Polynomi\xE1ln\xED\
      \ regrese dru k\xE9ho \u0159\xE1du modeluje parabolu, ov\u0161em ka\u017Ed\xE9\
      \ t\u0159i body nele\u017E\xEDc\xED na stejn\xE9 p\u0159\xEDmce mohou b\xFD\
      t povabolou zcela dokonale interpolov\xE1ny. Do\u0161lo k p\u0159e- tr\xE9nov\xE1\
      n\xED, tedy model dokonce sed\xED na tv\xE9novac\xED dota. \u0158e\u0161en\xED\
      m by bylo pou\u017E\xEDt v\xEDce dat k tr\xE9nov\xE1n\xED, nebo sn\xED\u017E\
      it \u0159\xE1d metody."
    truth: 4
  8:
    pred: 0
    text: "C\xEDlem Turingova testu je dok\xE1zot, \u017Ee model, kter\xFD povo \u017E\
      ujeme ze obecnou um\u011Blou inteligenci, je obecnou um\u011Blou inteligenc\xED\
      . Mo\u017En\xE9 v\xFDstupy: 1. Bylo dosa\u017Eeno obecn\xE9 um\u011Bl\xE9 inteligence,\
      \ kter\xE9 je k nerozez- r\xE1n\xED od \u010Dlov\u011Bka. 2. Dobr\xFD model\
      \ nen\xED obecnou um\u011Blou inteligenci, tedy takov\xE1 dosud neexistuje.\
      \ Nedostatek je takov\xFD, \u017Ee um\u011Bl\xE1 inteligence m\u016F\u017Ee\
      \ b\xFDt c\xEDlen\xE9 tr\xE9novan\xE9 pr\xE1v\u011B pro Turing\u016Fv test,\
      \ ale st\xE1le nebude obecnou um\u011Blou inteligenc\xED. D\xE1 se argumentovat\
      \ i \u010D\xEDnsk\xFDm pokojem, ale to nev\xEDm jako vklidn\xED p\u0159ipom\xED\
      nku."
    truth: 0
  10:
    pred: 4
    text: "P\u0159i zvolen\xED p\u0159\xEDli\u0161 vysok\xE9 u\u010D\xEDc\xED konstanty\
      \ m\u016F\u017Ee u\u010Den\xED divergovat! Tedy p\u0159i v\xFDpo\u010Dtu dal\u0161\
      \xEDho kroku gradientn\xEDho sestupu ud\u011Bl\xE1me tak mohutn\xFD krok, \u017E\
      e m\u016F\u017Eeme v\xFDrazn\u011B p\u0159ekro\u010Dit lok\xE1ln\xED minimum\
      \ funkce, jej\xED\u017E minimum hled\xE1me, efektivn\u011B se od n\u011Bj vzd\xE1\
      lit. p\u0159i volb\u011B p\u0159\xEDli\u0161 mal\xE9 u\u010D\xEDc\xED konstanty\
      \ naopak m\u016F\u017Ee v\xFDpo\u010Det trvat ne\xFAnosn\u011B dlouho."
    truth: 4
  11:
    pred: 2
    text: "c. k.;C - po\u010Det bun\u011Bk konvolu\u010Dn\xEDho j\xE1dra k - po\u010D\
      et konvolu\u010Dn\xEDch jader \uFFFD velikost vstupn\xEDho obr\xE1zku v sou\u0159\
      adnici -velikost v\xFDstupn\xEDho obr\xE1zku v sou\u0159adnic Pou\u017E\xED\
      v\xE1me jedno konvolu\u010Dn\xED j\xE1dro pro ka\u017Ed\xFD konvol"
    truth: 2
  13:
    pred: 3
    text: "P\u0159i deep-learningu modeluje neuronov\xE1 s\xED\u0165 funkci, kter\xE1\
      \ vstup dost\xE1v\xE1 akce, kter\xE9 lze v prov\xE9st a po v\xFDstup vrac\xED\
      \ velikost odm\u011Bny pro agenta, kter\xE1 ud\xE1v\xE1, \u017Ee danou akci\
      \ je nejlep\u0161\xED prov\xE9st pr\xE1v\u011B nyn\xED. Agent se pot\xE9 rozhoduje\
      \ ve sv\xE9m chov\xE1n\xED na z\xE1klad\u011B velikost\xED odm\u011Bny.;m;dom\xE9\
      n stavu"
    truth: 3
2fcfde5bdeca3406910a9f82585f5a99:
  0:
    pred: 2
    text: "59;\xFAspora spo\u010D\xEDva v tom, \u017Ee vie \u017Ee v AND strome m\xE1\
      \ u\u017E jeden ne\xFAsp\u011B\u0161n\xFD stav \u010Dile v\xED nau\u010Di\u0165\
      \ na ho nem\xF4\u017Ee nikdy vyhodnoti\u0165 ako pozitivny, takie \u0165alije\
      \ 2 stavy nemus\xED prehlad\xE1va\u0165;5"
    truth: 0
  1:
    pred: 4
    text: "Minima sa d\xE1 pou\u017Ei\u0165 pri hr\xE1ch, kde sa hr\xE1\u010Di strieduj\xFA\
      . Protihr\xE1\u010D vyber\xE1 minim\xE1ln\xED Lucka podo teto hodnoty se navrhuje\
      \ tak aby hr\xE1\u010D A maximalizoval svoje sk\xF3re a hr\xE1\u010D B ber\xE1\
      \ tak\xE9 akcie kter\xE9 minimalizuj\xED zisk hr\xE1\u010Da A prelo vol\xED\
      \ minimum. Balia vlo\u017Ekost se Ale vieme \u010D\xEDselne ohodnoti\u0165 tahy."
    truth: 0
  2:
    pred: 1
    text: "1.) BFS DFS: O (b. d*);\xFA) BAS = O (26. 0)"
    truth: 0
  3:
    pred: 0
    text: ''
    truth: 0
  4:
    pred: 4
    text: "aposteriorne pravdebodobnosti a vypo\u010D\xEDtaj\xED sa ako po\u010Det\
      \ hodnot v tanci triede podobn\xFD celkov\xFDm po\u010Dtem d\xE1t;Po\u010Det\
      \ parametrov;3 parametre (z trvaly);po\u010Det hodnot:;N(x 4, 2) u - st\u0159\
      edn\xED hodnota, st\u0159ed na\u0161\xEDch d\xE1t, pro ka\u017Ed\xE9 triele\
      \ samostatn\xE9 E-kovarian\u010Dn\xED matica, hlavn\xE1 diagon\xE1la ur\u010D\
      uje roztianetie d\xE1t pod\u013Ea osi. pain / reliavia diagon\xE1la preliturie\
      \ korelaciu melci osami, mus\xED by\u0165 symetrick\xE1 Ma = L: L: i. pro jednu\
      \ triedu 4 parametre, pre 3 t\u0159ety 12 parametrov 6 hodin, -\u201C -\"- 1\
      \ procentor tr kx v\xFDpo\u010Det apo\u0161toliovac\xED pravdepodobnosti: P(X|C)\
      \ . P(C) \";P(C|L) =;PERIFET DIX = NEMNIE P(L|C) - gaussovo rozlo\u017Eenie;18\
      \ hodnot;P(x);POD = {P(X|c) . P(c) - apr. Pravdepol.;pec) - apriorna pravdepodobnos\u0165"
    truth: 4
  5:
    pred: 2
    text: "Logistick\xE1 regresia, SVA. support vectur machines,;P\u0159i logistickei\
      \ regresi\xED sa po\u010D\xEDna Cross-entropy, uposterine pravdepodobnosti.\
      \ Crosi eatrops je loss funkcia na z\xE1klad\u011B krvei u\u010D\xEDme nisticko\
      \ regresia bin\xE1rne parametre: pa: 1 x) = o (\xE9tu) P(C|OL x) = 1-0 (x|k)\
      \ (C|X) nemodelujeme ale primo vypo\u010D\xEDtacame. \uFFFD zimou likelihost:\
      \ grama p(C|X) z ktorej je odveden\xE1 cross entropy ale tam namiesto maximaliz\xF3\
      wie minimalizujeme. j\xED sa tom \u017Ee negenerujeme nic z d\xE1t ale sna\u017E\
      \xEDme sa nau\u010Di\u0165 v\xE1hy tak aby zodpovdali \xE9normn\xEDm t\xE1lum,\
      \ p(C|X) nenotificujeme ale hned vypo\u010D\xEDtavame.;svA-maj\xFA tvrd\xE9\
      \ hranice od ktor\xE9 sa zna\u010D\xEDm l\xE9ta odtl\xE1\u010Dat aktiva\u010D\
      n\xED funkcia se \u201Ehoheika\u201C"
    truth: 2
  6:
    pred: 2
    text: "P(Nakaz) = 0,2;p(poz / rakuz) = 0, 9 p (Nenakaz/nes) = 0,975 \uFFFD P(Nakaz/\
      \ poz) = 0,975 p(pot) a? P(raka2/poz) = P(poz):;p(poz / rozkaz). P(vahaz);p(pozitivakat).\
      \ P(Nakaz);P(pot);0,9. 0,2;p(Naka\u017Elpoz);1975"
    truth: 0
  7:
    pred: 4
    text: "model negeneralizuje nov\xE9 d\xE1ta. Krivka je u\u017E moc komplexn\xED\
      . Napravi\u0165 by sa pou\u017Eit\xEDm viaca i tr\xE9novac\xEDch d\xE1t, alebo\
      \ zmezi\u0165 k.;zrak nakreslil sou triumf, kter\xE1 proch\xE1zka vietn\xED\
      mi bodni."
    truth: 0
  8:
    pred: 1
    text: "Turingov test je pou\u017E\xEDv\xE1 na to aby sme zjistili \u010Di sa d\xE1\
      \ stroj od \u010Dloveka. V\xFDsledkem testu je \u017Ee \u010Dlovek nevede rozozna\u0165\
      \ stroj od dal\u0161\xEDho \u010Dloveka nebo vetel rozvinu\u0165. Test je \xFA\
      spe\u0161n\xE1 ke\u0165 \u010Dlovek - nevede rozozna\u0165 stroj od Julijeho\
      \ \u010Dloveka.;melzenie je paralex \u010Dinenci miestnosti, kde m\xF4\u017E\
      me ma\u0165 \u010Dloveka, kter\xFD preklada slov\xE1 o slovn\xEDku a naopak\
      \ sa m\xF4\u017Ee tv\xE1\u0159i\u0165 jako inteligentn\xFD syst\xE9m ale je\
      \ to oba obsiniac\xED LVT."
    truth: 0
  10:
    pred: 4
    text: "Pri moc vysok\xFDch hodnot\xE1ch LR m\xF4\u017Ee model divagova\u0165 =\
      \ a nikdy sa nedostaneme k optim\xE1lnemu rie\u0161eniu.;to tak \u017Ee v\u0161\
      ak tuto moc vysok\xE1 ulebo m\xF4\u017Ee by\u0165 k pr\xEDli\u017E;n\xEDzky\
      \ a model by sa tr\xE9noval nekone\u010Dne jiho."
    truth: 4
  11:
    pred: 1
    text: "jako;kurka xk. m.;d (to ...);opty;filtr odpitel;Ek. kn na kun-\u0161\xED\
      rka a vnika konvolu\u010Dn\xE9ho jatra"
    truth: 1
  12:
    pred: 4
    text: "chceme aby slov\xED s potokn\xEDm v\xFDznamem boli\u010Do naibli\u017E\u0161\
      ie k sebe. Exchlilovsk\xE1 vzdiaknus\u0165 tak\xE9chlo vektorov je co naimen\u0161\
      ia. Vlak kord vector aritmetike m\xF4\u017Ee hialat\u201C s\xE9cisiace/polohr\xE9\
      \ slov\xE1 napr. Hlavn\u011B mesta a \u0161t\xE1t v ktorou sa nach\xE1lka alebo\
      \ robil opor\xE1cie ako kr\xE1l = mu\u017E = kr\xE1lovn\xE1"
    truth: 4
  13:
    pred: 4
    text: "Modeluje a funkciu. Funkcia vrac\xEDm ohodnotenia akci\xED v konkr\xE9\
      tn\xEDm stave.;stupom je dvojica (S, at). a v\xFDhled ohodnotn\xE9 akcie. Regent\
      \ si najprv natr\xE9nuje \xFAlo (cakciu na tal\xE1ch (replas buller). Pou\u017E\
      \xEDva se aby zjistil akc\xED m\xE1 vykonat \u013Eul\u0161iu akciu."
    truth: 4
4213cbc24a62d7aac83c860a66d64701:
  0:
    pred: 0
    text: "\uFFFD;."
    truth: 0
  1:
    pred: 1
    text: "Minimax je algoritmus, kter\xFD po\u010D\xEDta s t\xFDm, \u017Ee obaja\
      \ hr\xE1\u010Di bud\xFA hrat racion\xE1lne, a proto sa sna\u017E\xED mus\xED\
      \ maximalizova\u0165 rozdiely na ka\u017Edej ur\xF3vni bin\xE1rneho stroma.\
      \ Maxim\xE1lna hodnota n\xE1m ur\u010Duje pro n\xE1s naj- v\xFDhodn\u011Bj\u0161\
      \xED tah, minim\xE1lna hodnota zase reprezentuje nejv\xFDhodn\u011Bj\u0161\xED\
      \ tak z pozicie s\xFApera. Algoritmus funguje spolehlivospotia\u013E s\xFAper\
      \ v\u017Edy vyber\xE1 tahy, kter\xE9 s\xFA pre nebo najv\xFDhodnej \u0161ie.\
      \ Potia\u013E s\xFAper v\xFDber\xE1 taky n\xE1hodne je mo\u017En\xE9 (nahra\
      \ s velk\xFDm po\u010Dtem mo\u017En\xFDch tahov) upravi\u0165 algoritmus tak,\
      \ \u017Ee pri \u0165ahu s\xFApera budeme hleda\u0165 miesto minima premer."
    truth: 2
  2:
    pred: 1
    text: BFS BFS et;DF. DFS a b. D
    truth: 0
  3:
    pred: 3
    text: "Agent pot\u0159ebuje vedie\u0165 - obmedzuj\xEDce podmienky - \u010Di\u017E\
      e to plat\xED v danom prostred\xED a ak\xE9 s\xFA \u201Epravidl\xE1\u201C prostrediu\
      \ a objektu v \u0148om - postavenie dal\u0161\xEDch objektov v diskretnom prost\u0159\
      ed\xED (napr. u\u017E stojace budovy v 2. pokladu) - podobu prost\u0159edia"
    truth: 0
  4:
    pred: 3
    text: "e);e 1/2 (x - u)?;(x) w|t;(ZTI IZ);1/4 kg XN - studn\xED hodnota, ale vysoko\
      \ bude krivka = fyk (x-u) (x - r) - odch\xFDlka / rozptyl x = 2x1, X2, ... XD3\
      \ - vstupn\xFD vektor;a) ="
    truth: 0
  5:
    pred: 2
    text: "\u201ENeur\xF3nov\xE9 siete Line\xE1rna regresio Pri NS sa prech\xE1dza\
      \ jednotliv\xFDmi vrstvami, ktor\xE9 na z\xE1klade ich v\xFDsledkov po\u010D\
      \xEDtaj\xFA pravdepodobnos\u0165 v\xFDskytu ur\u010Dit\xE9ho vzoru v d\xE1tach.\
      \ generativny model se sna\u017E\xED naj\xEDt vhodn\xE9 rozlo\u017Eenie na trenovac\xED\
      ch d\xE1tach, kde\u017Eto diskriminut\xED vny sa sna\u017E\xED vstup mapovat\
      \ na v\xFDstup vhodnou funkcion."
    truth: 0
  6:
    pred: 2
    text: "cektorn\xED pop. p (pozitiv|nahazen\xFD) = p(pozit) nahazen\xFD p (nahazen\xFD\
      );p (nahazenaj / pozit) - P(pozit.) nahazen\xFD p (nahazeny) p (nahazen\xFD)"
    truth: 0
  7:
    pred: 1
    text: "1,5;Na obr\xE1zku je polynomi\xE1lna funkciu 2. r\xE1du, kter\xE1 modeluje\
      \ polyn\xF3m prech\xE1dza- j\xE1ci bodmi, kter\xE9 boli dopreda definova n\xE9\
      . m\xE1lo, s v\xFD\u0159ezem p\u0159\xEDtel"
    truth: 0
  8:
    pred: 4
    text: "\u010Cilom TII je ur\u010Di\u0165, \u010Di odpovede na polo\u017Een\xE9\
      \ ot\xE1zky poskytuje;Knihovna Marie stroj, kter\xFD disponuje inteligentn\xFD\
      m sprvan\xEDm alebo nic. Resp. m\xE1 za \xFAlohu odhali\u0165, \u010Dis odpovede\
      \ poskytol \u010Dlovek alebo stroj. V\xFDstup - pohie\u013E hodnotitel uzn\xE1\
      \ odpove\u010F na svoju ot\xE1zku ako zmytupen\xED, inteligentn\xED je mo\u017E\
      n\xE9 stroj pova\u017Eovat za inteligentn\xFD \uFFFD ak nie tak potom stroj\
      \ nemo\u017Eno pova\u017Eova\u0165 za inteligentn\xED Probl\xE9mem je, \u017E\
      e pohial stroj vykazuje prvky inej jako teologiej inteligencie, p\u0159\xED\
      padne ale je inteligentnej\u0161\xED jako \u010Dlov\u011Bk tak potom je v\xFD\
      stupem testu nespr\xE1vne tvrdenie, \u017Ee stroj m\u011B je inteligentn\xFD\
      . Takt\xE9\u017E sa m\xF4\u017Ee sta\u0165, \u017Ee hodnotitel je podpriemerae\
      \ inteligentn\xFD a aj inteli- gentn\xE9 odpovede m\xF4\u017Ee pova\u017Eova\u0165\
      \ na neinteligentn\xE9:"
    truth: 4
  9:
    pred: 4
    text: "LOS: funkcese hodnot\xED, ale \xFAsp\u011B\u0161n\xE1 bola NS pri analyzovan\xED\
      \ jej vstupu vzhladem na anotovan\xE9 d\xE1ta. Porovn\xE1 va v\xFDstup NS spr\xE1\
      vn\xFDm v\xFDsledkem v anotovan\xFDch d\xE1tach Vstup: v\xFDstup z NS, GT (ground\
      \ trotta z ana d\xE1t) V\xFDstup: \xFAsp\u011B\u0161nost / kvalita v\xFDsledku\
      \ vzhledem na GT"
    truth: 4
  10:
    pred: 4
    text: "Pri algoritme stochastic gradient descent s\xFA vyberan\xE9 ila mini-batche\
      \ d\xE1t, kter\xE9 se derivuj\xED a potom n\xE1sledne spracov\xE1vaj\xFA na\
      \ \xFApravu v\xE1h NS. Pri tomto algoritme teda \xFAprava v\xE1h neprebieha\
      \ na v\u0161elk\xFDch trenovac\xEDch d\xE1tach a nie poka\u017Edom spracovan\xED\
      \ Setr\xED sa t\xFDm \u010Das Pri GD je derivovan\xFD ka\u017Ed\xFD v\xFDstup\
      \ a v\xE1hy s\xFA upravovan\xE9 zaka\u017Ed\xFDm (\u010Dasovo n\xE1ro\u010D\
      n\xE9)."
    truth: 0
  11:
    pred: 2
    text: "Konvolucia je oper\xE1cia, kter\xE1 m\xE1 na vstupe maticu pertov (4xka,\
      \ za \u010Dajne o k=3) a na tieto hodnoty sa aplikuje konvolu\u010Dn\xE9 jadro\
      \ o rovnalej ve\u013Eko Uplik\xE1 cia spo\u010D\xEDva v pren\xE1soben\xED hodn\xF4\
      t vstupnej matice s konv. jadrom a nasledn\xFDm s\u010D\xEDt\xE1n\xEDm t\u011B\
      chto hodnost.;Vzorec:;k *k;je rozmer;konv.;st sprav"
    truth: 2
  12:
    pred: 4
    text: "Word embeddings je vektorov\xE1 reprezent\xE1cia slov. Slov\xE1 s podobn\xFD\
      m z v\xFDznamom r\xFA reprezentovan\xE9 vektorami s podobn\xFDmi hodnotami A\
      \ teda v Look Wp tabulke sa nachadzaj\xFA bl\xEDzko sebe. T\xE1ko vlastnos\u0165\
      \ umo\u017E\u0148uje vykon\xE1va\u0165 methkov\xE9 matematick\xE9 operacie nad\
      \ slovami ozna\u010Dovan\xE9 ale Word Vector uritmetika. Napr. king-men-quen"
    truth: 4
  13:
    pred: 2
    text: "NS modeluje;Vstupem je aktu\xE1lny stav syst\xE9mu V\xFDstupem je potom\
      \ pravdepodobnos\u0165, resp. ohodnotenie nasleduj\xEDceho stavu po vykonan\xED\
      \ ur\u010Ditej akcie"
    truth: 2
4675df389dab25469cf2879db941e2af:
  0:
    pred: 4
    text: "OR-uzel;AND-VZKL;COKL;GOTH - nalezli jsme jednoho nelu \u0159e\u0161iteln\xE9\
      ho potomka Vh n uzel je tedy \u0159e\u0161iteln\xFD;zapamatuji si, \u017Ee n\
      \ je popeliteln\xFD (tedy stav, kter\xFD n p\u0159edstavuje je \u0159e\u0161\
      iteln\xFD);uzel mus\xED m\xEDt \u0159e\u0161iteln\xE9 oba sv\xE9 potomky - jeden\
      \ z nich je \u0159e\u0161iteln\xFD a druh\xFD z nich p\u0159edstavuje stejn\xFD\
      \ stav jako ji\u017E \u0159e\u0161iteln\xFD hzel n (m\xE1me zapamatov\xE1no)\
      \ je \u0159e\u0161iteln\xFD uzel na - nemuseli jsme tedy znovu prohled\xE1vat\
      \ a zkoumat potomky uzlu n a t\xEDm jsme u\u0161et\u0159ili \u010Das a celkov\xFD\
      \ v\xFDpo\u010Det"
    truth: 4
  1:
    pred: 4
    text: "- dalo by se na danou problematiku pohl\xED\u017Eeti tak, \u017Ee o p\u0159\
      edstavuje vyrovn\xE1n\xED u\u017Eitk\u016F obou hr\xE1\u010D\u016F, pozitivn\xED\
      \ hodnota, \u017Ee hr\xE1\u010D 1 je na bohu l\xE9pe a z\xE1porn\xE1 hodnota,\
      \ \u017Ee hr\xE1\u010D 2 je na tom l\xE9pe (plat\xED v\u0161ak pouze pokud je\
      \ rovnost definov\xE1na na 0 (teoreticky m\u016F\u017Ee b\xFDt posunuta m\xED\
      sto dvou (n\u011Bkolika hodnot), kter\xE9 p\u0159edstavuj\xED u\u017Eitky hr\xE1\
      \u010D\u016F (jako v MAXN) se pro dva hr\xE1\u010De mohou u\u017E\xEDt reprezentovat\
      \ pomoc jedn\xEDm \u010D\xEDslem.;pou\u017E\xEDv\xE1 se pro dvouhr\xE1\u010D\
      ov\xE9 hry;jeden hr\xE1\u010D sv\u016Fj u\u017Eitek (hodnota sou maximalizuje\
      \ jeho soupe\u0159 pak hodnotu son\u010Dtu minimalizuje p\u0159edstavuje jeho\
      \ maximal u\u017E\xEDvku);s nulov\xFDm sou\u010Dtem -"
    truth: 4
  2:
    pred: 3
    text: 'BFS DFS:;O (6. D);2) BFS: Off DFS: O (6. D)'
    truth: 3
  3:
    pred: 3
    text: "- agent si udr\u017Euje pouze aktu\xE1ln\xED stav pot\u0159ebuje um\u011B\
      t nal\xE9zat sousedn\xED nely (stavy) a ohodnocovat je - m\u011Bl by m\xEDt\
      \ mo\u017Enost pamatovat si nejlep\u0161\xED nalezen\xFD sbor p\u0159ed vestavbem\
      \ - obecn\xE9 b\xFDv\xE1 sbar/uzel reprezentov\xE1n prom\u011Bnn\xFDmi a jejich\
      \ dom\xE9nami - repraohtace stavu je tedy faktorizovan\xE1 (prom\u011Bnn\xE9\
      \ a jejich dom\xE9ny) velkodobrovoln\xEDk\u016F podru\u017Esk\xFDch aby bylo\
      \ mo\u017En\xE9 probl\xE9m b\xEDmba zp\u016Fsobem \u0159e\u0161it, je nutn\xE9\
      \ aby ho bylo mo\u017En\xE9 t\xEDmto zp\u016Fsobem reprezentovat"
    truth: 3
  4:
    pred: 4
    text: "- pro jednotliv\xE9 t\u0159\xEDdy pot\u0159ebujeme z\xEDskat apriorn\xED\
      \ pravd\u011Bpodobnosti Na po\u010Det vzork\u016F v tr\xE9novac\xEDch datech\
      \ z dan\xE9 t\u0159\xEDdy - 3 hodnot P(c) SENK = celkov\xFD po\u010Det vzork\u016F\
      \ v tr\xE9novac\xEDch datech - d\xE1le jsou pot\u0159eba odhady funkc\xED rozlo\u017E\
      en\xED pravd\u011Bpodobnosti jednotliv\xFDch t\u0159\xEDd z pozorovan\xFDch\
      \ (br\xE9novac\xEDch dat): p(x|c) = N|x; Mej Ec) - pot\u0159ebujeme tedy odhady\
      \ parametr\u016F no a sa pro ka\u017Edou t\u0159\xEDdu (st\u0159edn\xED hodnota\
      \ sou rozpt) v\xFDpo\u010Det: pix = 1/2 x pos\xEDl\xE1me vzorky k dan\xE9 t\u0159\
      \xEDd\u011B a vyd\u011Bl\xEDme po\u010Dtem vzork\u016F uc-je rektor dro hodnot\
      \ \uFFFD celkem 6 hodnot dan\xE9 t\u0159\xEDdy \uFFFD v\xFDpo\u010Det malice\
      \ rozptylu 2x2 - celkem 9 hodnot. 1/4 E (x no = Mo) (x m\xE1 Mo maxim\xE1ln\u011B\
      \ 3 unik\xE1tn\xED 3x3 = 9 hodnot - nyn\xED m\xE1me v\u0161e pot\u0159ebn\xE9\
      \ k v\xFDpo\u010Dtu apostexionn\xED pravd\u011Bpodobnosti t\u0159\xEDd: - v\xFD\
      po\u010Det apostolick\xE9 pst. pro jednotliv\xE9 t\u0159\xEDdy P(c|x) = p(x|c)\
      \ P(c);EPIKIKY (k);- celkem tedy pot\u0159ebujeme:;3x apriorn\xED psb. \uFFFD\
      \ shodnoty 3x u a E \uFFFD 6 parametr\u016F \uFFFD 3x2 + 3x3 = 15 hodnot 3x\
      \ hustota rozlo\u017Een\xED psb. d\xE1na parametry na celkem 18 hodnot pro repozentaci\
      \ parametr\u016F pro ka\u017Edou t\u0159\xEDdu"
    truth: 4
  5:
    pred: 4
    text: "line\xE1rn\xED logistick\xE1 regrese, neuronov\xE9 s\xEDt\u011B pro klasifikaci\
      \ (nap\u0159. sort max na v\xFDstupu);P(cX) = o C|XTW), kdo je vstupn\xED vektor\
      \ nap\u0159 -w je vektor vah nap\u0159. 5 \xB0. \xE1 je logistick\xE1 signalita.\
      \ R\xE1 + 8\xB0C plat\xED pro bin\xE1rn\xED klasifikaci hlavn\u011B p(c=1|x)\
      \ = U|w) => p(c=o|x) = 1- p(c=1) x) hranici mezi t\u0159\xEDdami diskriminativn\xED\
      \ modely modeluj\xED p\u0159\xEDmo aprobatiorn\xED psb. - zam\u011B\u0159uj\xED\
      \ se na - generativn\xED modely nejprve generuj\xED husboby rozlo\u017Een\xED\
      \ ps6 pro t\u0159\xEDdy a jejich apriorn\xED pso. a a\u017E podle pomoc\xED\
      \ Bayesova vzorce d\xE1vaj\xED apostolick\xE9 pst. p(cIX) - diskriminativn\xED\
      \ modely na dostate\u010Dn\xFDch vzorc\xEDch dat vykazuj\xED lep\u0161\xED vlastnosti,\
      \ ale na mal\xE9m po\u010Dtu vzork\u016F jsou n\xE1chyln\u011Bj\u0161\xED k\
      \ p\u0159etr\xE9nov\xE1n\xED jsou pak model\xE1\u0159n\xED dovoluj\xED and-forend"
    truth: 4
  6:
    pred: 1
    text: NS/=;PINS) P(NS);P(P|epis);P(s|P);P(S|P) = P P(P|S|P|S) + P(P|NS) P(ne)
      9:02 P(SIP) =;P(s|P) =;P(S|P) = 0,9 . 02 + 0,035.08;0,9 . 02;P(PIS) P (s);(PIS)
      P(s);P(P);P(s|P) =;P(s, P) = P(S|P) PIP) = P(P|P|S) P(s);P(S|P) =;0,9 02 + 0,035.08
      0,45;0,73;0,45 + 0,28
    truth: 0
  7:
    pred: 1
    text: "funkci nakreslil jsem kvadrabickou ba je polx nomem k 2. \u0159\xE1du;dileo\u017E\
      ;stupn\u011Bm probl\xE9m, kter\xFD nastal je p\u0159etr\xE9nov\xE1n\xED (ne\
      \ p\u0159\xEDmo na obr\xE1zku) zp\u016Fsobem mal\xFDm po\u010Dtem t\u0159\xE9\
      vovac\xEDch dat a k tomu velk\xFDm polenomu a d\xE1lo k prolo\u017Een\xED v\u0161\
      ech br\xE9novac\xEDch dat p\u0159esn\u011B odstran\u011Bn\xED \uFFFD v\xEDce\
      \ tr\xE9novac\xEDch dat, p\u0159\xEDpadn\u011B sn\xED\u017Eit stupe\u0148 polynomu"
    truth: 4
  8:
    pred: 1
    text: "-\xE1lem Turingova testu je zjistit, zdali inteligentn\xED - zdali vykazuje\
      \ princip spo\u010D\xEDv\xE1 v tom, \u017Ee nejsme schopni rozli\u0161it stroj\
      \ od \u010Dlov\u011Bka a vlastnosti \u010Dlov\u011Bka kognitivn\xED schopnosti\
      \ pr\xE1v\u011B na z\xE1klad\u011B t\u011Bchto schopnost\xED \uFFFD stroj vykazuje\
      \ vlastnosti \u010Dlov\u011Bka a \u010Dlov\u011Bk je inteligentn\xED \uFFFD\
      \ stroj je inteligentn\xED. problementan b\xFDv\xE1 \u010D\xEDnsk\xFD pokoj,\
      \ kter\xFD je zalo\u017Een na tom, \u017Ee jednotliv\xE9 \u010D\xE1sti stroje\
      \ inteligentn\xED nejsou, z \u010Deho\u017E plno, \u017Ee ani stroj pak nen\xED\
      , \u017Ee vlastn\u011B nech\xE1po co d\u011Bl\xE1. \uFFFD tento prob\xEDargument\
      \ v\u0161ak nen\xED \xFApln\u011B v\u011Bcn\xFD viz TT-burian\u016F \u010Dlov\u011B\
      k jeho test se mozek a neurony m\u016F\u017Ee prov\xE1d\u011Bt r\u016Fzn\u011B\
      , klasicky byl v\u0161ak prov\xE1d\u011Bn textovou formou. - jeden iteoretick\xFD\
      ch nedostatk\u016F jo, \u017Ee m\u016F\u017Ee zna\u010Dn\u011B p\u0159evy\u0161\
      ovat schopnosti \u010Dlov\u011Bka a na jejich z\xE1klad\u011B m\u016F\u017E\
      e b\xFDt v rozpozn\xE1n - chce to neznamen\xE1, \u017Ee nen\xED inteligentn\xED\
      , nicm\xE9n\u011B testem neprojde d\xE1le pokud by stroj z\u016Fstal celou dobu\
      \ potichu (neodpov\xEDdal by), pak odhadu. by rozhodnut\xED o tom, zdali je\
      \ inteligentn\xED mohlo z\xE1viset na n\xE1hodn\xE9m aby stroj pro\u0161el mus\xED\
      \ replikovat chov\xE1n\xED \u010Dlov\u011Bka ten ov\u0161em n\xE1rodn\xE1 v\u017E\
      dy zcela racion\xE1ln\u011B - stroj by pak muzel z\xE1m\u011Brn\u011B replikovat\
      \ i byhto lidsk\xE9"
    truth: 4
  9:
    pred: 3
    text: "- loss funkce ud\xE1v\xE1 jak moc se z\xEDskan\xFD v\xFDstup prodan\xFD\
      \ vzorek vy\u0161\xED od po\u017Eadovan\xE9ho v\xFDstupu ud\xE1v\xE1 tady chybu\
      \ klasifikace/predikce atd. vstupem je nej\u010Dast\u011Bji v\xFDstup na\u0161\
      eho dan\xE9ho modelu nad n\u011Bjak\xFDm vzorkem a po\u017Eadovan\xE1 c\xED\
      lov\xE1 hodnota (v\xFDstupn\xED hodnota) pro tento vzorek."
    truth: 3
  10:
    pred: 3
    text: "u BD to mo\u017En\xE9 je - u\u010D\xEDc\xED konstanta m\u016F\u017Ee b\xFD\
      t velk\xE1, co\u017E vede k diregenci, kter\xE1 model spolehliv\u011B rozbije\
      \ - mal\xE1 konstanta, pak m\u016F\u017Ee v\xE9st k velmi dlouh\xE9mu (\u010D\
      asov\xE9) u\u010Den\xED u S6D je text o \u0161patn\xFDm projev\u016Fm \u0161\
      patn\u011B zvolen\xE9 u\u010D\xEDc\xED konstanty \u010D\xE1ste\u010Dn\xE9 zamezena,\
      \ jeliko\u017E se postupn\u011B p\u0159izp\u016Fsobuje a normalizuje. - jedn\xED\
      m z algoritm\u016F SGP je nap\u0159. Adam"
    truth: 3
  11:
    pred: 3
    text: "vrstvy;po\u010Det po\u010Det = c. d. - dr. [u. ] \uFFFD po\u010Det jader;\uFFFD\
      ;rozm\u011Bry vstupn\xEDho obr\xE1zku (po\u010Det pixel\u016F v x a y;po\u010D\
      et kan\xE1l\u016F vstupn\xEDho obr\xE1zku;dimenze, rozm\u011Bry j\xE1dra - typicky\
      \ d, = dych = 3;050"
    truth: 3
  12:
    pred: 2
    text: "- pokud pou\u017E\xEDv\xE1me neuronovou s\xED\u0165 nap\u0159. ke zpracov\xE1\
      n\xED bodu v vrstv\xE1ch rekuren\u010Dn\xEDch - ka\u017Ed\xE9 slovo je reprezentov\xE1\
      no n\u011Bjak\xFDm vektorem \u010D\xEDsel, mapov\xE1n\xED zaji\u0161\u0165uj\xED\
      \ u\u010Den\xE9 lookup tabulky. Po t\u011Bchto vektorech chceme, aby u podobn\xFD\
      ch slov, \u010D\xEDsla v\xFDznamov\u011B bl\xEDzk\xFDch, byly podobn\xE9 - -\
      \ tahle podobnost pot\xE9 umo\u017E\u0148uje s temito vektory zaji\u0161t\u011B\
      no p\u0159\xE1n\xEDm prov\xE1d\u011Bt mabinetick\xE9 operace (n\xE1\u0161 obecn\xED\
      \ s\u010D\xEDt\xE1n\xED), je\u017E (nap\u0159. sledov\xE1n\xED jej\xEDch m\u016F\
      \u017Ee odhalovat skryt\xE9 vazby v jazyce, p\u0159\xEDpadn\u011B tyhle operace\
      \ d\xE1vaj\xED kontextu) dokonce smyslu pln\xE9 v\xFDsledky Tohoto v jazykov\xE9\
      m modelu (vrstv\u011B vyu\u017E\xEDv\xE1) dan\xE9m nap\u0159. kr\xE1l a \"monarcha\"\
      \ maj\xED podob\u011B v\xFDkroky \"kr\xE1l\" a \"pak naopak rozd\xEDln\u011B\
      \ \u017Eido"
    truth: 3
  13:
    pred: 4
    text: "PSD;- neuronov\xE1 s\xED\u0165 modeluje Q (36, 96) a-funkci funkce ohodnocuje\
      \ kvalitu akc\xED v dan\xFDch stavech a podle ohodnocen\xED si pot\xE9 agent\
      \ n\xE1sledn\u011B upravuje novou vetz\xED \uFFFD Ti (anleg) funkce, je\u017E\
      \ \u0159\xEDd\xED jeho akce - vyb\xEDr\xE1 akci vzdan\xE9m stan, je\u017E m\xE1\
      \ nejlep\u0161\xED problenci\xE1ln\xED odm\u011Bnu;ze stavu;akce"
    truth: 4
47544afddcb44af2870bb6265c9f50ec:
  0:
    pred: 2
    text: "se;zapamatuje;- vede;k \u0159e\u0161en\xED;k vede V\xEDme, \u017Ee stav\
      \ je tedy vybr\xE1n. \u0159e\u0161en\xED tedy prohled\xE1vat - Nemus\xED uzel\
      \ E."
    truth: 0
495ef79db86e9a0196ac1c8f89e61f67:
  0:
    pred: 0
    text: ''
    truth: 0
  1:
    pred: 1
    text: "Minim\xE1lne hodnoty sa hladaj\xFA v \u0165ahodi oponenta, ktor\xED hr\xE1\
      \ proti n\xE1m / algoritmus. D\xE1 sa toti\u017E p\u0159edpoklada\u0165, \u017E\
      e protivn\xEDk bude vyberat akc\xED hodnotu, kter\xE1 bude pri druh\xE9ho br\xE1\
      \u010Da \u010Do najmenej v\xFDhodn\xE1"
    truth: 0
  2:
    pred: 3
    text: 'BFS;2) BFS: 6;DFS: 8;DFS: Dx6'
    truth: 0
  3:
    pred: 0
    text: ''
    truth: 0
  4:
    pred: 0
    text: ''
    truth: 0
  5:
    pred: 0
    text: ''
    truth: 0
  6:
    pred: 2
    text: p(nak.) =0, 2 p(pozl nak) = 0,9 p(neg (zdr) = 0,975 -> p(poz/zdr) = 0,025;0,9
      . 0,2;p (nak (poz);0,0625
    truth: 0
  7:
    pred: 0
    text: ''
    truth: 0
  8:
    pred: 3
    text: "Nedostatok v podobe \u010D\xEDnskej izby: Do izly pos\xFAvame na papierikoch\
      \ text v \u010D\xEDm\u0161tine vie\u010Dom sa n\xE1m vracej\xFA odpovede. Probl\xE9\
      m ale nast\xE1va v tom, \u017Ee v n\xE1tri vzly m\xF4\u017Ee sed\u011B\u0165\
      \ osoba neznal\xE1 \u010D\xEDnskeho jazyka spolu s mno\u017Estvom \u010D\xED\
      nskej literatury, v ktorej m\xF4\u017Eem hlada\u0165 odpove\u010F na nami poskytnut\xFD\
      \ text - nie sme schopn\xED overi\u0165 povoden spr\xE1vy s odpovedou."
    truth: 3
  10:
    pred: 2
    text: "Pri pou\u017Eit\xED pr\xEDli\u0161 velk\xE9ho hrobu learning rote je mo\u017E\
      n\xE9 presko\u010Di\u0165 lok\xE1lne (a teda aj glob\xE1lne) minimum, ktor\xE9\
      \ m\xF4\u017Ee v\xFDrazne ovplyvni\u0165 u\u010Denie modelu.;S - krok learning\
      \ rata"
    truth: 2
  11:
    pred: 3
    text: "y = w \u0161\xED\u0159ka, v\xFD\u0161ka, po\u010Det kan\xE1lov masky;+C"
    truth: 3
  13:
    pred: 0
    text: ''
    truth: 0
510077e41f24942dfd5a8da94fba89da:
  0:
    pred: 0
    text: ''
    truth: 0
  1:
    pred: 4
    text: "MNI max jir zalo\u017Een na st\u0159\xEDd\xE1n\xED tah\u016F mezi hr\xE1\
      \u010Di. Ohodnocen\xED prvk\u016F je z pohladu za\u010D\xEDnaj\xEDc\xEDho hr\xE1\
      \u010De. Tedy tak Druh\xFD hr\xE1\u010D se sna\u017E\xED maximalizovat mnimum\
      \ co\u017E vyjad\u0159uje jeho OPFIMA\u010CN\xCD V\xDDSLEDKY"
    truth: 0
  2:
    pred: 3
    text: "(M BFS - OB bu\u010F) = O(mLan) DFS - OLIF) - OLN);(2) BFS - O (n2) DFS\
      \ - O (new n);70"
    truth: 0
  3:
    pred: 0
    text: ''
    truth: 0
  4:
    pred: 3
    text: "PAMATICK\xDD pro opravu v\xFDu\u017Eijeme maximum limitilihood = sna\u017E\
      \xEDme se naj\xEDt tanov\xE9 parametry pro v\xEDtan\xE1 tv\xE1 p(x) nejvy\u0161\
      \u0161\xED hodnotu.;ARGMATIKA PCA;parametry klasifik\xE1toru pro v\u0161echny\
      \ 3 t\u0159\xEDdy.;JSOU ST\u0158EDN\xCD HODNOTY ZA HODNOTNOCEN\xCD MATICE (PROM\u011A\
      N\xCD KLASSE v matice st\u0159edn\xEDch hodnot 2x2 covomodern\xED maticie ex;4;pro\
      \ ka\u017Edou t\u0159\xEDdu => te\u010F calhrm 24 hodnot pro hubsiti\xE1tor"
    truth: 0
  5:
    pred: 0
    text: "LOGISTICK\xC1 RABAJE"
    truth: 0
  6:
    pred: 3
    text: "N-MAME\u017DSTVO;Pferde;P(P|NOG) = P(= P(z) =;2) 0,975;p-pozitivn\xED MEZ\
      \ - TROPIVN\xCD ZDRAV\xCD;P(ZETIQUI P(MAG);PRAMENOM;podmasku pro- pl\xE1n;P(PIN)\
      \ = P(PIN) - P(N) = PIND) - plod;P(N;P(v|P;P(PIN) - P(N);P(P);Parket;P(N|P)\
      \ =;P(P|N) - P(M);P);P(N|P);P(MP);P(P|N) - PLNIN;PIFINIT P(P|PIL) P(PIM|PUDA);P(AM)\
      \ + 1-P(vekT2);P(MP);0,9 . 02;b, 2) - PANEM PRIVATIS - Marka Rudolf;PRAMENY\
      \ P(vect\u0159) = PALIKOLOGIe P(P) = P(P|P|PA|Z) P(PILZ) - 1 - P(PhE|A|X);P(PVH);P;NI;OR\
      \ + 1 - 1975;0,910,12;0,919,25 0,99,25;P(PINS-P|N) = P(MP) - P(P)"
    truth: 0
  7:
    pred: 3
    text: "\u201EAbgresn\xED h\u0159ivna p\u0159esn\u011B odpov\xEDd\xE1 tr\xE9novac\xED\
      m dat\u016Fm. Nastal probl\xE9m mal\xE9ho p\u0159Etr\xE9novaj\xED v livech p\u0159\
      \xEDli\u017E Mno\u017Estv\xED dat vzhledem k parametru k.;1,5;tapnavit lze pomoc\xED\
      \ v\u011Bt\u0161\xEDho mno\u017Estv\xED dat, ZAVEDEN\xCDM BIAS NABO ZA \xFA\
      PRAVOU S\xCDLY RAGRISSK konficientem tam jedn tomu b\xEDlou v proskytu. nap\u0159\
      \xEDklad"
    truth: 3
  8:
    pred: 3
    text: "Turing\u016Fv test m\xE1 za c\xEDl ur\u010Dit, zda je aI rozhodnotiteln\xFD\
      \ od \u010Dlov\u011Bka. Z\xC1V\u011ARAM TESTU JE V\xDDchMI ZDA SA PLE TAKTU\xC1\
      LN\xCDHO BAV\xCDM jedn\xE1 o stran \u010Di \u010Dlov\u011Bka.;mo\u017En\xFD\
      m spochybn\u011Bj\u0161\xEDm je probl\xE9m \u010D\xEDnsk\xE1 sk\u0159\xED\u0148\
      ka. Historick\xFD Pokud dva vstup sh\u0159\xEDb\xE1m d\xE1v\xE1m \u010D\xED\
      nsk\xFD text na pap\xEDrku a na v\xFDstupu se mi vr\xE1t\xED p\u0159elo\u017E\
      en\xFD text, m\u016F\u017Eu tvrdit, \u017Ee tato sh\u0159\xED\u0165 na rozum\xED\
      \ \u010D\xEDnsk\xFD pokud jen prohledan\xE9 slovn\xEDky a opisuje vstup? schopnost\
      \ pri\xFAca s daty vs porozum\u011Bn\xED. (Rozr. osobn\u011B si mysl\xEDm \u017E\
      e Lze o tanov\xE1 sm\u011Bt\xE1\u010Dce prohl\xE1sit, \u017Ee \u010D\xEDm um\xED\
      . Schopnost \u201Cprav\xE9ho\u201C porozum\u011Bn\xED t\u011B\u017Eko difinovat)"
    truth: 3
  9:
    pred: 1
    text: "Loss FUNKCE POROVN\xC1V\xC1 HODNOT\xCD V\xDDCHODU NS (\u010DLOV\u011AKOML)\
      \ S \"KR\xC1SN\xDDM\" ANOTOVAN\xDDMI V\xDDSLEDKY. VSTUPeM JE T\u0158EDY HODNOTA\
      \ TESTOVATEL FUNKCE A HODNOTIA APOTHPOSMETN\xDD U\u010CITELSAM. V\xDDSTUPEM\
      \ JE YSHAL\xC1RN\xCD HODNOTA LOSS, m\xCDRoV SE BUPE ALGORITMUS SNA\u017DIT MIMOLIZOVAT\
      \ (OPTIMALEN\u010CIET FUNKCI A BOCAPITOLOGICK\xC9M"
    truth: 4
  10:
    pred: 1
    text: "p\u0159i p\u0159\xEDli\u0161 mo\u017En\xE1 hodnot\u011B lze je mo\u017E\
      n\xE9, \u017Ee se gradient;DESCRIMENT VZORK\u016E V NEV\xDDHODN\xC9M KONE\u010C\
      N\xCDM MINIMU. Mal\xFD Na obr\xE1zku a je LR p\u0159\xEDli\u0161 n\xEDzk\xFD\
      \ a tady kterou p\u0159i hled\xE1n\xED minima. T\xEDm jsme uv\xEDzly v pr\u016F\
      hodn\xE9m CONVTN\xCDM MINIMU (kDY\u017D BL\xCDZKO JR LE\u017D\xCD PORICH.;U\
      \ DAT\xC1LKU B JE KLON POSTUPUJE VRCH\u016E A t\xCDm JSAME up\u0159emo\u010D\
      ily!!! V lep\u0161\xEDmu v\xFDsledku. (Ta obr\xE1zky je (v\xFDpo\u010Dtiv\u011B\
      \ nemo\u017En\xE9) GlOb\xE1ln\xED minimum ov\u0161em pr\xE1v\u011B se nehled\xE1\
      \ zaj\xEDm\xE1 n\xE1\u0161 loun\xE1\u0159sk\xFD"
    truth: 0
  11:
    pred: 1
    text: "P = 2. Kmita;n;p- v\xFDsledky;Knajka - rozm\u011Bny reorganiza\u010Dn\xED\
      ho filtru (Marmelu)"
    truth: 1
  12:
    pred: 0
    text: ''
    truth: 0
  13:
    pred: 4
    text: "MODELUJE FUNKCI a KTER\xC1 VYJAD\u0158UJE JAK\xC9 AKCE POVADOU K Mravi\u0161\
      \xED pr\u016Fm\u011Brn\xE1 odm\u011Bna pilo agenta. Jej\xEDmi vSTupy je stav\
      \ prost\u0159ed\xED (nebo pozorov\xE1n\xED z minula, pohud dostate\u010Dn\u011B\
      \ popisuje prost\u0159ed\xED;Jin\xDDmi V\xDDSTUPY JSOU PROM\u011ANN\xC9 ODM\u011A\
      NY PRO POSTUPN\xC1 ADICE (P\u0158\xCDD PROVOZOPODUJEJEJE \u017Ee m\xE1 agent\
      \ tuto akci vyrovnat) Po\u010Det vi\xE1ln\xE9 pr\xE1ce s matim\xE1ln\xEDm ohlednocen\xED\
      m a tu prov\xE1d\xED."
    truth: 4
515a0274ee53fe5a4fd634d0589bec73:
  0:
    pred: 4
    text: "02;V zapamatovan\xED inform\xE1ci, \u017Ee potomci x je nem\u011B\u0161\
      iteln\xFD vyu\u017Eijeme a p\u0159esto nemus\xEDme p\u0159ech\xE1dza\u0165 dal\u0161\
      \xEDch potenci\xE1lnych potomkov, aby sme zjistili \u010Di nakreslen\xFD AND\
      \ podstrom ne\u017Eiteln\xFD (dynamick\xE9 prvogramovanie) je;a pam\xE1tn\xED\
      ku si, \u017Ee t\u011B\u017E\xFD potomek je neru\u0161iteln\xFD."
    truth: 0
  1:
    pred: 4
    text: "- zisk hr\xE1\u010Da jde proti zisku s\xFApera;- ide o ty s nulov\xFDm\
      \ s\xFA\u010Dtom;v pr\xEDpade, \u017Ee jeden hr\xE1\u010D svoj zisk maximalizuje,\
      \ druh\xFD mus\xED tento zisk minimalizovat, aby tak hnal proti s\xFAperovi.;-"
    truth: 4
  2:
    pred: 2
    text: "V\xE1\u017Een\xE1 : . 8;2);O O BES DAS O;\xFAplne rovnako + velkos\u0165\
      \ mno\u017Einy explored"
    truth: 0
  3:
    pred: 4
    text: "prostredn\xE9 mus\xED by\u0165 zn\xE1me a plna pozorovateln\xE9 a deterministick\xE9\
      \ - stavy s\xFA akomick\xE9 (klasick\xE9 preh\u013Eadabanie)"
    truth: 1
  4:
    pred: 2
    text: "\u010D\xEDtame a-posteriori P pomocou Bayesovho vzorca: P;P(y) je) (model\
      \ P(yk) je v tomto pr\xEDpade gaussovsk\xE9 rozlo\u017E. pravdepodobnosti, P(x)\
      \ je prior pravdepodobnos\u0165 tridy x a P(y) je tzv. evidence a to je s\xFA\
      \u010Det s\xFA\u010Dinu v\u0161etk\xFDch pravdepodobnost\xED \xE9m\u011B\u0159\
      \ je pop\xEDsan jednou studnou hodnotou a jednou kovarian\u010Dnou maticou (E).\
      \ Vyu\u017Eij\xFA sa pri v\xFDpo\u010Dte vierohodnosti P(ylx kde P(y|x) pravdepodobnos\u0165\
      \ je hodnota gaussovskej funkcie pre dan\xE9 dat Tuto hodnotu vypo\u010D\xED\
      tame dosaden\xEDm do p\u0159edpisu \u017Ee rozlo\u017Eenia hust. P, v ktorej\
      \ s\xFA aj parametru ju a E. kde x, a x2 s\xFA hodnoty pozorovan\xE9 1 a 2,\
      \ 31 (32) boch \xED data roztrhnut\xE9 v si z sv\xE9 hodnoty ur\u010Duj\xFA\
      ce korel\xE1ciu d\xE1t (tvar gauss rozlo\u017Een"
    truth: 2
  5:
    pred: 2
    text: "- ich v\xFDpo\u010Det m\u011B je zalo\u017Een\xFD na modelovan\xED funkcie\
      \ rozlo;v\xFDpo\u010Det li\u0161\xED ve srovn\xE1n\xED s ge-;fika\u010Dn\xED\
      mi modely?;hustoty tunel - napr.;pravdepodobnosti, ale modeluj\xFA sa rovno\
      \ pravdepodob;line\xE1rna logistick\xE1 regresia, neur\xF3nov\xE1 s\xFA\u0165\
      \ selekt\xEDvne ide o funkciu dvoch \u010Dinite\u013Eov, kter\xFDch exponent\
      \ vyjadruje posteniorn\xED P tokidy"
    truth: 0
  6:
    pred: 3
    text: "=) 1- P(Nal.) = P(Zdrav) = 0,8;P(Pozi Nak.) = 0,9 p(Neg.|/zdrav.) - 0,\
      \ 975 \uFFFD P(Poz/Zdrav.) = 0,025 1- P(Neg.|Zdrav.) P(NAR. / Poz.) = x ?;P(NALI/POZ.)\
      \ =;P(Poz.) Nek.). P(Nat.;P(Poz.);SUM RULE;P(Poz) = P(Poz / Zdrav.). P(Zdrav.)\
      \ + P(Poz.|Nak.). P(Nak.) 0,2 P(Poz) = 0,025 . 0,8;P(Nak/Poz);kat"
    truth: 4
  7:
    pred: 4
    text: "0,5;- pretr\xE9novanie - model prech\xE1dza presne cez tr\xE9novacie d\xE1\
      ta, co znamen\xE1, \u017Ee model negeneralizuje na Bestovac\xEDch d\xE1tach\
      \ bude fungovat ovela hor\u0161n\u011B ako jednoduch\u011Bj\u0161\xED model\
      \ tohoto sp\xF4soben\xE9 mal\xFDm po\u010Dtem d\xE1t a vysok\xFDm stup\u0148\
      om polyn\xF3mu k tomu. m\u011B\u0159en\xEDm je bu\u010F z\xEDskat dal\u0161\xED\
      \ tr\xE9novacie d\xE1ta, alebo zmen\u0161i\u0165 stupe\u0148 polyn\xF3mu K na\
      \ 1.;nakreslit som parabolu, lebo k = 2."
    truth: 4
  8:
    pred: 1
    text: "- cielom je rozli\u0161i\u0165 stroj od \u010Dloveka - m\xF4\u017Ee nesta\u0165\
      , \u017Ee test ur\u010D\xED, \u017Ee ide o stroj alebo to ur\u010Di\u0165 nebude\
      \ vedie\u0165, resp. nebude vedu\u0165 rozl\xED\u0161i\u0165 \u010Di ide o stroj\
      \ alebo \u010Dloveka, a preto rozhodne, \u017Ee ide o \u010Dloveka nedostatkem\
      \ je samotn\xE1 definicia inteligencie - v\xFDsledek z\xE1vis\xED ten na tom,\
      \ ako konkr\xE9tne definujeme inteligenciu sest m\xE1 zmysel pou\u017Ei\u0165\
      \ v p\u0159\xEDpade, \u017Ee nevieme \u010Di komunikuj so strojom alebo \u010D\
      lovekom (\u010Do je na druhej strane)"
    truth: 1
  9:
    pred: 3
    text: "vstupom je model a ground truth - v\xFDstupom je hodnota, kter\xE1 hovor\xED\
      \ \u010Di sa model m\xFDli a ako velmi. N\xEDzk\xE1 hodnota - model sa nem\xFD\
      li / m\xFDti ale minim\xE1lne, vysok\xE1 hodnota - model sa r\xFDli. \u010C\xED\
      m je hodnota vy\u0161\u0161ia t\xFDm viac sa model m\xFDli je to metnika ktor\xE1\
      \ sa pri u\u010Den\xED sna\u017E\xEDme minimaliz hodnota loss funkcie je vypo\u010D\
      \xEDtan\xE1 po ka\u017Edej izer\xE1cii, na konci u\u010Denia sa vypo\u010D\xED\
      ta hodnota objektivnej funkcie, \u010Do je s\xFA\u010Det v\u0161etk\xFDch podm\u011B\
      t\u016F z loss funkcie - celkov\xE1 metrika;-"
    truth: 3
  10:
    pred: 4
    text: "m\xF4\u017Ee nasta\u0165, \u017Ee pri pou\u017Eit\xED zdej hodnoty sa model\
      \ a\u017E nenau\u010D\xED Nic. - diruguje \uFFFD stane sa tak pri pou\u017E\
      it\xED vysokej hodnoty konstanty naopak n\xEDzka hodnota ten predl\u017Euje\
      \ u\u010Denic. - hodnotu je tuda voli\u0165 experiment\xE1lne a poctivo, ide\
      \ o najd\xF4te\u017Eitej\u0161im hodnotu pri u\u010Den\xED. model za\u010Dne\
      \ divorgovat at kroky optimaliz\xE1cie s\xFA p\u0159\xEDli\u0161 velk\xE9, teda\
      \ gradientn\xFD zastup nebl\xED\u017Ei k minimu, ale \u201Ebe\u017E\xED\u201C\
      \ hore - dole, kedy v\xFDsledkom m\u016F\u017Ee by\u0165 a\u017E NaN alebo nekone\u010D\
      no."
    truth: 4
  11:
    pred: 4
    text: "- v\xFDpo\u010Det je z\xE1visl\xFD od ve\u013Ekosti konvolu\u010Dn\xE9\
      ho jadra / filtra;\u010Dapou;v\xFD\u0161ka;M x W x C = po\u010Det opera\u010D\
      n\xED n\xE1sobenia po\u010Det kan\xE1lov filtru a filmu"
    truth: 3
5369915f58938b8046fd891fd93ecd2f:
  0:
    pred: 4
    text: "P\u0159i prohled\xE1v\xE1n\xED 2 nalezneme podstrom 4-2, kter\xFD je c\xED\
      lov\xFD, tak si ho zapamatujeme, ale jeliko\u017E vzel 3) nen\xED \u0159e\u0161\
      iteln\xFD, tak ani uzel <2). N\xE1sledn\u011B prohled\xE1v\xE1me uzel naraz\xED\
      me na vzel ji\u017E zn\xE1me a v\xEDme, \u017Ee je \u0159e\u0161iteln\xFD, tud\xED\
      \u017E ho ji\u017E nemus\xEDme prohled\xE1vat;1. n - stav C - c\xEDlov\xFD stav"
    truth: 4
  1:
    pred: 4
    text: "co je pro toti\u017E Minimat je pro hry nulov\xE9ho sou\u010Dtu soupe\u0159\
      e dobr\xE9, je pro m\u011B \u0161patn\xE9. Proto soupe\u0159 z m\xE9ho pohledu\
      \ vyb\xEDr\xE1 minimum (pro soupe\u0159e je to maximum)"
    truth: 4
  2:
    pred: 2
    text: "148 13 DFS BFS;KNIH - line\xE1rn\xED O (J) - exponenci\xE1ln\xED O (5);5\
      \ k;DES BFS;pam\u011Btov\xE1 n\xE1ro\u010Dnost je stejn\xE1"
    truth: 2
  3:
    pred: 3
    text: "agent pot\u0159ebuje nejak\xE9 - po\u010D\xEDt\xE1n\xED p\u0159ibli\u017E\
      n\xE9 \u0159e\u0161en\xED;(nemus\xED b\xFDt spr\xE1vn\xE9 (uklidn\xED) - omezuj\xED\
      c\xED podm\xEDnky pokud je to cSp probl\xE9m;reprezentace stavu je atomick\xE1"
    truth: 0
  4:
    pred: 0
    text: "gaussovsk\xE9 rozlo\u017Een\xED je;- st\u0159edn\xED hodnota kovarian\u010D\
      n\xED matice maj\xED podobu re\xE1ln\xE9ho \u010D\xEDsla a matice, 2x2 re\xE1\
      ln\xFDch \u010D\xEDsel (20 data);pops\xE1no parametry;pro ka\u017Edou t\u0159\
      \xEDdu se parametry spo\u010D\xEDtaj\xED zvl\xE1\u0161\u0165 st\u0159edn\xED\
      \ hodnota \u2014 pr\u016Fm\u011Brn\xE1 hodnota pozice kovarian\u010Dn\xED matice\
      \ - nap\u0159. pomoc\xED Maximum likehood;pro ka\u017Edou t\u0159\xEDdu nov\u011B\
      \ p\u0159\xEDchoz\xED vzor p\u0159edhod\xEDme funkci p() a vyn\xE1sob\xEDme\
      \ fixn\xED pravd\u011Bpodobnost\xED t\u0159\xEDd, ke kter\xE9 pli pat\u0159\xED"
    truth: 0
  5:
    pred: 2
    text: "logistick\xE1 regrese - na rozd\xEDl od gen. blos se zde nepo\u010D\xED\
      taj\xED (netr\xE9nuj\xED) parametry pro rozlo\u017Een\xED pravd\u011Bpodobnosti\
      \ ale p\u0159\xEDmo se zde modeluje funce, kter\xE1 rovnou klasifikuje do t\u0159\
      \xEDd"
    truth: 0
  6:
    pred: 4
    text: "P(z) =;P(N|=0,2;N - nemocn\xFD;zdrav\xED;P(X|Y);P;P(poz / N) = 0,9 P(negl\
      \ 2) = 0,975 den P(N|poz) -2 P(roz/z) = 1-8 (reglz);= 9025;P(N|(poz);P(n);P(po2);P(POZ|N);P(poz)\
      \ = P(z) . P(poz|z) t P(v) . P(roz |N);P(roz) = 0,8.0,025 + 92.0,9;P(w|+ poz)\
      \ =;0,2;0,8 0,025 + 0,2 . 09;Pravd\u011Bpodobnost nat\xED\u017Eenosti pozitivn\xED\
      \ osoby je;0,2 . 0,9;0,8. 0,029 + 0,2 . 0,9"
    truth: 4
  7:
    pred: 4
    text: "podporu druh\xE9ho \u0159adu je parabola;25 i 05;Nastal probl\xE9m p\u0159\
      etr\xE9nov\xE1n\xED tzn. n\xE1me m\xE1lo dat a proto se model maxim\xE1ln\u011B\
      \ p\u0159izp\u016Fsobil tr\xE9novac\xEDm vzor\u016Fm \uFFFD pot\u0159ebujeme\
      \ v\xEDce tr\xE9novac\xEDch dat (mus\xEDme jich z\xEDskat v\xEDce, bu\u010F\
      \ pozorov\xE1n\xEDm probl\xE9mu nebo dogenerov\xE1n\xEDm podle gauss. rozl.)\
      \ \uFFFD nebo m\u016F\u017Eeme sn\xED\u017Eit \u0159\xE1d polynomu"
    truth: 0
  8:
    pred: 1
    text: "brn\u011Bnsk\xFD vzduch kakaa c\xEDlem je zjistit zda program je um\u011B\
      l\xE1 inteligence z\xE1v\u011Brem je \u017Ee bu\u010F je, nebo nen\xED;nedostatkem\
      \ tohoto testu je, \u017Ee nepozn\xE1me, jestli program spl\u0148uje krit\xE9\
      ria UI, nebo je prost\u011B tak velk\xFD \u017Ee v\u0161echno zvl\xE1dl hloup\u011B\
      \ namapovat pomoc\xED funkce (probl\xE9m \u010D\xEDnsk\xE9 krabi\u010Dky);Dal\u0161\
      \xEDm nedostatkem je \u017Ee vych\xE1z\xEDme z toho, \u017Ee \u010Dlov\u011B\
      k je inteligentn\xED."
    truth: 0
  9:
    pred: 2
    text: "Toss funkce \u0159\xEDk\xE1 jak moc se predikce le\u0161\xED od valida\u010D\
      n\xEDho \u0159e\u0161en\xED a s jej\xED pomoc\xED upravujeme perametr modelu;vstupem\
      \ je prodikce modelu na valida\u010Dn\xEDch vstupech a valida\u010Dn\xED \u0159\
      e\u0161en\xED v\xFDstupem je m\xEDra chyby"
    truth: 2
  10:
    pred: 2
    text: "- p\u0159i n\xEDzk\xE9 hodnot\u011B lok\xE1ln\xEDm extr\xE9mu;se m\u016F\
      \u017Eeme zaseknout v n\u011Bjak\xE9m;p\u0159i p\u0159\xEDli\u0161 vysok\xE9\
      \ n\xE1m model nemus\xED konvergovat"
    truth: 3
  11:
    pred: 0
    text: ''
    truth: 0
  12:
    pred: 0
    text: ''
    truth: 0
  13:
    pred: 2
    text: "modeluje pravd\u011Bpodobnost akc\xED v z\xE1vislosti na stavu;vstupem\
      \ je stav a akce v\xFDstupem jsou akce a jejich pravd\u011Bpodobnost;agent ji\
      \ pou\u017E\xEDv\xE1 k tomu aby se rozhodl jakou akci vykonat vzhledem k tomu\
      \ v jak\xE9m stavu je nach\xE1z\xED (sou\u010D\xE1st\xED stavu agenta mohou\
      \ b\xFDt jeho pozorov\xE1n\xED prost\u0159ed\xED)"
    truth: 2
554f1cfee56cf20c2f51a5331933eb85:
  0:
    pred: 4
    text: "Zapam\xE4tanie:;Z\xFA\u017Eitkovanie;\xDAspora spo\u010D\xEDva v tom, \u017E\
      e nemus\xEDme prehlad\xE1va\u0165 uzol B.;OR"
    truth: 4
  1:
    pred: 4
    text: "Jde o antiagentn\xE9 hry - uva\u017Eujeme, \u017Ee hru hraj\xFA dvojja\
      \ s\xFAperiaci hr\xE1\u010Di/agenti. Jeden s cie\u013Eom dosiahnu\u0165 \u010D\
      o najv\xE1\u010D\u0148iu bodov\xFA hodnotu a druh\xFD scielom dosiahnu\u0165\
      \ \u010Do najmen\u0161iu hodnotu bodov\xE9ho zisku"
    truth: 0
  2:
    pred: 1
    text: '1. BFS: 0 DFS: 0;2. BFS: Offz d DF3:'
    truth: 0
  3:
    pred: 4
    text: "stavy - mus\xED pozna\u0165 susedn\xE9, aby ich pot\u0159ebuje aktu\xE1\
      lnym stavom mohol porovna\u0165 reprezentac\xED a stavov je atomick\xE1;nadv\xE1\
      \u017Enost stav"
    truth: 4
  4:
    pred: 0
    text: "taram;pr - matica stredn\xFDch hodnot - kovarian\u010Dn\xE1 matica - v\u011B\
      dy symetrick\xE1"
    truth: 0
  5:
    pred: 2
    text: "Logistick\xE1 regresia"
    truth: 0
  6:
    pred: 2
    text: "N - nakazeny Z - zdrav\xFD Poo - pozitivny Teg-negativny;VIPA) ?;KNIKOT\
      \ =;P(POSIN) - pln p(po);a 0,2;0"
    truth: 0
  7:
    pred: 4
    text: "- kvadratick\xE1 funkcia Do\u0161lo tu ku pou\u017Eit\xED u ni\u017E\u0161\
      \xEDho stup\u0148a polyn\xF3mu kregi 2) ako je stupe\u0148 polyn\xF3mu vstupn\xFD\
      ch d\xE1t. Tak\xFDto model nesta\u010D\xED \u2014 mus\xED ma\u0165 minim\xE1\
      lne roznak stupe\u0148 ako funkcia, kter\xE1 vygenerovala d\xE1ta. Rie\u0161\
      enie: zv\xFD\u0161enie stup\u0148a K"
    truth: 0
  8:
    pred: 1
    text: "Jeho cielom je z\xEDski\u0165 \u010Di sa program d\xE1 klasifikova\u0165\
      \ ako strong AI, teda dostato\u010Dn\xE1 na to aby bola nerozl\xED\u0161iteln\xE1\
      \ od \u010Dloveka. Turingov test spochyb\u0148uje my\u0161lienkov\xFD experiment\
      \ - argument \u010D\xEDnskeho pokoje (Chine rovm argument). Jeho podstatou je,\
      \ \u017Ee by sa AI vo form\u011B programu dala nahradi\u0165 \u010Dlovekom,\
      \ kter\xFD \xFAlohe nerozumie, ale iba za riadi zb\u0159erkou nejak\xFDch prisvidiel\
      \ a produkuje po\u017Eadovan\xE9 v\xFDstupy ako reakciu na vstupy. Spochyb\u0148\
      uje sa t\xFDm podstata strong AI a cel\xE9ho testu - AI sa d\xE1 pozera\u0165\
      \ iba ako na program produkuj\xEDc\xED spr\xE1vne v\xFDstupy pro spln\u011B\
      n\xED testu"
    truth: 0
  9:
    pred: 4
    text: "Jej rola je ur\u010Di\u0165 chybu na 1 vzorke /1 datu - porovnamie o\u010D\
      ek\xE1van\xE9ho v\xFDstupu s re\xE1ln\xFDm v\xFDstupem kter\xFD sme z\xEDskali.\
      \ Jej vstupom je o\u010Dek\xE1van\xFD v\xFDstup a v\xFDstup ktor\xFD sme z\xED\
      skali. Jej v\xFDstup je vzd\u011Blenos\u0165 (chyba medi\xED t\xFDmito hodnotami"
    truth: 4
  10:
    pred: 1
    text: "uve\u010Fte, k \u010Demu m\u016F\u017Ee doj\xEDt.;Ano, je to mo\u017En\xE9\
      . Pr\xEDli\u0161 n\xEDzky learning rate m\xF4\u017Ee vies\u0165 ku univerzitu\
      \ na neuspokojiv\xFDch lok\xE1ln\xFDch extr\xE9mach a v\u0161eobecne ku velmi\
      \ pomal\xE9mu u\u010Deniu. Pri pr\xEDli\u0161 vysokom learning rate m\xF4\u017E\
      e zasa d\xF3js\u0165 ku strate optimaliz\xE1cie,"
    truth: 3
  11:
    pred: 2
    text: "v dan\xE9m v\xFDrazu pou\u017Eijete.;Z\xE1le\u017E\xED na velkosti konvolu\u010D\
      n\xE9ho jadra (Pr. velkos\u0165 3x3 -> % oper\xE1ci\xED n\xE1soben\xEDm"
    truth: 2
  12:
    pred: 2
    text: "Chceme aby slov\xE1 pou\u017E\xEDvan\xE9 v podobnom kontexte alebo slov\xE1\
      \ s torov podobn\xFDm \u010Di rovnak\xFDm v\xFDznamom mali men\u0161in vzdialenost\
      \ v\xFDznamov\xE1 vektorov, kter\xE9 ich reprezentuj\xED. Nord vektor aritmetika\
      \ - slov\xE1 reprezentujeme vektormi, ich hmot podobnost m\xF4\u017Eeme ur\u010D\
      i\u0165 vypo\u010D\xEDtan\xEDm ich vzdialenosti."
    truth: 3
  13:
    pred: 3
    text: "Jde o posil\u0148ovan\xE9 u\u010Denie. Vstupom je stav a v\xFDstupom je\
      \ odhad hodnotenia akci\xED. Neur\xF3nov\xE1 sie\u0165 modeluje funkciu odhadu\
      \ kvality stavov. Agent je pou\u017E\xEDva pre maximalizovanie odmien pri u\u010D\
      en\xED a aktualizuje n\xE1m z\xE1klade svoju strat\xE9giu."
    truth: 3
5c55ddf6cabad401d3e98d861f0c8205:
  2:
    pred: 1
    text: '1) BFS: 0 (b-d) DFS: 0 (b+d);O (6-8);2) O (2. bod) 0 (6)'
    truth: 1
  3:
    pred: 3
    text: "Agent od prost\u0159ed\xED mus\xED zn\xE1t hodnoty stav\u016F;reprezentace\
      \ stav\u016F je strukturovan\xE1 - 4 sousedi v obr\xE1zku;2;3;24;-1;3;4;5x;3;4;1;O;1;5-c\xED\
      l (lok\xE1ln\xED max.)"
    truth: 0
  4:
    pred: 3
    text: "t\u0159\xEDdy pojmenuju C, Cz, Cz;C=3, 2D p(x|ci) = ko; 1); p(x|C) = KO;\
      \ \uFFFD ip (x|cs) = 20;1) Podle nejvy\u0161\u0161\xED hodnoty rozhodneme do\
      \ jak\xE9 t\u0159\xEDdy pat\u0159\xED. 3x st\u0159edn\xED hodnota - pro vektor\
      \ L\u0160I - 2 \u010D\xEDsla (x, y) S6x - 3 \u010D\xEDsla (Ex, CUIS) 3x odchylka\
      \ - s2 - matice 6;3 aprior p;15 re\xE1ln\xFDch \u010D\xEDsel (+ 3 prom. pravd\u011B\
      p."
    truth: 0
  5:
    pred: 4
    text: "Regrese - aktiva\u010Dn\xED signorida, loss - cross entropy 6(cO) = 0,5\
      \ ; 6 (60) = - sigmoida 66-00) =0, soused\u016F a podle toho klasifikuje K-NN\
      \ - vezme k nejbli\u017E\u0161\xEDch - ide\xE1ln\u011B lich\xE9 \u010D\xEDslo."
    truth: 0
  7:
    pred: 4
    text: "1,5;Tento model negeneralizuje \uFFFD nebude p\u0159i\u0159azovat spr\xE1\
      vn\xFD v\xFDstup [4], na spr\xE1vn\xFD vstup [\uFFFD].;0,5 .;K = hyperbola,\
      \ parabola... atd. (x);Probl\xE9m byl zp\u016Fsoben m\xE1lo daty. Napravil by\
      \ se v\xEDce daty."
    truth: 4
  8:
    pred: 0
    text: "Zji\u0161t\u011Bn\xED jestli stroj (um\u011Bl\xE1 inteligence) se chov\xE1\
      \ inteligentn\u011B (kongritivn\xED chov\xE1n\xED jako \u010Dlov\u011Bk) Z\xE1\
      v\u011Bry jsou ANO, NE. Nedostatky - stroj je p\u0159\xEDli\u0161 inteligentn\xED\
      \ (rychl\xFD) \uFFFD nechov\xE1 se jako \u010Dlov\u011Bk Smysl m\xE1 u generick\xE9\
      \ AI - rozhodnut\xED zda se o generick\xE9 AI jedn\xE1"
    truth: 0
  9:
    pred: 1
    text: "\xDAprava (update) NS, aby byla loss funkce co nejni\u017E\u0161\xED =>\
      \ z\xEDsk\xE1vame spr\xE1vne v\xFDsledky vstupem vektor + bias a learning role\
      \ v\xFDstupem je vektor."
    truth: 1
  10:
    pred: 4
    text: "(D) kdy\u017E je Ir moc mal\xE1 budeme se u\u010Dit moc dlouho;\u2014 velk\xE1\
      \ budeme divergovat \uFFFD nic se nenau\u010D\xEDme;loss fce:;mu;ideal Tr;mal\xE1\
      \ Ir;velk\xE1 Ir;SGP) mini-batch \uFFFD neu\u010D\xED se ze v\u0161ech dat jen\
      \ po\u010D\xEDta gradiet z n\u011Bjak\xE9 men\u0161\xED \u010D\xE1sti dat."
    truth: 4
  11:
    pred: 1
    text: "Mi;300 10/3;o;= EVI = 3-3 = 0 \uFFFD 1 pixel m\xE1 hodnotu;N\xE1soben\xED\
      \ matic;se\u010Dten\xED v\u0161ech bod\u016F v\xFDsledn\xE9 matice"
    truth: 1
  12:
    pred: 4
    text: "Chceme aby vektor m\u011Bl vlastnosti v\xFDznamu slova => synonyma maj\xED\
      \ podobn\xFD vektor (nebo nap\u0159. slovo v jin\xE9m jazyce day a pes);Word\
      \ Vector artmetika znamen\xE1 \u017Ee: m\u016F\u017Eeme od sebe slova ode\u010D\
      \xEDtat, s\u010D\xEDtat a ty vektory budou d\xE1vat smysl. king-man = queen\
      \ nebo \u017Ee kr\xE1l a monarcha jsou k sob\u011B vektorov\u011B bl\xED\u017E\
      \ ne\u017E monarcha a \u0159idi\u010D."
    truth: 4
5dedca302522fc18e562221b1854b2cc:
  0:
    pred: 2
    text: "Rok: 2;ze stavu 50 m\u016F\u017Eeme akc\xED 1 doj\xEDt do stav 60 a akc\xED\
      \ 2 do slova 2, jedn\xE1 se o OR uzel. Skau\u010D\xED \u0159e\u0161it jen jeden\
      \ uzel. - znovu jsme do\u0161li do stavu 2 - neprohled\xE1van d\xE1l, proto\u017E\
      e jak se ze stavu? dostat do \u0159e\u0161en\xED OR vzel, nemus\xEDm pou\u017E\
      \xEDt;pamatujme si, \u017Ee ze stavu 2 episkie \u0159e\u0161en\xED;x pokud v\xED\
      m, \u017Ee prohled\xE1m zleva doprava, m\u011Bl bych prohodit 2 a 60), ale to\
      \ u\u017E by v obr\xE1zku bylo moc \u0161krt\xE1n\xED"
    truth: 2
  1:
    pred: 4
    text: "P\u0159i h\u0159e dvou hr\xE1\u010D\u016F jeden maximalizuje sv\u016Fj\
      \ zisk - ten, co je na tahu. Druh\xFD hr\xE1\u010D kter\xFD zrovna nen\xED na\
      \ tahu, se sna\u017E\xED soupe\u0159\u016Fv zisk minimalizovat - tedy hled\xE1\
      \ minim\xE1ln\xED hodnoty zisku A;vlastnost her - hry s pevn\xFDm sou\u010D\
      tem - zisky obou hr\xE1\u010D\u016F sumuj\xED do 1 - v\u011Bt\u0161\xED zisk\
      \ hr\xE1\u010De A \uFFFD men\u0161\xED ziak hr\xE1\u010De B"
    truth: 4
  2:
    pred: 3
    text: "bez dosud BFS: 0 (6) DFS: OUBL;s dosed: jsem v acyklick\xE9m prostoru,\
      \ tak\u017Ee s dosed je to stejn\xE9 jako bez n\xED.;D;000 -60 000 000 000 000\
      \ 000 000 000"
    truth: 2
  3:
    pred: 3
    text: "- agent pot\u0159ebuje zn\xE1t omezuj\xEDc\xED podm\xEDnky a definici \u0161\
      kolu - p\u0159i spln\u011Bn\xED podm\xEDnek m\u016F\u017Ee tvrdit, \u017Ee dos\xE1\
      hl c\xEDle - s reatarty - pokud si pamatuje ne\xFAsp\u011B\u0161n\xE9 prohled\xE1\
      n\xED - \u0161et\u0159\xED zdroji dynamick\xE9 programov\xE1n;rezentace stav\u016F\
      \ - Faktorizovan\xE1"
    truth: 0
  4:
    pred: 2
    text: "observation / class) P(class) p(class) observation) = S (observation locs)\
      \ P(class) dan\xE1;parametry pr a o 2 gaussova rozlo\u017Een\xED a kovarian\u010D\
      n\xED matice;DEI LET;- apriorn\xED pravd\u011Bpodobnost jsme odhodli na delech\
      \ vztahem po\u010Det p\u0159\xEDslu\u0161n\xEDk\u016F t\u0159idy celkov\xFD\
      \ po\u010Det dat;M a o2 jsme odhadli p\u0159\xEDstupem maximum likelihood p\xED\
      , o? = argmax < log M|x i M. p\u0159 - parci\xE1ln\u011B zdorvujeme a v\xFD\
      sledky polo\u017E\xEDme rovn\xFD nule -> vyj\xE1d\u0159\xEDme pr a oZ;Fidni\
      \ do po\u010Det re\xE1ln\xFDch \u010D\xEDsel = 3. 1+3. (2+2+1.;po\u010Det t\u0159\
      \xEDd;rozplal;borela\u010Dn\xED coeficien = 3+15 = 18;apriorn\xED pravd\u011B\
      podobnost"
    truth: 2
  5:
    pred: 4
    text: "logistick\xE1 regrese, neuronov\xE9 s\xEDt\u011B pro klasifikaci;y = wx\
      \ - co\u017E je n\u011Bjak\xE1 polynomi\xE1ln\xED funkce rozd\u011Bluj\xEDc\xED\
      \ plochu/prostor/\xFA\u010Dastn\xFD prostor na t\u0159\xEDdy. pro nov\xE9 d\xE1\
      to pak v xy kolmo na funkci polo\u017E\xEDm log. aigmoidu, kter\xE1 dle vrac\xED\
      \ pravd\u011Bpodobnost t\u0159\xEDdy [ra, bal];optimalizujeme parametry w =\
      \ \uFFFD \uFFFD ve vztahu;generativ\xED - nejprve mus\xED zn\xE1t p(classa)\
      \ a p(okalolaca) a\u017E potom po\u010D\xEDtaj\xED p(classl\xF3bs) - m\xE9n\u011B\
      \ n\xE1chyln\xE9 na p\u0159etr\xE9nov\xE1n\xED s m\xE1lo tr\xE9novac\xEDmi daty\
      \ obvykle pot\u0159ebuj\xED v\xEDce v\xFDpo\u010Detn\xEDch prost\u0159edk\u016F\
      \ pro stejnou \xFArove\u0148;diskriminativn\xED - rovnou po\u010D\xEDtaj\xED\
      \ p(class) observation) - rychleji konverzuj\xED ke \u0159e\u0161en\xED"
    truth: 4
  6:
    pred: 2
    text: "P(pogitive) = ? = Ephy);ly) ply) = p (y (y) p (x) p (naka\u017Een\xFD/pozitiv)\
      \ = P(pozitiv|naka\u017E) p (naka\u017E,;P(x|;p(pozitiv);p(x);p(posi = 0,2 0,1\
      \ + 0,8. 0, -\xFDplod I. 1/10 7/10 1/10 dopis;100 100;stoj\xED;0,9 . 0,2;x/5)\
      \ =;00;Kulturn\xED vychovatelka = Pololetn\xED prosp\u011Bch = E;12;er"
    truth: 1
  7:
    pred: 4
    text: "1,5;druh\xFD \u0159\xE1d \uFFFD parabolu;0,9;- do\u0161lo k p\u0159etr\xE9\
      nov\xE1n\xED na m\xE1lo vzorc\xEDch. Pokud bychom m\u011Bli v\xEDce tr\xE9novac\xED\
      ch dat, mohla by tvo\u0159it p\u0159\xEDmku. Nebo jin\xFD tvar - p\u0159\xED\
      mka by tak\xE9 vznikla, pokud bychom m\u011Bli k =1 model tedy dostate\u010D\
      n\u011B negeneralizuje - naproven\xED - v\xEDce tr\xE9novac\xEDch dat, zvolit\
      \ jin\xFD \u0159\xE1d \u2014 ale zde nev\xEDme jak\xFD, proto\u017Ee m\xE1me\
      \ m\xE1lo dat"
    truth: 4
  8:
    pred: 1
    text: "c\xEDl - rozeznat um\u011Blou inteligenci / po\u010D\xEDta\u010D/ ahoj\
      \ od \u010Dlov\u011Bka;- z\xE1v\u011Bry - nerozeznam rozd\xEDl L richm rozd\xED\
      l - po\u010D\xEDta\u010D je \u201Eslab\u0161\xED\u201C;- argument \u0161inak\xFD\
      m pokojem;- nedostatky - stroj se jen m\u016F\u017Ee tv\xE1\u0159it inteligent\u011B\
      \ - data b\xF3ze odpov\u011Bdi, - stroj odhaduje odpov\u011Bdi a zrovna mu to\
      \ vyjde m - stroj odpov\xEDd\xE1 t\u0159eba jen intuic\xED - je pak inteligentn\xED\
      ? - omezen\xED dom\xE9ny - nem\xE1 smysl d\u011Blat, pokud stroj i \u010Dlov\u011B\
      k neum\xED odpov\xEDdat stejn\xFDm kan\xE1lem (zvukx text) (fert x obr\xE1zek)\
      \ ... - nutno vybrat \u010Dlov\u011Bka, kter\xFD dostate\u010Dn\u011B rozum\xED\
      \ problematice - \u010Das odpov\u011Bdi mus\xED b\xFDt stejn\xFD, i kdy\u017E\
      \ po\u010D\xEDta\u010D um\xED odpov\u011Bd\u011B\u0165 (vypo\u010D\xEDtat v\xFD\
      sledek) rychleji"
    truth: 3
  9:
    pred: 1
    text: "doss funkce ur\u010Duje, jak p\u0159esn\xFD je v\xFDsledek u\u010Den\xED\
      \ - p\u0159. kolik p\u0159\xEDklad\u016F je spr\xE1vn\u011B klasifikov\xE1no/v\u0161\
      echny p\u0159\xEDklady - je ale ve form\u011B chyby \uFFFD \u010D\xEDm men\u0161\
      \xED loss, t\xEDm lep\u0161\xED.;- vstupy - model, valida\u010Dn\xED datu -\
      \ v\xFDstup - chybovost modelu na ralida\u010Dn\xEDch datech"
    truth: 1
  10:
    pred: 1
    text: "ANO, je to mo\u017En\xE9. Pokud zvol\xEDm p\u0159\xEDli\u0161 velkou konstantu,\
      \ pak m\u016F\u017Ee velikost gradientu p\u0159ivy\u0161\xEDt hodnotu optima\
      \ a op\u011Bt bleanovat za optimum. - u\u010Den\xED nen\xED tak jemn\xE9, aby\
      \ mohlo naj\xEDt optimum Zvol\xEDm-li p\u0159\xEDli\u0161 malou konstantu -\
      \ m\u016F\u017Ee nastat chyba zp\u016Fsoben\xE1 minim\xE1ln\xEDm rozli\u0161\
      en\xEDm floating point a ritmetiky"
    truth: 0
  11:
    pred: 4
    text: "x q;po\u010Det kan\xE1l\u016F;.;\u0161\xED\u0159ka Konvolu\u010Dn\xEDho\
      \ j\xE1dra;v\xFD\u0161ka konvolu\u010Dn\xEDho j\xEDdla"
    truth: 3
  12:
    pred: 3
    text: "chceme, aby vektory symbolizuj\xEDc\xED podobn\xE1 slova (v\xFDznamov\u011B\
      ) byly podobn\xE9. V extr\xE9mn\xEDch p\u0159\xEDpadech (agronyma, kter\xE1\
      \ lze v\u017Edy zam\u011Bnit) pak vektory mohou b\xFDt stejn\xE9;- vcord architektura\
      \ - v\xFDpo\u010Dty s rakami, kde v\xE1ha je ud\xE1vana"
    truth: 3
  13:
    pred: 4
    text: "vstupy - aktiv L\xE1kce.;v\xFDstup - ohodnocen\xED akce ve stavu Gfunkce\
      \ agent pohybuj\xEDc\xED se v prost\u0159ed\xED na z\xE1klad\u011B v\xFDsledk\u016F\
      /vol\xED nejv\xFDhodn\u011Bj\u0161\xED akci tak, aby dos\xE1hl co nejv\u011B\
      t\u0161\xED odm\u011Bny za dobu sv\xE9ho \u017Eivota"
    truth: 4
5dff9e7052fea9930bd73c07a81648b0:
  12:
    pred: 2
    text: "Aby podobn\xE9 slova byli reprezentov\xE1ny podobn\xFDmi vektory.;Aritmetika\
      \ nad rektory, kter\xE9 reprezentuj\xED slova. Pokud od sebe dva vektory ode\u010D\
      teme a vezmeme akce litn\xED hodnotu tohoto \u010D\xEDsla tak \u010D\xEDm men\u0161\
      \xED \u010D\xEDslo dostaneme t\xEDm v\xEDce jsou si vektory podobn\xE9"
    truth: 3
  13:
    pred: 2
    text: "vstupy jsou proveden\xE9 akce, stav prost\u0159ed\xED, v\xFD\u0161e odm\u011B\
      ny za proveden\xED;akce;agent j\xED pou\u017E\xEDv\xE1 pro ur\u010Den\xED dal\u0161\
      \xEDho kroku"
    truth: 2
7038c09e336f558cd349d6f8731eee88:
  11:
    pred: 3
    text: "5 = 1;celkov\xFD po\u010Det jader. Wi a hi - \u0161\xED\u0159ka Cwich;\
      \ c\xEDl, kde k je v\xFD\u0161ka matice a c\xED po\u010Det kan\xE1l\u016F"
    truth: 0
  13:
    pred: 0
    text: akci.
    truth: 0
708d990c70b3b49d04a1c106307f8317:
  0:
    pred: 0
    text: ''
    truth: 0
  1:
    pred: 1
    text: "Hled\xE1me monocen\xED hodnoty, proto\u017Ee protihr\xE1\u010D bude v\u017E\
      dy hr\xE1t tak, aby n\xE1m z na\u0161eho pohledu co nejv\xEDce u\u0161kodil."
    truth: 0
  2:
    pred: 3
    text: "- DFS - o (b, 18 - 1);O=;2);big o noteri budou skojen\xE9, proto\u017E\
      e si mus\xED m\u016F\u017Ee pamatovat Ka\u017Ed\xFD stav = 0,61) z 0,63) - \u201E\
      BFS by ho bylo asi 26 \xB0-1 BES - obsluhou stejn\xE9, proto\u017Ee BFS - 0\
      \ (6)"
    truth: 0
  3:
    pred: 1
    text: "-> pot\u0159ebuje cenu p\u0159echodu do dal\u0161\xEDch uzl\u016F - stav\
      \ je d\xE1n ohodnocen\xEDm dle heuristiky - stavy p\u0159ed\xE1ny pouze ohodnocen\xED\
      m heuristiky (akomick\xE9)"
    truth: 0
  4:
    pred: 4
    text: "p(class|data) = P(datum class) P(class) \"Ep(data class) P(class) \u010F\
      asse\u0161;Pelazo?;Nelust;N;p(data/class) = N(data, vduss\xED Ecenso) spo\u010D\
      \xEDt\xE1me ucuss a Eduard pro v\u0161echny t\u0159\xEDdy na z\xE1klad\u011B\
      \ dat, pri klasifikaci dosad\xEDme bod a vr\xE1t\xEDme class s nejv\u011Bt\u0161\
      \xED apo\u0161toln\xED pravd. Melussix Melesary Cax Very Serxy Nedostat NCABARY\
      \ u cens 3x Welmassy rochazel pochousx Peansk\xFD - reclassy), Lectury ob\u010D\
      assy;E die K Ekus? d\u016Fstojn\xEDk Klassy / Welad / Y Pry2 f, 2 UXIN - XXIX\
      \ Axy = XX;dohromady 15 parcen."
    truth: 0
  5:
    pred: 2
    text: "Vs. generativn\xED - generativn\xED modeluj\xED rozlo\u017Een\xED dat diskriminativn\xED\
      \ rovnou apo\u0161toliovn\xED pravd.;logistick\xE1 regrese - P(dess/data) rovnou\
      \ Knihy opravdu v\xFDsledek z a (UK);ta;nemocn\xE1 s\xED\u0165 optimalizace\
      \ se prov\xE1d\xED inexativn\u011B proto\u017Ee typicky DE (X) ZO nemac\xED\
      \ anal\xFDzick\xE9 \u0159e\u0161en\xED v\xFDsledek z max (v\xFDsledky posledn\xED\
      \ mosty) = max (f(A|x)"
    truth: 0
  6:
    pred: 3
    text: "A je nakou\u0159en\xFD B test je pozitivn\xED P(A|B) P(A|Z 0, 2 P(ibina)\
      \ z 99,8% 0,975 P(B|A) z 0,9;P(A|B) P(B|2 P(B|A) P(A);P(MADE/8 P(B|-A)20,025\
      \ P(B|A|Z 0, 1);P(A|B) = P(B|A) P(A);PCHIABEAL-BETABLOW;BEBIAD-PLAI + P(B|MA)\
      \ P(B|A);9,;P(AIB2);0,5 ... 2 + 0,023-0,8 0,18 012;z 0,18 0,18 + 0,02;93;DOBR\xC9\
      HO POSTUPU PALET\u017D PIETA 3 PORMA 1825 0,025/8 6, 575. 018 AI B) PODLE PCHA;et;PR\xC1\
      VO;PARDON;P;BIADPEATE DISTANDA 0,025/98 0,9 .12 + 0,025;1000 2000"
    truth: 0
  7:
    pred: 4
    text: "Nejlep\u0161\xED bude z\xEDskat n\xEDce dat a pot\xE9 p\u0159\xEDpadn\u011B\
      \ upravit K.;+ w2x? w1 + w2 1 WO2O, M\xE1me tak\xE9 dobr\xFDch bod\u016F na\
      \ sv\xE9m stavu modlitbu. Model je p\u0159etr\xE9novan\xFD, proto\u017Ee m\xE1\
      me nec\xEDlo d\xE1t, ze kter\xFDch bychom odhadli v\xE1hy (parametry), a z\xE1\
      rove\u0148 je K vysok\xE9. Mohli bychom sn\xED\u017Eit K, ale takov\xFD model\
      \ by po\u0159\xE1d nemusel generalizovat, proto\u017Ee modelovan\xE1 data mohou\
      \ b\xFDt klidn\u011B generov\xE1na"
    truth: 0
  8:
    pred: 1
    text: "Ur\u010Dit zda je stroj gener\xE1ln\xED um\u011Bl\xE1 inteligence (nen\xED\
      \ rozeznateln\xE9 od \u010Dlov\u011Bka);lze zpochybnit Chinese kooth. (exponenci\xE1\
      ln\xED - nepovaliteln\xE9, d\u016Fle\u017Eit\xE1 pointu) Nedostatek - nem\u016F\
      \u017Eeme dok\xE1zat zda skute\u010Dn\u011B p\u0159em\xFD\u0161l\xED nebo jenom\
      \ dokonale p\u0159ekl\xE1d\xE1 Jde o na\u0161\xED p\u0159edstavu \"nerozeznatelnosti\
      \ zd\u011Blov\u011Bka\", tj. m\u011Bl by b\xFDt takov\xFD stroj vn\xEDmat vlastn\xED\
      \ existenci, m\xEDt emoce, lumor... Chruse looth v\xED: \"Co kdy\u017E n\xE1\
      m pouze \u0159\xEDk\xE1, co chceme sly\u0161et?\u201C Co\u017E je t\xE9m\u011B\
      \u0159 filozofick\xE1 ot\xE1zka, zda je takov\xFD stroj gener\xE1ln\xED AI"
    truth: 0
  9:
    pred: 0
    text: "loss (A|x2-t) doss je funkce, kterou typicky minimalizujeme vzhledem k\
      \ hledan\xFDm parametr\u016Fm. Vstupem je v\xFDsledek modelu a po\u017Eadovan\xFD\
      \ v\xFDsledek. V\xFDstupem je n\u011Bjak\xE9 \u010D\xEDslo, kter\xE9 chceme,\
      \ aby bylo co nejmen\u0161\xED."
    truth: 0
  10:
    pred: 4
    text: "Learning na\u0161e n\xE1m \u0159\xEDk\xE1, jak velk\xE9 kni\u010Dky d\u011B\
      l\xE1me s ka\u017Ed\xFDm krokem optimalizace, je mo\u017En\xE9, \u017Ee kv\u016F\
      li velk\xE9mu learningovate nikdy netref\xEDme minimum rozumn\xFDm zp\u016F\
      sobem. P\u0159est\u0159el\xEDme ho s ka\u017Ed\xFDm krokem - p\u0159\xEDli\u0161\
      \ rychle m\u011Bn\xEDme parametry) hodnot"
    truth: 0
  11:
    pred: 4
    text: "O;nxm - rozm\u011Bry filtru;m;nom n\xE1soben\xED pro 3x329"
    truth: 0
  12:
    pred: 4
    text: "word embeddling - p\u0159evod slova () na \u010D\xEDslo, kter\xE9 dok\xE1\
      \u017Ee neuronov\xE1 s\xED\u0165 sehrout (nap\u0159. 1 neklapn\xED na pozici\
      \ ur\u010Duj\xEDc\xED dan\xE9 slovo) lze potom p\u0159\xEDmo z\xEDsk\xE1vat\
      \ v\xE1hy z Lew VORDILEKTOR ARITM. -;lze s\u010D\xEDtat v\xFDsledn\xE9 vektory,\
      \ abychom dostali nov\xFD vektor po\u017Eadovan\xE9ho v\xFDznamu nap\u0159.\
      \ kr\xE1l - mu\u017E + \u017Eena z kr\xE1lovna - no to bude cca fungovat nav\xED\
      c budou slova v prostoru s\xE9mantick\xFD rozm\xEDst\u011Bna (negativn\xED pozitivn\xED\
      \ emoce, mu\u017Esk\xE9 (\u017Eensk\xE9 varianty podst. jm\xE9n)"
    truth: 0
  13:
    pred: 0
    text: ''
    truth: 0
7333634f907f926e6e7e37153f5450a9:
  0:
    pred: 1
    text: "pokud naraz\xEDme na podstrom, kter\xFD obsahuje stav a kerim. v\xEDme\
      \ \u017Ee je zau\u010Dovat cesty k c\xEDli, tak vime v\u0159e tento srel vede\
      \ k \u0159e\u0161en\xED;nocen klepe"
    truth: 4
  1:
    pred: 4
    text: "bylo algoritmy hledaj\xED nejhor\u0161\xED tak aby se mu hr\xE1\u010D mohl\
      \ vyhrnout minimalizace \u0161kody"
    truth: 0
  2:
    pred: 3
    text: BF DFS - D . 2);BFS - t DFS - P - p N
    truth: 3
  3:
    pred: 1
    text: "- strukturovan\xE1"
    truth: 0
  4:
    pred: 0
    text: ''
    truth: 0
  5:
    pred: 0
    text: "- pokud bychom meli k=9 a rozli\u0161ovali mezi jablky a grandy a chdofi\
      \ ujistit zda je nau\u0161 objekt jablon a v 9 \u017Ee nejbli\u017E\u0161\xED\
      \ by byly 3 a 6c tak by pravd\u011Bpodobnost \u017Ee se jedn\xE1 o jablka bylo\
      \ 6"
    truth: 0
  6:
    pred: 1
    text: P(N|s) = 0. 1;IIH = 0.975 P(S|=02 P(H) = 0.8;ale;P(PIHI = 0.025;P(S|P) =
      P(P) P(P|s) - P(s);(PIS) P(P|S);um;o;P(P|S) P(S| + P(P|P|H) . P(H);0,9 . 0,2;0.
      9. 02 + 0.025.0,8;= P(PIS) - P(s) + P(PIH) . P(P|H)
    truth: 4
  7:
    pred: 4
    text: "parabala - nastal prakt\xE9m ne dan\xFD model negenerativuje - fol zp\u016F\
      sobu tim \u017Ee palgram prad\xE1n\xED p\u0159\xEDmo d\xE1ty - v\xEDce dat"
    truth: 4
  8:
    pred: 1
    text: "zjistit zda je stroj rozeznateln\xFD od \u010Dlov\u011Bka na z\xE1klad\u011B\
      \ jeho odpov\u011Bd\xED - nen\xED to mo\u017En\xE9 x je to main\xE9;- netu\u0161\
      \xEDme co se d\u011Bje uvnit\u0159 stroje (mu\u017Ee m\u011Bl nau\u010Den\xE9\
      \ odpov\u011Bdi na dan\xE9 at\xF3rky)"
    truth: 0
  9:
    pred: 3
    text: "- ur\u010Ditie chybavost nap\u0159. neuronov\xE9 s\xEDt\u011B - v\xFDstupem\
      \ bude statom - vstupem bude vektor o\u010Dek\xE1van\xFDch a realn\xFDch v\xFD\
      sledk\u016F"
    truth: 3
  10:
    pred: 0
    text: ''
    truth: 0
  11:
    pred: 0
    text: ''
    truth: 0
  12:
    pred: 3
    text: "chceme aby v\xFDznamn\u011B podobn\u011B stava m\u011Bly malou exklubskou\
      \ vzd\xE1lenost nap\u0159. aby mouranda a hr\xE1l vektory kter\xE9 stav bl\xED\
      zka jedn\xE1 se o operace pomoc\xED kter\xFDch ur\u010Dujeme v\xFDznamovou podobnost\
      \ stav"
    truth: 3
  13:
    pred: 0
    text: ''
    truth: 0
8285047d6f8b154037d16ee3a74417f0:
  4:
    pred: 3
    text: "na;CLIXI = aposteriorn\xED funkce: pravd\u011Bpodobnostn\xED;ZD:;(x|c);p(x|c)\
      \ - plei P=0;kde pravd\u011Bpodobnost p(x|c);d\xE1na kde N je celkov\xFD je\
      \ gaussovsk\xFDm rozlo\u017Een\xEDm. Apriorn\xED pravd\u011Bpodobnost pro ka\u017E\
      dou t\u0159\xEDdu - d\xE1na jako p(C) = Odhad hustoty pravd\u011Bpodobnosti\
      \ je proveden odhadem parametr\u016F gaussovsk\xE9ho rozlo\u017Een\xED. po\u010D\
      et Parametry gauss. rozlo\u017Een\xED jsou pro 2D - pr - 2 slo\u017Eky x ay\
      \ a matic\xED <-3 slo\u017Eky u a \u017E jsou odhadnuty metodou maxim\xE1ln\xED\
      \ v\u011Brohodnosti. Gauss. rozd\u011Blen\xED se modeluje pro ka\u017Edou t\u0159\
      \xEDdu. uprost\u0159ed Celkem jsou parametry d\xE1ny: NC 1+2 +3) = 21"
    truth: 0
  5:
    pred: 4
    text: "olx);- sigmaida - m\xE9n\u011B parametr\u016F oproti generativn\xEDmu,\
      \ v\u011Bt\u0161\xED tendence k overfittingu. U\u010D\xED se pouze p\u0159echod\
      \ mezi t\u0159\xEDdami.;P\u0159echodov\xE1 funkce m\u016F\u017Ee b\xFDt i jin\xE1\
      \ ne\u017E signorida"
    truth: 0
8310871a91f6396928f7e50acd47c2d3:
  0:
    pred: 4
    text: "- \xFAspora bude spo\u010D\xEDva\u0165 v tom, \u017Ee nejd\xFA \u010Das\u0165\
      \ podstromu nebudeme prekl\xE1d\xE1va\u0165, v tomto pr\xEDpade Jy sa to dalo\
      \ vyu\u017Ei\u0165 vo OR ve v\u011Btv\xE1ch, ked\u0159e si pou\u017Eit\xE1me\
      \ roihodnutie a nemus\xEDme \u0159e\u0165 do druhej vetvy"
    truth: 0
  1:
    pred: 4
    text: "\xFDm, \u017Ee sa jedn\xE1 o hru 2 hr\xE1\u010Dov, tak ak jeden hr\xE1\u010D\
      \ vyber\xE1 na z\xE1klade max a druh\xFD na z\xE1klade min, tak maj\xFA obaja\
      \ \u0161ancu 50,50 \u017Ee vyhraj\xFA, na predpokladu, \u017Ee nehraj\xFA n\xE1\
      hodn\xE9. .. vlastnosti - hra pre z hr\xE1\u010De jevy, \u017Ee vyh\xE1 hr\xE1\
      \u010D \u010D 1 alebo \u010D. 2 musia by\u0165 roonak\xE9"
    truth: 0
  2:
    pred: 1
    text: BAS DNE;bar;BFS - O (6+6);DES - OBLIGD;e;2) s;BFS -> 0 (1675) DFS -> O (b)
      b + d)
    truth: 0
  3:
    pred: 3
    text: "pot\u0159ebuje vedie\u0165 aktu\xE1lny stav, mo\u017En\xE9 sa m\xF4\u017E\
      e dosta\u0165;strang kom;agentov\xE1 reprezentacia \uFFFD \u0161trukturovan\xE1"
    truth: 0
  4:
    pred: 0
    text: ''
    truth: 0
  5:
    pred: 1
    text: "ou\u017Eitie regresie \uFFFD vyu\u010D\xED a Mean Squae bron, v p\u0159\
      \xEDpad\u011B, \u017Ee sa jedn\xE1 o gusovsk\xE9 roslo\u017Eence,;generativych\
      \ klasifika\u010Dn\xEDch nakte\u0159dach je to zalo\u017Een\xE9 na rozlo\u017E\
      en\xED histoty pravdepodobnosti, z\xEDskan\xFD z tr\xE9novac\xEDch d\xE1t pri\
      \ diskriminat\xFDrnych sa to sk\xE1\u0161a priamo na vstupn\xFDch d\xE1tach"
    truth: 0
  6:
    pred: 1
    text: p(f) = 0,2 + 0,9 + 0,1;12 P(c) = 0,2 0,9 p(p|c) p(c|p) = 0,1 p (n 12) =
      0,975 p (z 1, n) = 0,025;p(cp) = p(ple) - p(c);P);0,9 - 0,2 = 0,18 189;12;112;120;0,142
    truth: 0
  7:
    pred: 1
    text: "2;ako mo\u017En\xFD probl\xE9m by mohlo by\u0165 \u017Ee m\u011B je generalizuj\xFA\
      ci vysok\xE9 k a m\xE1lo d\xE1t ide\xE1lne by bylo zv\xE1\u010D\u0161it mno\u017E\
      stvo d\xE1t"
    truth: 1
  8:
    pred: 1
    text: "\xFA\u010Delu?;- test je podla m\u0148a zbyte\u010Dn\xFD pou\u017E\xED\
      va\u0165 v pr\xEDpad\u011B, \u017Ee ty sne chceli otestovat nejak\xE9 vedomosti\
      \ z nejakej sk\xFAmanej oblasti, ked\u0159e tu ty stroj ur\u010Dit\u011B prekonal\
      \ \u010Dloveka, ale z\xE1rove\u0148 to nic nehor\xE1 o tom, \u010Di je stvoj\
      \ inteligentn\xFD;- cielom je risdi\u0165, \u010Di je stroj inteligentny je\
      \ inteligentn\xFD - n\xE1ven L m\u011B je inteligentn\xED;\uFFFD skuma \u010D\
      i je stroj schopn\xFD nahradi\u0165 kognitivne vlastnosti \u010Dlov\u011Bka.\
      \ T\xFDm p\xE1dem \u010Dlov\u011Bk nem\u016F\u017Ee rozhodn\u011B \u010Di sa\
      \ jedn\xE1 o stroj alebo \u010Dloveka"
    truth: 3
  9:
    pred: 0
    text: "- ur\u010Duje pravdepodobnos\u0165, \u017Ee natr\xE9novan\xFD model trafil\
      \ spr\xE1vne ohodnotenie na valida\u010Dnom datasetu - resp., \u017Ee akc\xED\
      \ pravdepodobnos\u0165 chybnej klasifik\xE1cie - vstup - valida\u010Dn\xED d\xE1\
      ta + natr\xE9novan\xFD model v\xFDstup - v\xFDsledek loss funkce - pravdepodobnos\u0165\
      \ velej klasifik\xE1cie"
    truth: 0
  10:
    pred: 1
    text: "-\xE1no, pri nespr\xE1vnou \"barning rate\" m\xF4\u017Ee doj\xEDt k Stavu,\
      \ \u017Ee sa model pneu\u010D\xED a nebude klasifikova\u0165 spr\xE1vne tu\u010F\
      \ m\xF4zeme rozvoli\u0165 velk\xFD alebo mal\xFD krok \"learning vate\", v\u0161\
      etko toto ouplynul v\xFDsledek;\uFFFD mo\u017En\xFD scen\xE1n loss"
    truth: 1
  11:
    pred: 2
    text: "vstup;konvolu\u010Dn\xE9 jadro 3x3;vrstva (max, aug;v\xFDsledek;-18 n\xE1\
      soben\xED v tomto p\u0159\xEDpade"
    truth: 2
  12:
    pred: 2
    text: "- chceme aby nebdi ortogon\xE1lne WA nourdel od onehod incoding vyv\u010D\
      \xEDva aj euklidovstv\xED vzdieleno\u0165 dan\xFDch slov, \u010D\xED\u017Ee\
      \ slov\xED, kt. s\xFA v\xFDznamova podobn\u011B tak s\xFA pri sebe"
    truth: 3
  13:
    pred: 1
    text: "- jedn\xE1 sa o sami-supervised larning;s\xFA tam 2 pr\xEDstupy, bu\u010F\
      \ on-policy alebo Off-policy;v pr\xEDpade on-polici vyu\u017E\xEDva agent policy\
      \ funkci, bez vyu\u017E\xEDv\xE1nia n\u011Bjakej hist\xF3rie off-policy - \xFA\
      prava policy na z\xE1klade hist\xF3rie"
    truth: 1
845c61b8d1361a7636cf773d6064cb46:
  0:
    pred: 2
    text: "Zde se zjist\xED, \u017Ee uzel A a tud\xED\u017E aby tento podstatn\u011B\
      \ vedl k \u0159e\u0161en\xED;kdy\u017E jak na tento toto\u017En\xFD podstrom\
      \ naroz\xEDme v jin\xE9 \u010D\xE1sti vozeto celkov\xE9ho stromu u\u017E v\xED\
      me, \u017Ee ho nemus\xEDme cel\xFD vyhodnocovat postupn\u011B, proto\u017Ee\
      \ v\xEDme \u017Ee vede k \u0159e\u0161en\xED"
    truth: 2
  1:
    pred: 2
    text: "odpov\xEDdaj\xEDc\xED vlastnost her, pro n\u011B;ka\u017Ed\xE9m kroku mus\xED\
      \ v - sum ganes jedn\xE1 b\xFDt v\u017Edy takov\xE9 tahy, kter\xE9 pomohou jednomu\
      \ dan\xE9mu k\xE1\u010Di (nemohou pomoc\xED ob\u011Bma sou\u010Det toho jak\
      \ se jednomu pom\u016F\u017Ee a druh\xFD se snev\xFDhodn\xED by tedy m\u011B\
      l b\xFDt roven nule \uFFFD proto zero-sum by pozd\u011Bji mimo uzn\xE1n\xED\
      \ po datum stavu nauk"
    truth: 2
  2:
    pred: 1
    text: "bez;DPS;1000;elsel bez BES Ot. 69;BFS s elsem O (log (b);go od 60 let PFS\
      \ 1 1/2 \u010Dlov\u011Bk KART. Olbrat DFS Ak chole olomu"
    truth: 0
  3:
    pred: 4
    text: "pot\u0159ebuje v\u011Bd\u011Bt, jak dan\xE9 prost\u0159ed\xED vypad\xE1\
      \ u N dan pot\u0159ebuje v\u011Bd\u011Bt jednotliv\xE9 rozlo\u017Een\xED dan\xED\
      ) ved\u011Bt jednotliv\xE9 rozlo\u017Een\xED stop\u016F ve sv\xE9m okol\xED\
      \ a to, jak\xE9 ohodnocen\xED by z\xEDskal kdyby se pro dvoj stav rozhodnut,;-\
      \ representuje stavu je atomick\xE1, pouze se dok\xE1\u017Ee rozh\xE1dnout zda\
      \ n\u011Bjak\xFD stav pro n\u011Bj je lep\u0161\xED ne\u017E ten jeho aktu\xE1\
      ln\xED"
    truth: 4
  4:
    pred: 3
    text: "pravd\u011Bpodobnosti vypo\u010Dteme;p(caRli4|x) = p(x|x) P(y);pomoc\xED\
      \ apolerou;pro ka\u017Edou ze t\u0159\xED t\u0159\xEDd;\xFAnc = argnax pixin)\
      \ = argence [1 plan, n. dv\u011Bma parametry jsme odhadli s vyu\u017Eit\xED\
      m Maximu eltelitood odhad\u016F - v\u0161echny parametry jsou representov\xE1\
      ny realizaci \u010Dist\xFD ur\u010Dit\xFD s\xE1m st\u0159ed dan\xE9ho rozlo\u017E\
      en\xED - u je matine je koaelo\u010Dn\xED matice (25 25, je symetrick\xE1),\
      \ tl. dragovala n\xE1m k \u0159\xEDk\xE1 m\xEDru rozlo\u017Een\xED dat, vedl\xFD\
      ch m\xEDru pozitivn\xED \u010Di negativn\xED korelace 6. Uve\u010Fte dva p\u0159\
      \xEDklady diskriminativn\u011B tr\xE9novan\xFDch model\u016F pro klasifikaci,\
      \ kter\xE9 umo\u017E\u0148uj\xED vyhodnocen\xED aposteriorn\xEDch pravd\u011B\
      podobnost\xED t\u0159\xEDd pro vstupn\xED (testovan\xFD) vzor. Alespo\u0148\
      \ pro jeden z t\u011Bchto dvou p\u0159\xEDklad\u016F uve\u010Fte, jak se tyto\
      \ aposteriorn\xED pravd\u011Bpodobnosti konkr\xE9tn\u011B spo\u010D\xEDtaj\xED\
      . V \u010Dem se jejich v\xFDpo\u010Det Ji\u0159\xED ve srovn\xE1n\xED s generativn\xED\
      mi klasifika\u010Dn\xEDmi modely? logistick\xE1 regrese"
    truth: 0
  6:
    pred: 0
    text: "P(NAK|POS) =?;P(NAKIPOS) = PINABIPTICOLINAK P(POS) BAYES RULE \uFFFD pot\u0159\
      ebu vypo\u010D\xEDtat p(pos) P(POS) = Z P(PIPOS, Y;SUM RIVE \uFFFD pot\u0159\
      eba upo\u010D\xEDtat jednotliv\xE9 marg P(POS|NAK) = P(POSI NAK) = P(NAK) P(PON|Z)\
      \ = P(POUIZ) PIz);P(POSY NAK) = 99-022=0,18 P(PON|Z) = OR5-98 = 0,02 P(pos)\
      \ = z podpos, 4) =0, 18, 19, 02 = 9 -9a P(NAKIPS) = 02-99 D2 Pokud n\xE1hodn\u011B\
      \ vybran\xE9 osoby je pozitivn\xED, \u0161ance \u017Eije nad\u0161ena 10%."
    truth: 4
  7:
    pred: 1
    text: "1,5;10;U\u010D\xEDme se v jeho funkci f kter\xE1 repezentuje det. Jeliko\u017E\
      \ se jedno o plynom. reg s K=2, bude se z\xE1vod o n\u011Bjakou pratolu \u010D\
      i hyperbolu. kter\xE1 tato data kvadraticky polo\u017E\xED. Probl\xE9m bude\
      \ nejsp\xED\u0161e v tom, \u017Ee pokud dostaneme nov\xE9 dat, kter\xE9 10 0,0\
      \ 2.0 x bude mimo trajektori\xED dan\xE9 p\u0159\xEDmky, polynomi\xE1ln\xED\
      \ reg s \xA72 ne na tyto body nedok\xE1\u017Ee spr\xE1vn\u011B adaptaci. Bylo\
      \ by tedy ut\u0159ela zv\xFD\u0161it K a"
    truth: 1
  8:
    pred: 1
    text: "C\xEDlem TT je ur\u010Dit, zda vytvo\u0159en\xFD str\xFD (program nebo\
      \ n\u011Bco podobn\xE9ho) dos\xE1hl otecn\xE9 um\u011Bl\xE9 inteligence. V\xFD\
      sledkem m\u016F\u017Ee b\xFDt t\u011B pozorovatel nedok\xE1\u017Ee rozli\u0161\
      it s t\xEDm komunikuje (vytvo\u0159en\xFD stroj taky usp\u011Bje) nebo to dok\xE1\
      \u017Ee rozl\xED\u0161it (rozezn\xE1 str\xFD od \u010Dlov\u011Bka) a a stroj\
      \ tedy testem nep\u0159ijde. Nedostatky testu jsou hlavn\xED agumentac\xED proti\
      \ n\u011Bmu m\u016F\u017Ee b\xFDt \u010Dinsk\xFD pokoj, kter\xFD se m\u016F\u017E\
      e tv\xE1\u0159it inteligentn\u011B a TT by mohl proj\xEDt, ale ve skute\u010D\
      nost se o \u017E\xE1dnou inteligenci nejedn\xE1"
    truth: 0
  10:
    pred: 4
    text: "gradient descene / simpelar gradien descere P\u0159i v\xEDzk\xFDch hodnot\xE1\
      ch LR se m\u016F\u017Ee st\xE1t, \u017Ee se n\xE1\u0161 model nepoda\u0159\xED\
      \ v\xFDhru nau\u010Dit, p\u0159ipadn\u011B \u017Ee to bude trvat velmi dlouho.\
      \ P\u0159edev\u0161\xEDm se to m\u016F\u017Ee st\xE1t u 6D, kdy je gradient,\
      \ jen\u017E je po\u010D\xEDt\xE1m jako derivu loss funkce po\u010D\xEDt\xE1\
      m v\u017Edy nad cel\xFDm dotazem. Toto je velmi zdlouhav\xE9 a v konvisaci s\
      \ vkloutkem m\u016F\u017Ee teoreticky dojet i k univerzit\u011B. Lep\u0161\xED\
      \ m\u016F\u017Ee b\xFDt z\xEDtra s SED, kdy k v\xFDpo\u010Dtu gradient\u016F\
      \ z loss funkce doch\xE1dz\xED se v\u017Edy, ale po n\xE1hodn\xE9m po\u010D\
      tu krok\u016F"
    truth: 0
  11:
    pred: 3
    text: "k - velikost jednotliv\xFDch filtrum (k je po\u010Det pocent\u016F na prav\xE9\
      \ stran\u011B M - po\u010Det konvolu\u010Dn\xEDch jadr v dan\xE9 vrstv\u011B\
      \ (po\u010Det r\u016Fzn\xFDch fakt\u016F kter\xE9 jsou vyhodnoceny);p\u0159\
      ed v\xE1solen\xED - k - k. M"
    truth: 3
  12:
    pred: 3
    text: "aby nesi z sebou mohli v\u011B\u0159it vzd\xE1lenosti m\u011Bli mo\u017E\
      nost se porovn\xE1vat (euklidovsk\xE1 vzd\xE1lenost) co\u017E n\xE1m one-bot-ensodina\
      \ nedovoluje slovo car a auto by m\u011Bli m\xEDt podobnou velikost aby mezi\
      \ nimi mohla b\xFDt pozorov\xE1na z\xE1vislost;Word Vector - pomoc\xED velbloud\
      \ jsou zobrazov\xE1n\xED jednotliv\xE9 z\xE1vislosti (mezi men a rovnou je stejn\xE1\
      \ rozd\xEDlnost jako mezi guerz a kiny - jedn\xE1 pouze o rozd\xEDln\xE9 polovi;OBECN\
      \ kina MOTAL Po\u010Das\xED"
    truth: 3
  13:
    pred: 4
    text: "- vstupem je stav set a akce a-t funkce vypo\u010D\xEDt\xE1 ohodnocen\xED\
      \ pro jednotliv\xE9 akce a na z\xE1klad\u011B toto se pak m\u016F\u017Ee rozhodnout\
      \ pro tu nejlep\u0161\xED akci, jen\u017E bude provedenea;modeluje Q funkci."
    truth: 4
8e74b62c6d2cfebfb003da2801a4b51c:
  0:
    pred: 0
    text: ''
    truth: 0
  1:
    pred: 3
    text: "d\u016Fvod je proto\u017Ee hled\xE1me noinin\xE1ln\xED hodnoty pro druh\xE9\
      ho hr\xE1\u010De kdo z jeho pohledu se jedn\xE1 o naxion\xE1ln\xED u\u017Eitek\
      \ ale z na\u0161eho Pohledu organiz\xE1ln\xED;ninipax lze pou\u017E\xEDt pro\
      \ h3 kdo je mo\u017En\xE9 numerizovat u\u017Eitek a hey kdo se neu\u010D\xED\
      \ st\u0159\xEDdaj\xED ve sv\xFDch akc\xEDch (to z\xEDch)"
    truth: 3
  2:
    pred: 3
    text: "b);BFS DFS D;\uFFFD mus\xED p\u0159ej\xEDt v\u0161echny potomky a\u017E\
      \ do hloubky d*;udr\u017Euje si pou\u017Ee v pam\u011Bti prohled\xE1v\xE1n\xED\
      \ dan\xE9 hloubky v\u011Btve proto raxim\xE1ln\u011B hloubka D;2.) BFS - DFS;\uFFFD\
      \ mus\xED proj\xEDt potomky a\u017E do hloubky d' a je\u0161t\u011B udr\u017E\
      ovat v\u0161echny p\u0159edchoz\xED potovoyy u dosud \uFFFD v dosed si postupn\u011B\
      \ mus\xED udr\u017Eovat v\u0161echny Prvky do hloubky D kde pro v\u011Btev kdo\
      \ \u0159e\u0161en\xED to d*"
    truth: 0
  3:
    pred: 3
    text: "Pot\u0159ebujeme aby prost\u0159ed\xED obsahovalo lok\xE1ln\xED raxinu"
    truth: 0
  4:
    pred: 1
    text: "Bt + sch 2 dispenze;S1, S2, S;Spartaki\xE1dy;P(si) =;P(s2) =;u -> vektor\
      \ \uFFFD police;3 \u010D\xEDsla;6 \u010D\xEDsel;4 papa oz LINEKS);6 \u010D\xED\
      sel;4 parce bez (jichaho);p(s3);21 2;M=L\xE1z;32 - MS = LNA J;O. O. P. G. G.\
      \ 25 402 2 0 2 0 2 2;Orba SOAG = LBON OBS;v \u010D\xEDsel;4 paxu bez \u03C6\
      \ \u010Cjun\xE1k 5).;53 -> MSA L/12);SB;6. 6. 10102 Slzba 6262;bajes\u016Fv\
      \ Vkonec;P(c|x) =;P(x|c) . P(c);P(x)"
    truth: 1
  5:
    pred: 1
    text: "Logistick\xE1 linearn\xED Regrese oproti generativn\xEDm klasifika\u010D\
      n\xEDm pod\u011Bl\xEDm se list\xED tak \u017Ee se odhaduje p\u0159\xEDmo pravd\u011B\
      podobnost P(c|x) tatinco u generativn\xEDch se podobuje rozlo\u017Een\xED hustoty\
      \ pravd\u011Bpodobnosti"
    truth: 1
  6:
    pred: 1
    text: "20% Viz P(VIZOR) B0% Nen\xE1Viz PINY = 0,8 P(PIV) = 0,9 = 90% P(Rozd\xED\
      ln\xED P(N|N|=0, 975=97,5 Nonesctivn\xED;P(P) = P(VI. P(PIW|x PAW) (1-PININI);0,2.\
      \ 09 + 0,0,025 = 0,18 + 0,2 = 0,319;200;P(V|F);(PIV). P(V) O, d. 0, 2;P(P);0,318;0,;0,328"
    truth: 3
  7:
    pred: 3
    text: "pomoc\xED trenovac\xEDch dat se polynomialn\xED regrese nau\u010Dila p\u0159\
      esn\xFD pr\u016Fchod dan\xFDmi daty.;dojde k overfiting (p\u0159etr\xE9novan\xED\
      ) to znamen\xE1 \u017Ee model negeneralizuje a t\xEDm p\xE1dem by nebyl schopn\xFD\
      \ fungovat spr\xE1vn\u011B na nov\xFD datech. Probl\xE9m by se dal vy\u0159\
      e\u0161it p\u0159id\xE1n\xEDm dal\u0161\xEDch trenovac\xEDch dat nebo zmenou\
      \ \u0159\xE1du polynomi\xE1ln\xED respexe"
    truth: 3
  8:
    pred: 1
    text: "C\xEDlem je dok\xE1zat jestli dan\xE1 po\u010D\xEDta\u010D komunikovat\
      \ s \u010Dlov\u011Bkem tak \u017Ee nejde poznat jestli se jedn\xE1 o po\u010D\
      \xEDta\u010D nebo \u010Dlov\u011Bka - Z\xE1v\u011Bry jsou tedy \u017Ee dok\xE1\
      \u017Ee nebo ne a t\xEDm p\xE1dem zdalo je dan\xFD po\u010D\xEDta\u010D (prosnavo)\
      \ inteligentn\xED hlavn\xED nedostatkem je \u017Ee test n\xE1ro neuhazuje jestli\
      \ je dan\xFD Po\u010D\xEDta\u010D opravdu inteligentn\xED ale jak dok\xE1\u017E\
      e napodobovat lidskou komunikaci, je ho tak\xE9 mo\u017En\xE9 pou\u017E\xED\
      t pouze p\u0159i komunikaci tedy psan\xE1, mluven\xE1"
    truth: 4
  9:
    pred: 4
    text: "Loss funkce n\xE1m \u0159\xEDk\xE1 jak je dan\xFD podobn\xFD v\xFDstup\
      \ anotaci (v\xFDstupu) trenovac\xEDch dat pro dan\xFD vstup Pomoc\xED loss funkce\
      \ tedy jejimu v\xFDsledku r\u016F\u017Eeno pot\xE9 upravovat parametry naukonov\xE9\
      \ s\xEDt\u011B - vstupem je tedy v\xFDsledek modelu a anotoce pro dan\xFD dato\
      \ - vystupem je tedy jak\xFD je mezi nimi rozd\xEDl"
    truth: 4
  10:
    pred: 3
    text: "Je mo\u017En\xE9 \u017Ee pokud bude u\u010Den\xED konstanta nastavena na\
      \ t\u0159eba v\u011Bt\u0161\xED hodnotu tak by u GD a SGD vznikl Probl\xE9m\
      \ \u017Ee by se sna\u017Eil a\u017E prolo\u0161 kompenzovat za dan\xFD gradient\
      \ t\xEDm p\xE1dem by se parametry v dan\xE9 neuronov\xE9 Si\u0165e po\u0159\
      ad p\u0159estahovali a nemohli se p\u0159ibli\u017Eit spr\xE1vn\xE9 hodnot\u011B"
    truth: 3
  11:
    pred: 0
    text: ''
    truth: 0
  12:
    pred: 4
    text: "hlavn\xEDm c\xEDlem je aby slova s podobn\xFD v\xFDznamem byli Reprezentov\xE1\
      ny bl\xED\u017Ee k sob\u011B m\u011Bli;wordvector arcitnetika n\xE1m pot\xE9\
      \ umo\u017Enuje pracovat se slovi (textem) pomoc\xED natenatick\xFDch kr\xE1\
      l - rou\u017E z kr\xE1lovna a podobn\xE9 v\xFDraz\u016F tedy p\u0159\xEDklad"
    truth: 4
  13:
    pred: 3
    text: "modeluje funkci kter\xE9 se \u0159\xEDk\xE1 Q-funkce kdo tato funkce slou\u017E\
      \xED tedy pro vypo\u010D\xEDt\xE1n\xED ohodnocen\xED akc\xED kter\xE9 je mo\u017E\
      n\xE9 vykonat vstupem je tedy sou\u010Dasn\xFD stav a akce a vystupen je ohodnocen\xE9\
      \ stavy ze kter\xFDch pot\xE9 asent d\xE1le vyb\xEDr\xE1, kdo p\u0159i deep\
      \ Q-learningu je tato funkce trenovan\xE1 Jako neuronov\xE1 s\xED\u0165 a u\
      \ Q-learningu je odhadovan\xE1"
    truth: 3
9fae5964355733843daa9b7668b03bed:
  0:
    pred: 2
    text: "vede \u0159e\u0161en\xED;Pokud zde nevede stav \u0159e\u0161en\xED nemus\xED\
      \ prohled\xE1vat (nen\xED spln\u011Bn p\u0159edpoklad) ani tento slav \u2014\
      \ Jeliko\u017E je mezi n\u011Bma \u201CANDI\u201C a mus\xED b\xFDt spln\u011B\
      ny oba p\u0159edpoklady, sta\u010D\xED si tedy zapamatovat \u017Ee len\xFD stav\
      \ nen\xED spln\u011Bn a nem\xE1me prov\xE1d\u011Bt v\xFDpo\u010Det prav\xE9\
      ho - u\u0161et\u0159en\xED v\xFDpo\u010Dtu. Tedy jeliko\u017E je zapamatov\xE1\
      no, \u017Ee leny podstrom vede \u0159e\u0161en\xED, vybereme jej"
    truth: 0
  1:
    pred: 4
    text: "Jsou dva hr\xE1\u010Di, kte\u0159\xED se st\u0159\xEDdaj\xED. Jeden m\xE1\
      \ za \xFAkol vybrat vyb\xEDrat co nejmen\u0161\xED hodnoty (aby to soupe\u0159\
      ovi zkazil) a druh\xFD z t\u011Bch nejmen\u0161\xEDch vyb\xEDr\xE1 zase ty nejv\u011B\
      t\u0161\xED (chce z\xEDskat nejlep\u0161\xED sk\xF3r\xE9). Jedn\xE1 se o tzv.\
      \ zerosum game, kde lep\u0161\xED sk\xF3r\xE9 m\u016F\u017Eeme z\xEDskat pouze\
      \ na \xFAkor protihr\xE1\u010De."
    truth: 3
  2:
    pred: 2
    text: "O (BFS) = D O(PAS) = RO;\uFFFD zacyklenl bez exklame;... Strana politick\xFD\
      \ a podobn\xFD v\xFDznam a dal\u0161\xED nepostojnosti a kdyby pozor na poli\
      \ po prohl\xEDdce a pod. za svou po poli prod\xE1no;o(SF) event =;o;DATS ePiGRAFIE\
      \ = d;5 tis;b = 2;2 D = 2 D=3 D=4;36;2 h vozy"
    truth: 2
  3:
    pred: 4
    text: "Pot\u0159ebuje, aby prost\u0159ed\xED neobsahovalo lok\xE1ln\xED maximu\
      \ a nebylo monot\xF3n\xED;atomick\xE1 - pouze stav, \u017E\xE1dn\xE9 dopl\u0148\
      uj\xEDc\xED atributy puktorizovan\xFD - stav a tak\xE9 dopl\u0148uj\xEDc\xED\
      \ atributy o strukturovan\xE1 - struktura objekt\u016F, kter\xE9 jsou mezi sebou\
      \ prov\xE1z\xE1ny."
    truth: 0
  4:
    pred: 4
    text: "ZD;t\u0159i;parametry (st\u0159edn\xED hodnoty u fovarian\u010Dn\xED matice/obsahuje\
      \ xxx, \u010Dty\u0159i, xi Po\u010Det re\xE1ln\xFDch \u010D\xEDsel pro reprezentaci:\
      \ 3 (2 + 3) = 3.5 = 15 . v\u011Bty zaj\xEDc kvality;x;st\u0159edn\xED hodnota\
      \ n\xE1m ud\xE1v\xE1 st\u0159ed gaussovsk\xE9ho rozlo\u017Een\xED a tovar. matice\
      \ jeho \u0161\xED\u0159ku;pokl\xED\u017Ee dojde nov\xE9 dato po\u010D\xEDt\xE1\
      \ se pravd\u011Bpodobnost, \u017Ee n\xE1le\u017E\xED do dan\xE9 (jedn\xE9 ze\
      \ 3) t\u0159\xEDdy, dato se p\u0159i\u0159ad\xED do t\u0159\xEDdy, kde vych\xE1\
      z\xED nejv\u011Bt\u0161\xED pravd\u011Bpodobnost"
    truth: 0
  5:
    pred: 4
    text: "logick\xE1 a line\xE1rn\xED regrese U generativn\xEDho klasifik\xE1toru\
      \ se vyu\u017E\xEDv\xE1 gaussovsk\xE9 rozlo\u017Een\xED pro v\xFDpo\u010Det"
    truth: 0
  6:
    pred: 3
    text: "Ps-pozitivn\xED, test, Aug...;N... naka\u017Een\xED zdrav\xED;P(N|L|0,\
      \ 2 P(2|59) P(P|P|N) =0, 9 P(NEG|N|=9) P(NEGIT|Z) = -25 0,025 P(Poz 0,975;Bra;18;84\
      \ 80;200;P(N|/Poz) =?;P(W||Poz) = P(POZ|N| | P(N) + P(POZ|Z) \xB7 P(2) = g9.\
      \ 0, 2 + 9025 .018 = 0, 38 P(N|Roz). P(Poz) = P(POZIN). P(N) P(POZ|M) - P(N)\
      \ 0,18 P(N|POZ) =;P(NOMPOZ);0,38;=0,684;0,18;Pravd\u011Bpodobnost je 68,4 %;0,2"
    truth: 3
  7:
    pred: 3
    text: "Sp;vzniku;Jeliko\u017E m\xE1me m\xE1lo vstupn\xEDch dat, . doch\xE1z\xED\
      \ k p\u0159etr\xE9nov\xE1n\xED, kdy regresn\xED k\u0159ika je dokonal\xE1 pro\
      \ tr\xE9novac\xED Body, ale jakmile p\u0159ijde nov\xFD vstup je pro n\u011B\
      j nepou\u017Eiteln\xE1;Parabola vede skrz tyto tr\xE9novac\xED vstupy k\u0159\
      ivka se vytvo\u0159\xED, tak aby se minimalizovala, velikost \u010Dtverc\u016F\
      \ (vzd\xE1lenost od k\u0159ivky pro jednotliv\xE9;body"
    truth: 3
  8:
    pred: 3
    text: "C\xEDlem je zjistit, zda je stroj inteligentn\xED, z\xE1v\u011Br 1- je\
      \ inteligentn\xED, z\xE1v\u011Br 2 - nen\xED.;Nedostatek je nap\u0159\xEDklad\
      \ v paradoxu \u010D\xEDnsk\xE9ho pokoje, kdy d\xE1me do m\xEDstnosti pap\xED\
      rek s \u010D\xEDnsk\xFDmi znaky a n\u011Bkdo n\xE1m d\xE1 potom p\u0159elo\u017E\
      en\xFD pap\xEDr, ale ji\u017E nev\xEDme, \u017Ee tento \u010Dlov\u011Bk v\u016F\
      bec \u010D\xEDnsky nemluv\xED (nerozum\xED), m\xE1 v m\xEDstnosti pouze pravidla\
      \ pro p\u0159elo\u017Een\xED v\u0161ech znak\u016F. Tedy pokud m\xE1me v programu\
      \ velk\xFD po\u010Det If / IV m\u016F\u017Ee se stroj jevit unteligent\u016F\
      , i kdy\u017E m\xE1 pouze jednoduch\xE1 pravidla / podm\xEDnku na v\u0161echny\
      \ vstupy;Test m\xE1 chce pou\u017E\xEDt pouze jako 1. z v\xEDcero test\u016F\
      , kter\xE9 prok\xE1\u017Eou inteligenci stroje, takov\xFD p\u0159edpiktor"
    truth: 0
  9:
    pred: 4
    text: "Loss funkce n\xE1m \u0159\xEDk\xE1, jak se l\xE9\u010D\xED v\xFDstup na\u0161\
      \xED neuronov\xE9 s\xEDt\u011B oproti referen\u010Dn\xEDmu v\xFDstupu. Interval\
      \ hodnot, kam v\xFDstup spad\xE1.;Vstupem je v\xFDstup vrstev neuronov\xE9 s\xED\
      t\u011B a referen\u010Dn\xED v\xFDstup neuronov\xE9 s. V\xFDstupem ohodnocen\xED\
      \ spr\xE1vnosti"
    truth: 4
  10:
    pred: 0
    text: ''
    truth: 0
  11:
    pred: 4
    text: "velikost filtru x velikost ciltru x po\u010Det piltr\u016F po\u010Det kan\xE1\
      l\u016F (nap\u0159. REB m\xE1 3);3;x po\u010Det piltr\u016F"
    truth: 4
  12:
    pred: 0
    text: '20'
    truth: 0
  13:
    pred: 0
    text: q-punkci
    truth: 1
a2ea1b9fdebff19434d6aebe076014c3:
  0:
    pred: 1
    text: "V p\u0159\xEDpad\u011B AND utlu si zapracujeme;o jak\xFD v\xFDsledek se\
      \ pro vir\u010Dicou hodnotu jednoho a pokud se \u010Dasu hodnoce objev\xED znovu,\
      \ m\u016F\u017Eeme jej m dos\xE1hneme zrychlen\xED zu\u017Eitkovat"
    truth: 0
  1:
    pred: 1
    text: "Proto\u017Ee v r\xE1mci algoritmu se sna\u017E\xEDme dos\xE1hnout \u201E\
      nejv\u011Bt\u0161\xEDho sou\u010Dtu hodnot\u201C z jednotliv\xFDch \u010Dah\u016F\
      \ a v p\u0159\xEDpad\u011B soupe\u0159e se n\xE1m sna\u017E\xED tento sou\u010D\
      et minimalizovat. Proto v soupe\u0159ov\u011B tahu po\u010D\xEDt\xE1me s minim\xE1\
      ln\xED hodnotou.;Jedn\xE1 se o typ hry, kde se v\xE1m protivn\xEDk sna\u017E\
      \xED u\u0161kodit"
    truth: 0
  2:
    pred: 1
    text: D. BFS 0 = DFS 0 = 5;2) PPS
    truth: 1
  3:
    pred: 2
    text: "- odhad kde se dan\u011B \u0159e\u0161en\xED nach\xE1z\xED informaci od\
      \ prost\u0159ed\xED, jakou m\xE1 postup hodnotu;-dromick\xE9 reprezentace sr"
    truth: 2
  4:
    pred: 4
    text: "ko\u017Enou;voi\xED podle v\xFDsledn\xE9 hodnoty. Pro ka\u017Edou t\u0159\
      \xEDdu budeme m\xEDt matici, kter\xE1 n\xE1m na dvou dim. datech ur\u010D\xED\
      \ s jakou pravd\u011Bpodobnost\xED do dan\xE9 et\u0159ivy spo\u010D\xEDvaj\xED\
      . x- vtor pravd\u011Bpodobnost\xED rozlo\u017Een\xED 5 - sand how.;m\xEDr mezi\
      \ protiarchiv\xE1li\xED dva, to jist\xE9"
    truth: 0
  5:
    pred: 1
    text: "line\xE1rn\xED regrese polynomi\xE1ln\xED regrese;distribun\xED vy generacion\xED\
      \ diskriminativn\xED \u2014 pro ka\u017Ed\xFD vstup m\xE1me vstup Denerativn\xED\
      \ - pro ka\u017Ed\xFD vstup m\xF4\u017Ee pravd\u011Bpodobnost s jakou se jedn\xE1\
      \ o dan\xFD v\xFDstup;jeden konkr\xE9tn\xED"
    truth: 0
  6:
    pred: 2
    text: "P(netra\u010Den\xFD) 10 P(pozitivn\xED) nat\u0159en\xE1 F\uFFFD10 P(negacivn\xED\
      \ / tvor\xFD) =;P(;(nat\u0159en\xED / ml\xE1\u017Een\xED) = 1/10 P(pozicivn\xED\
      \ lzerov\xFD) = 200;15;KART.;80;Orb. 2,5 2,5;P(v\xFDsledek) = P(uchozen\xED\
      ). P(pozitivn\xED lanka\u0159en\xED) + P(zdrav\xED) . P(pozitivn\xED ledvina)\
      \ P(v\xFDsledek) = 9/10 % + 50\" 40;20;20;2 = 20 %;100;1000;100;1"
    truth: 0
  7:
    pred: 1
    text: "Nakreslil jsem t\u0159i vzorky dar a polynom skl\xE1daj\xEDc\xED se ze\
      \ dvou lin. funkc\xED jimi proch\xE1zej\xEDc\xED na st\xE1vi probl\xE9m, proto\u017E\
      e m\xE1me m\xE1lo tr\xE9novac\xEDch dat a model n\xE1m tzv. negeneralizuje -\
      \ vhodnou \u0159e\u0161en\xEDm by bylo zv\u011Bt\u0161it mno\u017Estv\xED dar\
      \ - takle se model nau\u010Dil vshodnosit pretrichy je p\u0159es n\u011B ty\
      \ to t\u0159i data"
    truth: 1
  8:
    pred: 1
    text: "c\xEDlem je ov\u011B\u0159it teda lze stroj pova\u017Eovat za inteligen\u010D\
      n\xED vych\xE1z\xED z toho, \u017Ee pokud jej nerozezn\xE1me od \u010Dlov\u011B\
      ka, tak ho lze pova\u017Eovat za inteligentn\xEDho. Tento test nar\xE1\u017E\
      \xED na probl\xE9m, \u017Ee pokud zav\u0159eme \u010Dlov\u011Bka do m\xEDstnosti\
      \ a budeme na n\u011Bj mluvit jazykem, kter\xE9mu nerozum\xED, tak n\xE1m tak\xE9\
      \ nebude moct odpov\u011Bd\u011Bt p\u0159\xEDpadn\u011B, pokud by tam m\u011B\
      l \u010Dinskou kn\xED\u017Eku, my na n\u011Bj mluvili \u010Dinsky a on \u010D\
      insky neum\u011Bl, tak by mu odpov\u011B\u010F trvale dlou a nekonec by stejn\u011B\
      \ bylo \u201Estopov\xE9 tr\xE9ny"
    truth: 3
  9:
    pred: 2
    text: "vstupy jsou dva, 1. v\xFDstup z konvolu\u010Dn\xED vzory 2. O\u010Dek\xE1\
      van\xFD v\xFDsledek (vrstva vrstev);v\xFDstupem je pravd\u011Bpodobnost s jakou\
      \ v\xFDscup odpov\xEDd\xE1 o\u010Dek\xE1van\xE9mu v\xFDsledku"
    truth: 2
  10:
    pred: 1
    text: "Je to mo\u017En\xE9, p\u0159i velmi vysok\xE9 hodnot\u011B by mohlo velmi\
      \ rychle doj\xEDt k p\u0159etr\xE9nov\xE1n\xED a model by pak mohl vr\xE1cet\
      \ nesmysly.;Naopak p\u0159i p\u0159\xEDli\u0161 nitk\xE9 hodnot\u011B by tr\xE9\
      nov\xE1n\xED mohlo trvat extr\xE9mn\u011B d\u011B nekone\u010Dn\u011B dlouho,\
      \ ne\u017E by n\xE1m model za\u010Dal konverzovat."
    truth: 1
  11:
    pred: 1
    text: "z\xE1le\u017E\xED na velikosti marice z konvolu\u010Dn\xED vrstvy;pro ZV\
      \ to budou \"operace\""
    truth: 1
  12:
    pred: 2
    text: "Chceme, aby byl ka\u017Ed\xFD vektor unik\u0161en\xED pro ka\u017Ed\xE9\
      \ slovo a dostate\u010Dn\u011B velk\xFD;driometika slou\u017E\xEDc\xED pro p\u0159\
      i\u0159azen\xED vektor\u016F jednotliv\xFDm slov\u016Fm a operac\xED s nimi"
    truth: 0
  13:
    pred: 4
    text: "modeluje funkci sumy nejv\u011Bt\u0161\xEDch \u010Dtverc\u016F."
    truth: 0
ab70f7e934170236b880d9ba1b0b162a:
  0:
    pred: 0
    text: ''
    truth: 0
  2:
    pred: 3
    text: "1) BFS - rozbal\xED v\u0161echny uzly do hloubky dt - exponenci\xE1ln\xED\
      \ par n\xE1ro\u010Dnost DFS - rozbal\xED jednu v\u011Btev do hloubky D \uFFFD\
      \ line\xE1rn\xED pam. naro\u010Dnost (P (k);BFS = do8, DFS = D. b 2) Pokud probl\xE9\
      m necykl\xED nem\u011Bl by m\xEDt seznam explored z\xE1sadn\xED vliv na pam\u011B\
      \u0165ovou slo\u017Eitost"
    truth: 0
  3:
    pred: 3
    text: "- Agent pot\u0159ebuje hodnot\xEDc\xED funkci stavu Agent pot\u0159ebuje\
      \ z prost\u0159ed\xED z\xEDsk\xE1vat vjemy aby m\u011Bl co poslat do hodnot\xED\
      c\xED fce"
    truth: 0
  4:
    pred: 2
    text: "Pro ka\u017Edou t\u0159\xEDdu m\xE1m separ\xE1tn\xED gauss rozlo\u017E\
      en\xED. Na, N2, jin\xFDmi Na testovan\xFD vzor x oplikuj\xED 3x funkci p(x)\
      \ v\u017Edy s sen\xFDmi pro danou t\u0159\xEDdu parametry pr (st\u0159edn\xED\
      \ hodnota) a E(rozptyl);je 2D vektor [>] \uFFFD 2 \u010D\xEDsla 2 \u017E je\
      \ matice [4,7] - st\u0159e\u0161la;18 parametr\u016F celkem;Parametry jsme p\u0159\
      i tr\xE9nov\xE1n\xED odhadli nap\u0159. metodou/max-likehood"
    truth: 2
  5:
    pred: 1
    text: "nap\u0159\xEDklad neuronov\xE1 s\xED\u0165, aposteriorn\xED p se spo\u010D\
      \xEDt\xE1 t\xEDm natr\xE9novan\xE9 NN \u017Ee vlastnosti vzoru se daj\xED na\
      \ vstup s\xED\u0165 nedok\xE1\u017Ee generovat nov\xE9 vstupy"
    truth: 1
  6:
    pred: 2
    text: "P(nem) = 20% P(pozitivem) = 90% P(negl nem) = 1 P(negl zdr) = 97,5%;P(zdo)\
      \ = 80%;z /z\xE1vod = 2,5%;P(nem / poz) P(nen) poz Plnem/poz;0,90 120;=? P(pozitivem)\
      \ . P(nem) P(pot);0,2;P(poz) = P(zdr). P(pozdr) + P(nem). P(pozinem);P(po\u017E\
      );SOUZPISEM. 0,8 - 0,025 + 0,22,9 = 0,02 + 0,18 0,2"
    truth: 4
  7:
    pred: 1
    text: "y = ct ax + bx?;V2;73;tento model spr\xE1vn\u011B negeneralizuje, probl\xE9\
      m by \u0161el \u0159e\u0161it pou\u017Eit\xEDm pol. regrese vy\u0161\u0161\xED\
      ho \u0159\xE1du"
    truth: 1
  8:
    pred: 1
    text: "C\xEDlem testu je ov\u011B\u0159it, \u017Ee \u010Dlov\u011Bk - pozorovatel\
      \ nedok\xE1\u017Ee klasifikovat zda odpov\u011Bdi, kter\xE9 dost\xE1v\xE1 poch\xE1\
      zej\xED od stroje nebo jin\xE9ho \u010Dlov\u011Bka. Mo\u017En\xE9 z\xE1v\u011B\
      ry dok\xE1\u017Ee spr\xE1vn\u011B klas. nedok\xE1\u017Ee spolehliv\u011B neum\xED\
      , ov\u011B\u0159 ur\u010Dit jestli odpov\xEDd\xE1 stroj nebo \u010Dlov\u011B\
      k Nedostatky: Test jestli odpov\u011Bdi vznikaj\xED d\xEDky inteligenci a opravdov\xE9\
      mu pochopen\xED polo\u017Een\xE9 ot\xE1zky nebo d\xEDky rozs\xE1hl\xE9 datab\xE1\
      zi, ve kter\xE9 je mo\u017En\xE9 na ka\u017Edou ot\xE1zku nal\xE9zt odpov\u011B\
      \u010F co\u017E se ozna\u010Duje jako chineserovi podlem."
    truth: 0
  9:
    pred: 4
    text: "loss funkce po\u010D\xEDt\xE1 s m\xEDru spr\xE1vnosti v\xFDstupu syst\xE9\
      mu v porovn\xE1n\xED se spr\xE1vn\xFDm v\xFDstupem. Vstupem je v\xFDstup syst\xE9\
      mu a spr\xE1vn\xFD v\xFDsledek. V\xFDstupem je \u010D\xEDslo ud\xE1vaj\xEDc\xED\
      \ jak moc se tyto dva li\u0161\xED nap\u0159. metodou mean-square error."
    truth: 4
  10:
    pred: 1
    text: "uve\u010Fte, k \u010Demu m\u016F\u017Ee doj\xEDt.;Pokud je LR p\u0159\xED\
      li\u0161 vysok\xE1 m\u016F\u017Ee model oscilovat a nikdy se nep\u0159ibl\xED\
      \u017E\xED spr\xE1vn\xE9mu \u0159e\u0161en\xED."
    truth: 4
  11:
    pred: 4
    text: "Po\u010Det filtr\u016F x Po\u010Det kan\xE1l\u016F x Velikost konvolu\u010D\
      n\xED matice;Po\u010Det filtr\u016F s kolik filtr\u016F tato vrstva na sv\u016F\
      j vstup aplikuje Po\u010Det kan\xE1lu: kolik barevn\xFDch kan\xE1l\u016F m\xE1\
      \ vstupn\xED pixe);Velikost komunikace: Po\u010Det ban\u011Bk matice pro b\u011B\
      \u017En\u011B pou\u017E\xEDvanou matici z p\u0159edn\xE1\u0161ek FIT 3x3 jde\
      \ o 9 operac\xED"
    truth: 4
  12:
    pred: 2
    text: "Prim\xE1rn\xEDm c\xEDlem je aby podobn\xE1 slova le\u017Eela v prostoru\
      \ bl\xEDzko u sebe tzn. m\u011Bla malou euklidovskou vzd\xE1lenost. Word Vector\
      \ armetika znamen\xE1 mo\u017Enost pou\u017E\xEDvat nad vektory matematick\xE9\
      \ operace nap\u0159. king-man = queen"
    truth: 4
  13:
    pred: 2
    text: "Neuronov\xE1 s\xED\u0165 modeluje Q-funkci. Vstupem funkce Je aktu\xE1\
      ln\xED stav agentova prost\u0159ed\xED. V\xFDstupem je postupnost krok\u016F\
      \ vedouc\xED k maxim\xE1ln\xED odm\u011Bn\u011B. Agent pou\u017Eije prvn\xED\
      \ krok vr\xE1cen\xFD Q-funkc\xED jakou svou dal\u0161\xED akci."
    truth: 2
acdc7ccf1fd0d9dd2873bd437ec92729:
  0:
    pred: 4
    text: "6;nemus\xEDme ji\u017E vyhodnocovat"
    truth: 4
  1:
    pred: 4
    text: "Jeliko\u017E jde o hry s O sou\u010Dtem, minimaliza\u010Dn\xED vrstva je\
      \ tam o toho aby zkouman\xE9mu hr\xE1\u010Di, druh\xFD hr\xE1\u010D nejv\xED\
      ce u\u0161kodil. 2. hr\xE1\u010D hraje ve sv\u016Fj prosp\u011Bch. Takov\xE9\
      to hry se odehr\xE1vaj\xED u takov\xFDch her s X sou\u010Dtem"
    truth: 4
  2:
    pred: 3
    text: "jeliko\u017E jde o C notaci, pak \u0159e\u0161en\xED se mus\xED nach\xE1\
      zet v kloubce D v posledn\xEDm uzlu aby bylo nejhor\u0161\xED mo\u017En\xE9\
      ;(2);BTS - o (2\xB0) DFS-OLD);BFS - o;DES - O (RP)"
    truth: 0
  3:
    pred: 4
    text: "obecn\u011B pot\u0159ebuje: - zn\xE1t sou\u010Dasn\xFD stav zn\xE1t n\xE1\
      sledn\xEDky sou\u010Dasn\xE9ho stavu - cenu p\u0159echod\u016F sm\u011B\u0159\
      uj\xEDc\xED k c\xEDli;je atomick\xFD"
    truth: 0
  4:
    pred: 2
    text: "van\xED prst = [p(chuss|obs);P(chaos) observation);apostolickou prst.;P(observation|class)\
      \ P(chass);P(observation);[1 (observation/class) p(class);- parametry: st\u0159\
      edn\xED hodnoty a rozptyly gauss- na slo\u017Een\xED pro ka\u017Edou t\u0159\
      \xEDdu 2D vektor 2x2 matice 2. 4. 3 = 24 \u010D\xEDsel 2 = 3 = 6 parametr\u016F\
      \ parametry lze spo\u010D\xEDtat pomoc\xED max. v\u011Bnohodn\xE9ho odhadu pro\
      \ gaussovsk\xE9 rozlo\u017Een\xED = arg max o (x, ?);rozlo\u017Een\xED;vstupn\xED\
      \ data parametry rozlo\u017Een\xED"
    truth: 2
  5:
    pred: 0
    text: ''
    truth: 0
  6:
    pred: 2
    text: "P(z\xE1rove\u0148) P(naka\u017Een\xFD) - 0,2 P(pozitivn\xED|nako\u017E\
      en\xFD) =0.9 P(negativn\xED|zdrav\xFD) =0, 975 vyzdoben\xE9 P(naka\u017Een\xFD\
      |pozitivn\xED) =? P(vozitivn\xED|naka\u017Een\xFD) - P(naka\u017Een\xFD) P(naka\u017E\
      en\xFD / pozitivn\xED) =;P(vozitivn\xED);P(naka\u017Een\xFD|pozitivn\xED) =;0.\
      \ 9. 02;09 002 + 0.1.0.8;P(pozitivn\xED|naka\u017Een\xFD) P(naka\u017Een\xFD\
      ) P(pozitivn\xED|zdrav\xFD) P(zdrav\xFD)"
    truth: 2
  7:
    pred: 4
    text: "\u0159e\u0161en\xEDm je polynom druh\xE9ho \u0159\xE1du = parabola probl\xE9\
      m: overfitting - model se nau\u010Dil perfektn\u011B kopinovat tr\xE9novac\xED\
      \ data negeneralizuje pro nov\xE1 data zp\u016Fsobeno mal\xFDm po\u010Dtem tr\xE9\
      novac\xEDch dat na moc velk\xFD \u0159\xE1d regrese"
    truth: 4
  8:
    pred: 1
    text: "- c\xEDlem je zjistit, zda li um\u011Bl\xE1 inteligence je skute\u010D\
      n\u011B inteligentn\xED = je chytr\xE1 aspo\u0148 jako \u010Dlov\u011Bk u nedostatky:\
      \ - pokud je dan\xE1 AI natr\xE9novan\xE1 na specifick\xFD \xFAkol a je testov\xE1\
      n pouze ten, m\u016F\u017Ee se pak AI vd\xE1t jako inteligentn\xED - pokud AI\
      \ nerozum\xED probl\xE9mu, ale mus\xED mechanicky prov\xE1d\u011Bt dan\xFD \xFA\
      kol m\u016F\u017Ee se AI ud\xE1t jako inteligentn\xED - test d\xE1v\xE1 smysl\
      \ pro testov\xE1n\xED \"strong AI\", tedy obecn\u011B inteligentn\xEDho stroje\
      \ schopn\xFD \u0159e\u0161it gener\xE1ln\xED probl\xE9my"
    truth: 3
  9:
    pred: 3
    text: "- lon ur\u010Duje kvalitu odpov\u011Bdi algoritmu v porovn\xE1n\xED str\xE9\
      novac\xED sadou - je to hlavn\xED sou\u010D\xE1st algoritmu, podle kter\xE9\
      ho se stroj u\u010D\xED - vstup: odpov\u011B\u010F stroje, p\u0159edem zn\xE1\
      m\xE1 odpov\u011B\u010F, dan\xFD vstup v\xFDstup: re\xE1ln\xE9 \u010D\xEDslo\
      \ kde: \u010D\xEDm v\u011Bt\u0161\xED = \u0161patn\xE1 odpov\u011B\u010F \u010D\
      \xEDm bl\xED\u017E k 0 = dobr\xE1 odpov\u011B\u010F"
    truth: 3
  10:
    pred: 4
    text: "p\u0159i velk\xFDch hodnot\xE1ch L-R se m\u016F\u017Ee st\xE1t, \u017E\
      e v\u017Edycky \"p\u0159esko\u010D\xEDme\" glob\xE1ln\xED minimum jednotliv\xFD\
      ch vah a tedy se m\u016F\u017Eeme dostat do bodu, kdy se nikdy nedostaneme do\
      \ minima algoritmus se p\u0159estane u\u010Dit"
    truth: 4
  11:
    pred: 3
    text: "Kga;Bo\u017Eena Kv;rozli\u0161en\xED n x n z\xEDdka;- po\u010Det pixel\u016F\
      \ v konvolu\u010Dn\xEDm j\xE1d\u0159e"
    truth: 1
  12:
    pred: 2
    text: "- ka\u017Ed\xE9mu slovu se p\u0159i\u0159ad\xED pomoc\xED lookup tabulky\
      \ vektor vah, p\u0159i\u010Dem\u017E chceme, aby kontextu\xE1ln\u011B podobn\xE1\
      \ slova m\u011Bly podobn\xFD vektor vah;- nap\u0159: monarcha = kr\xE1l monarcha\
      \ kosmonaut;- MVA: - mo\u017Enost nakl\xE1dat se slovy jako s velkony a m\xED\
      t mo\u017Enost po\u010D\xEDtat nap\u0159: zuklidovskou vzd\xE1lenost skal\xE1\
      rn\xED sou\u010Din maticov\xE9 n\xE1soben\xED"
    truth: 0
  13:
    pred: 3
    text: "- modeluje kvalitu akce v dan\xE9m stavu;Tha. s;kvalita aktiv dan\xE9m\
      \ stavu;- sou\u010Dasn\xFD stav vybran\xE1 akce;stratigie;- pokud se provede\
      \ akce a: nad stavem si, pak Q funkce \u0159\xEDk\xE1, kolik odm\u011Bny mohu\
      \ po proveden\xED akce o\u010Dek\xE1vat"
    truth: 3
ae04cdd739eceeae85fda0bd00049cd7:
  0:
    pred: 0
    text: ''
    truth: 0
  1:
    pred: 4
    text: "Minimax lze pou\u017E\xEDt pro tzv. zero-sum hry, tzn. \u017Ee zisk jednoho\
      \ hr\xE1\u010De je na \xFAkor druh\xE9ho hr\xE1\u010De. Proto m\u016F\u017E\
      eme pro druh\xE9ho hr\xE1\u010De hledat minim\xE1ln\xED hodnoty."
    truth: 4
  2:
    pred: 0
    text: ''
    truth: 0
  3:
    pred: 3
    text: "s prost\u0159ed\xED by m\u011Blo b\xFDt aspo\u0148 \u010D\xE1ste\u010D\
      n\u011B pozorovateln\xE9 agent reprezentuje stav strukturovan\u011B"
    truth: 0
  4:
    pred: 3
    text: "Parametry jsme na tr\xE9novac\xEDch datech z\xEDskali pomoc\xED maxim\xE1\
      ln\u011B v\u011Brohodn\xE9ho odhadu. g max p(x|x|x|x| ), E). (Z\xEDsk\xE1me\
      \ je tak, \u017Ee zderivujeme vzorec;arg max Op, 2;gaussovsk\xE9ho rozlo\u017E\
      en\xED (parci\xE1ln\u011B podle pr, 2) a tyto derivace pak polo\u017E\xEDme\
      \ a k rovn\xFD nule.) Hled\xE1me takov\xE9 parametry, kter\xE9 maximalizuj\xED\
      \ funkci N(x|p, \xA7). M\xE1me 3 t\u0159\xEDdy, tak\u017Ee budeme m\xEDt c\xED\
      lem 6 parametr\u016F (u a k pro ka\u017Edou t\u0159\xEDdu zvl\xE1\u0161\u0165\
      ) Podoba parametr\u016F je: pr - vektor nap\u0159. ju = LoJ - matice nap\u0159\
      ? [\xF3] C\xFB] (hlavn\xED diagon\xE1la ur\u010Duje rozta\u017Een\xED na ose\
      \ x a y, druh\xE1 diagon\xE1la ur\u010Duje korelaci - zplo\u0161t\u011Bn\xED\
      )"
    truth: 0
  6:
    pred: 2
    text: "P(zdrav\xFD) = 0,8;P(naka\u017Een\xFD) = 0,2 P(pozitivn\xED|naka\u017E\
      en\xFD) =0,9 P(negativn\xED|zdrav\xFD) = 0,945 p (naka\u017Een\xFD/pozitivn\xED\
      ) = P(pozitivn\xED|zdrav\xFD) = 1 - P(negativn\xED| zdrav\xFD) = 1 -0,945 =\
      \ 0,025 P(pozitivn\xED) = P(pozitivn\xED|zdrav\xFD) + P(pozitivn\xED|naka\u017E\
      en\xFD) = 0,025+0,9 =0,925 P(naka\u017Een\xFD|pozitivn\xED) =;0,18 9. 0,12 0,925\
      \ 0,925;(pozitivn\xED naka\u017Een\xFD) . p(naka\u017Een\xFD);P(pozitivn\xED\
      )"
    truth: 0
  7:
    pred: 4
    text: "1.5;0,5;k\u0159ivka, kterou se nau\u010D\xED model podynomi\xE1ln\xED regrese\
      \ druh\xE9ho \u0159\xE1du;tr\xE9novac\xED Do\u0161lo k p\u0159etr\xE9nov\xE1\
      n\xED - k\u0159ivka p\u0159esn\u011B kop\xEDruje data. Je to zp\u016Fsobeno\
      \ t\xEDm, \u017Ee m\xE1me m\xE1lo dat \u2014 vy\u0159e\u0161\xEDme t\xEDm, \u017E\
      e si se\u017Eeneme v\xEDce dat. \u0160lo by \u0159e\u0161it taky sn\xED\u017E\
      en\xEDm \u0159\xE1du polynomu."
    truth: 4
  8:
    pred: 3
    text: "C\xEDlem Turingova testu je ur\u010Dit zda stroj je \u010D\xED nen\xED\
      \ inteligentn\xED. Na nedostatky poukazuje argument \u010D\xEDnsk\xE9ho pokoje,\
      \ tedy syst\xE9m se zvenku m\u016F\u017Ee zd\xE1t inteligentn\xED (Turingov\xFD\
      m testem by pro\u0161el), ale uvnit\u0159 nic inteligentn\xEDho nen\xED (tedy\
      \ a\u017E na \u010Dlov\u011Bka, ale ten neum\xED \u010D\xEDnsky) Jako dal\u0161\
      \xED nedostatek um\xEDm to, \u017Ee test je zam\u011B\u0159en pouze na konkr\xE9\
      tn\xED \u201Easpekt inteligence\u201C - komunikace."
    truth: 0
  9:
    pred: 2
    text: "Slou\u017E\xED k ur\u010Den\xED jak moc se li\u0161\xED v\xFDstup od o\u010D\
      ek\xE1van\xE9ho v\xFDstupu. Vstupem je label a v\xFDsledek na\u0161eho modelu.\
      \ V\xFDstupem je jak k velk\xE9mu rozd\xEDlu do\u0161lo."
    truth: 4
  10:
    pred: 1
    text: "Je to mo\u017En\xE9. Nap\u0159. nechceme, aby u\u010D\xEDc\xED konstanta\
      \ byla p\u0159\xEDli\u0161 velk\xE1, jinak by do\u0161lo k moc velk\xFDm \u201E\
      skok\u016Fm\u201C."
    truth: 4
  11:
    pred: 4
    text: "WXHXC XXXM;NU x H je velikost vstupu (\u010Dlov\u011Bka z v\xFD\u0161ka)\
      \ \xB7 c je po\u010Det kan\xE1l\u016F K je velikost konvolu\u010Dn\xEDho j\xE1\
      dra \xB7 M je po\u010Det filtr\u016F"
    truth: 2
  12:
    pred: 2
    text: "chceme, aby slova, kter\xE1 si jsou n\u011Bjak\xFDm zp\u016Fsobem bl\xED\
      zk\xE1 (synakticky v\xFDznamov\xE9, apod.) byla bl\xEDzko sebe (euklidovsk\xE1\
      \ vzd\xE1lenost)"
    truth: 3
b925207381f4c6854adc87388565073e:
  0:
    pred: 0
    text: ''
    truth: 0
  1:
    pred: 1
    text: "Mnohdy se m\u016F\u017Ee st\xE1t, \u017Ee pro kter\xFD je aktu\xE1ln\xED\
      \ zisk minim\xE1ln\xED m\u016F\u017Ee v\xE9st k v\xFDh\u0159e (minimax) neprohled\xE1\
      v\xE1 cel\xFD stavov\xFD prostor, tud\xED\u017E se v postromu n\xE1m vybran\xE9\
      ho minima m\u016F\u017Ee nach\xE1zet v budoucnu. V\xFDhodn\u011Bj\u0161\xED\
      \ ohodnocen\xED.) Mnimax lze pou\u017E\xEDt pro turn-based (takov\xE9) hry"
    truth: 0
  2:
    pred: 3
    text: "Opr\u0161\xED;b);2);PBFS;(nen\xED;pot\u0159eba rozgenerovat potomky);I;ODFS;-;d*;pot\u0159\
      ebuje si pamatovat akor\xE1t aktu\xE1ln\xED hloubku Zano\u0159en\xED, velk\xE1\
      \ \u0161ance \u017Ee nejd\u0159\xEDv naraz\xED na D, ne\u017E na d*"
    truth: 2
  3:
    pred: 0
    text: ''
    truth: 0
  4:
    pred: 3
    text: "5xn. o kde p = T2TO - st\u0159edn\xED hodnota, o rozptyl. d\xE1le Gauss\
      \ klasifik\xE1tor P(CEDIK) P(C=2|X) P(c=o) P(c=2) P(C|X);P(x|C=1|C) P(C=1);2;Tud\xED\
      \u017E pot\u0159ebujeme odhadnout 1) P(c=0), P(c=1), P(c=2) 2) st\u0159edn\xED\
      \ hodnoty x a y (2 parametry) 3) rozebyly okoly, pota\u017Emo \u010D (2-35 parametry\
      \ Co\u017E je B + 3 (2 + 1 (2 nebo 3) = 3+ 3 - (4 nebo 5) = 15 parametr\u016F\
      ;(p\u0159\xEDslu\u0161nost do t\u0159\xEDd)"
    truth: 0
  5:
    pred: 4
    text: "Logistick\xE1 regrese p\u0159\xEDslu\u0161nost do t\u0159\xEDd 0,1 P(c=1|X)\
      \ = o (x|w) = o (x|xw2 + xxxx|w| w|) kde o je aktiva\u010Dn\xED fce signorid.\
      \ 5(0) =0,5, 0, 0 = 0, 0 co) =1;a;negativn\xEDch klasifik"
    truth: 0
  6:
    pred: 0
    text: P(N|P) =;P(PIN) P(N);P(P);P(A|B) = PARAMETRY P(x) = Z P(x|y) P(x|y) = P(X|x)
      P(x);P(B|A) P(A);P(B);D;P;Ney;N;P(P) = 0,2;13;2;78;60;20;80;PAPA ZP P(b) = Weiss
      od;P(N|P) =;0,9;0012;0,2;0,9
    truth: 0
  7:
    pred: 3
    text: "1,0;0,5;zakreslil jsem regresn\xED k\u0159ibhu kter\xE1 proch\xE1z\xED\
      \ zadan\xFDmi body. Bohu\u017Eel nelze definovat pr\u016Fb\u011Bh pro jina\u010D\
      \xED hodnoty, ne\u017E v intervalu xx0 x2), tudi\u017E nastal tzv. overfitting\
      \ - p\u0159etr\xE9nov\xE1n\xED kde regresn\xED k\u0159ivka se nau\u010Dila a\u017E\
      \ p\u0159\xEDli\u0161 dob\u0159e pro definovat (sposit / odhadnout) (testovac\xED\
      ) pro nov\xE9 data bude nejsp\xED\u0161e predikovat nesmysly. tr\xE9novac\xED\
      \ data, tud\xED\u017E Probl\xE9m by se dal \u0159e\u0161it v\u011Bt\u0161\xED\
      m mno\u017Estv\xEDm tr\xE9novac\xEDch dat, stejn\u011B jako pomoc\xED super\
      \ learningu, kdy neanotovan\xE1 data pom\xE1haj\xED regresn\xED k\u0159ikum\
      \ spr\xE1vn\u011B. totr\xE9novat"
    truth: 3
  8:
    pred: 4
    text: "C\xEDlem je ur\u010Dit, zda je syst\xE9m inteligentn\xED. Prvn\xED v\xFD\
      sledek je, \u017Ee nedok\xE1\u017Eeme rozeznat odpov\u011Bdi syst\xE9mu od \"\
      inteligentn\xEDho\" (\u010Dlov\u011Bk) - tudi\u017E syst\xE9m pova\u017Eujeme\
      \ za inteligentn\xED. Druh\xE1 mo\u017Enost je, \u017Ee rozd\xEDl v odpov\u011B\
      d\xEDch je patrn\xFD a my jsme schopni rozli\u0161it kdo nebo co odpov\xEDd\xE1\
      . Z\xE1sadn\xED nedostatek je p\u0159edpoklad, \u017Ee pokud dok\xE1\u017Ee\
      \ syst\xE9m vyhov\u011Bt po\u017Eadavka, znamen\xE1 to, \u017Ee mu rozum\xED\
      \ (je inteligentn\xED. p\u0159edpoklad p\u0159ipodob\u0148uje inteligenci lidskou,\
      \ racion\xE1ln\xED, k t\xE9 v\xFDpo\u010Detn\xED Tento nedostatek napad\xE1\
      \ tzv. chinese - room experiment, kdy uvnit\u0159 m\xEDstnosti je \u010Dlov\u011B\
      k, co neum\xED \u010D\xEDssosky a v\u0161echno v\u011Bd\u011Bn\xED sv\u011B\
      ta seps\xE1no v \u010D\xEDnsk\xE9 literatu\u0159e Do m\xEDstnosti \u010Dlov\u011B\
      k dost\xE1v\xE1 pap\xEDrky s dotazy. Teoreticky takov\xFDto syst\xE9m je schopen\
      \ odpov\u011Bd\u011Bt na cokoliv. Je v\u0161ak inteligentn\xED? Odpov\u011B\
      di m\u016F\u017Ee naj\xEDt a\u017E v exponenci\xE1ln\xEDch \u010Dasech... Tud\xED\
      \u017E dle Turingova testu by byl pova\u017Eov\xE1n za inteligentn\xED, ale\
      \ ve skute\u010Dnosti nem\xE1 \u017E\xE1dn\xE9 predn\xE9 vyu\u017Eit\xED..."
    truth: 4
  9:
    pred: 4
    text: "Uhazuje jak se v\xFDsledek neuronov\xE9 s\xEDt\u011B odli\u0161uje od vzoru.\
      \ Vstupem je v\xFDsledek p\u0159edikovan\xFD modelem (nap\u0159. x=8) a z\xE1\
      rove\u0148 Ground Truth (sou\u010D\xE1st dat) - nap\u0159 K = 7. V\xFDstup:\
      \ hodnota loss vypo\u010D\xEDt\xE1na pomoc\xED loss fce (t\u0159eba MSE) nad\
      \ v\xFDsledkem modelu a Ground truth."
    truth: 4
  10:
    pred: 4
    text: "\u017Ee velice nelibou Ze vzorce gradient decentu v\xEDme, \u017Ee se po\u010D\
      \xEDtaj\xED ode\u010Dten\xEDm gradient\u016F vy v\xE1soben\xFDch konstantou\
      \ x (learning rate) od sou\u010Dasn\xE9 hodnoty vektoru. Pokud zvol\xEDme nap\u0159\
      . p\u0159\xEDli\u0161 mal\xE9, budeme de-fucto ode\u010D\xEDtat nulu a t\xED\
      m p\xEDdem by se model bu\u010F neu\u010Dil v\u016Fbec, anebo p\u0159\xEDli\u0161\
      \ pomalu. Podobn\u011B, kdyby byla a p\u0159\xEDli\u0161 velk\xE1, doch\xE1\
      zelo by k rekonzistentn\xEDmu v\xFDpo\u010Dtu d\xE9lky gradient\u016F by nemusel\
      \ konverzovat kO)"
    truth: 0
  11:
    pred: 4
    text: "fy x 3 x in x out velikosti filtru;-;velikost vstupu;velikost v\xFDstupu;Tud\xED\
      \u017E 4 operace n\xE1soben\xED"
    truth: 1
  12:
    pred: 2
    text: "vektory word embeddlings reprezentuj\xED s\xE9mantick\xE9 souvislost\xED\
      \ jednotliv\xFDch slov (tohon\u016F) De-fusto se jedn\xE1 o look-up tabulku,\
      \ kde proka\u017Ed\xFD \u0159\xE1dek hned dok\xE1\u017Eeme na\u0161\xEDt p\u0159\
      \xEDslu\u0161n\xE9 slovo, plus ohodnocen\xED \"bl\xEDzkosti\" k jin\xFDm slov\u016F\
      m. To m\xE1m dovoluje vyu\u017E\xEDt WV aritmet\xE1ku - nad embeddovan\xFDmi\
      \ slovy prov\xE1d\u011Bt matematick\xE9 operace, kter\xFDmi m\u016F\u017Eeme\
      \ ovlivnit v\xFDstupn\xE9 slovo - nap\u0159. \u201Cking - man = queen\u201C"
    truth: 4
  13:
    pred: 2
    text: "Deep O-Learning u\u010D\xED agenta rozhodovat jak\xFD course of action\
      \ vybrat. Pro jednotliv\xE9 n\xE1sleduj\xEDc\xED kroky Q-learning vypo\u010D\
      \xEDt\xE1v\xE1 ohodnocen\xED - tud\xED\u017E vstup - sou\u010Dasn\xFD stav -\
      \ v\xFDstup - Jeden nejl\xE9pe ohodnocen\xFD krok, kter\xFD se proveden."
    truth: 2
b9f5b9793d2ca99f24ea098f529807e7:
  0:
    pred: 4
    text: "uspora je tak\xE9, \u017Ee he\u010F u\u017E roz nasrd cesty (cesta z bystric\
      \ do Brna pri prer\xE1lne silnice) tak u\u017E v\xEDc, \u017Ee je tam esta a\
      \ ne mus\xED ju znova hleda\u0165;5;2"
    truth: 4
  1:
    pred: 3
    text: "MAX MNV 6000;Proto\u017Ee aby maximalizoval super svojzisk. My p\u0159\
      edpokl\xE1d\xE1me \u0165ahy \xFApera pomocou Min. A najv\xE1\u017E\u0161\xED\
      \ zisk bude ma\u0165, he\u010F n\xE1m vr\xE1t\xED najmen\u0161\xEDu hodnotu.\
      \ Najlep\u0161\xEDe ale protihr\xE1\u010D hr\xE1 proti mne. Inak by to boho\
      \ pot\u0159ebne tro\u0161ku pozm\u011Bni\u0165"
    truth: 3
  2:
    pred: 1
    text: '= 0 (k BFS no explored DFS no explored : 0 (b);s explored = s explored:
      06 (b'
    truth: 2
  3:
    pred: 0
    text: ''
    truth: 0
  4:
    pred: 1
    text: "Vypo\u010D\xEDtame pomocou bayesova vzorce. Aby sme to mohli vypo\u010D\
      \xEDta\u0165 pot\u0159ebujeme apriorn\xED pravde- podobnos\u0165 (margin\xE1\
      lna pravdepodobnos\u0165 triedy), Funkci hustoty dat po\u010Det v triedu pravdepodobnosti,\
      \ a evidenci apriori spo\u010D\xEDtame ako in-celkov\xFD po\u010Det Z Funkci\
      \ hustoty pravdepodobnosti z\xEDskame ML odhad - Evidenci / normalizaci z\xED\
      skan\xE9 pomocou sum ruk p\u0159e ka\u017Ed\xFA triedu m\xE1me Novarian\u010D\
      n\xED matica - rektor - 2 zlo\u017Ekov\xFD vektor st\u0159edn\xEDch hodnot -\
      \ matice - 2x2 apriorn\xED pravdepodobnos\u0165 - jedno \u010D\xEDslo Funkci\
      \ hustoty pravd\u011Bpodobnosti -"
    truth: 1
  5:
    pred: 2
    text: "vypo\u010D\xEDtaj\xFA sa jej parametri pomoci Loss-entropy runka;Logistick\xE1\
      \ regrese;senerativn\u011B pou\u017Eij\xFA bayesov vzorec s hustou pravdepodobnost\
      \ nemodeluj\xFA hned posteri\xF3rn\xED pravdepodobnos\u0165 triedy"
    truth: 0
  6:
    pred: 1
    text: "P(nak) = 20% p(zdrav\xFD) = 80%;28;o. a 9. 00;P(nakl. poz) = 90% P(nak\
      \ / neg) = 10%;P(poz /nah) = p(poz) - p(naklonz) P(pozinah) = O. K. I. R. 9;p(nak);-;P(zdravotn\xED\
      ci) = 075% P(ze) = ZEF% P(nesl zde) = 97.5% inakl = 25%;nah;\u011Bg nah;nakyma;neg;(neg);p(nak/p(neglnak);P(nak/neg\
      \ 0. 2. 0.025;0.2;p(neg) = p(pozl = o;o;0.95"
    truth: 0
  7:
    pred: 0
    text: "n\xE1sledn\xFD polyn\xF3m;v\u011Bzen\xED;viac tr\xE9novac\xEDch dat, zm\u011B\
      nit polyn\xF3m;Negeneralizuje"
    truth: 0
  8:
    pred: 1
    text: "C\xEDlem je zisti\u0165 \u010Di sa \u010Dlovek rozpr\xE1va s \u010Dlovekom\
      \ alebo strojom. Z\xE1v\u011Bry, \u017Ee nevie rozhodnu\u0165 (obecn\xE1 AI)\
      \ alebo v\xEDe;terorizmeine opsati a te\u010F si s t\xEDm \u010Dlov\u011Bk p\xED\
      \u0161e;M\xE1me AI (nie obecn\xE9) ktor\xE9 prejdu t\xEDmto testom, tak\u017E\
      e m\xE1 nedostatky;a"
    truth: 0
  9:
    pred: 2
    text: "hordice vstupem je v\xFDstup modelu a o\u010Dak\xE1van\xFD v\xFDstup. Pod\u013E\
      a toho oko dobrej je v\xFDsledek, tak sa uprav\xED (neuprav\xED model"
    truth: 2
  10:
    pred: 0
    text: ''
    truth: 0
  11:
    pred: 4
    text: "x ve\u013Ekost konvolu\u010Dn\xE9ho jadra/mrie\u017Eky;ANA"
    truth: 1
  12:
    pred: 0
    text: ''
    truth: 0
  13:
    pred: 0
    text: ''
    truth: 0
ba41864a7c5cf47e60cacfbd6b2c9770:
  6:
    pred: 2
    text: "-;p(pozitivn\xED) = p(pozitivn\xED ) naku\u0159en\xFD;Sv\u011Bt;- p(negativn\xED\
      |nezaka\u017Een\xFD);p (naka\u017Een\xFD / pozitivn\xED) - p(pozitivn\xED) =\
      \ p(pozitivn\xED) naka\u017Een\xFD) sp\xED naka\u017Een\xFD = p(naka\u017Een\xFD\
      /pozitivn\xED) = p(pozitivn\xED / naka\u017Ed\xFD) . p(hakaics) p(politiku)\
      \ pozitivn\xED - ano. 0.075.08 0.2+ 0.025= 0.225;p(naka\u017Een\xFD) / pozitivn\xED\
      );0. 9. 02;0.222,;98;s;3. 8"
    truth: 0
  7:
    pred: 3
    text: "=LO;\xFD = E 05, 1;je m\xE1lo tr\xE9novac\xEDch dat - k\u0159ivka prolo\u017E\
      \xED p\u0159esn\u011B body. Pro nov\xE1 data pak nebude odhad p\u0159esn\xFD\
      \ Jedn\xE1 se o probl\xE9m jm\xE9nem overfitting \u0158e\u0161en\xEDm by bylo\
      \ p\u0159idat v\xEDce tr\xE9novac\xEDch dat s r\u016Fzn\xFDmi hodnoty."
    truth: 0
c54fb9058a498e5d0a9138a3846352b4:
  0:
    pred: 0
    text: ''
    truth: 0
  1:
    pred: 0
    text: "spo\u010D\xEDv\xE1 v tom, \u017Ee jednotliv\xE9 taky bry jsou na sob\u011B\
      \ z\xE1visl\xE9 Tj. \u017Ee tak soupe\u0159e ovliv\u0148uje m\u016Fj dal\u0161\
      \xED tah. Pokud p\u0159i lo\u017Ee j\xE1 maximalizuji sv\u016Fj zisk, tak protivn\xED\
      k se sna\u017E\xED mi nab\xEDdnout takov\xE9 varianty na v\xFDb\u011Br, kde\
      \ m\u016Fj zisk bude co nejmen\u0161\xED. Proto protivn\xEDk vyb\xEDr\xE1 minim\xE1\
      ln\xED hodnotu \u010D\xEDm\u017E mi pr\xE1v\u011B sn\xED\u017E\xED m\u016Fj\
      \ zisk. Tento proe s t\xEDmto procesem pr\xE1v\u011B alg. minimax pracuje."
    truth: 0
  2:
    pred: 3
    text: "BFS - budu prohledavat patra postupn\u011B \uFFFD mus\xEDm rozbalit v\u0161\
      echny pat\u0159e a\u017E do hloubky od;a;v\u017Edy se zano\u017E\xEDm a\u017E\
      \ do hlouby D, pak se vyno\u0159uju zkou\u0161\xEDm dal;pamatuji si v\u0161\
      echny vrsty p\u0159ede mnou v \u0159e\u0161en\xED;BES;6;1+6 + 6 3/4 37 - ...\
      \ \uFFFD tedy sou\u010Det v\u0161ech pater a\u017E do hloubky do \uFFFD neum\xED\
      m to zapsat hezky matematicky;PFS"
    truth: 3
  3:
    pred: 0
    text: ''
    truth: 0
  4:
    pred: 0
    text: ''
    truth: 0
  5:
    pred: 2
    text: "P\u0158\xCDKU;Rozpily:;logistick\xE1 regrese k-nearest soused\u016F (k-\
      \ nejbli\u017E\u0161\xEDch);Li\u0161\xED se tak, \u017Ee mapuje vstupn\xED data\
      \ na v\xFDstupn\xED kabely p\u0159\xEDmo- kde\u017Eto generativn\xED modeluj\xED\
      \ pravd\u011Bpodobnostn\xED rozlo\u017Een\xED dat ze kter\xE9ho pot\xE9 tato\
      \ pravd\u011Bp. vych\xE1z\xED.;K- NEJBLED\xCDKU SOUSED\u016E vypo\u010D\xED\
      t\xE1 pravd\u011Bp. tak;\u017Ee se pod\xEDv\xE1 na okol\xED bodu (data) Vezme\
      \ data kter\xE1 pat\u0159\xED do t\u0159\xEDdy A, vezme data kter\xE1 pat\u0159\
      il do t\u0159\xEDdy B a vytvo\u0159\xED pravd\u011Bpodobnost po\u010Det dat\
      \ v A pravd\u011Bpodobnost \u017Ee pat\u0159\xED do A;po\u010Det zkonan\xFD\
      ch soused\u016F"
    truth: 0
  6:
    pred: 2
    text: "pozitivn\xED;(PIS) PIS);PtS/P);negativn\xED;P(P;2;SIPIO;P(P|S) = 0,9 P(s)\
      \ = 0,2 P(H) =0,8;P(HIN) P(N);PINIH);P(P, S) = P(PIS) - P(P|S);P(H);P(P, 4)\
      \ - P(PH) - P(H);PC P(P, H) IP P(;(P, S) + P(P, H) = 0, 38 0,9 .0,2 = 0,18 0,025.\
      \ 0,8 = 0,2;s). p;0,2;0,18;P(PIS) = P(PIS) - PIS) = P(S|P) P(e);,;0,38"
    truth: 3
  7:
    pred: 4
    text: "Nakreslil jsem k\u0159ivku s jedn\xEDm zak\u0159iven\xEDm \uFFFD \u0159\
      \xE1d k = 2 vych\xE1z\xED 2 x? a to tak, \u017Ee k\u0159ivka p\u0159\xEDmo proch\xE1\
      z\xED tr\xE9novac\xEDmi vzory. probl\xE9m nastal takov\xFD, \u017Ee pro tr\xE9\
      nov\xE1n\xED bylo pou\u017Eito pouze velmi mal\xE9 mno\u017Estv\xED dat. to\
      \ vede k tomu, \u017Ee model se p\u0159etr\u017Euje na tato data a pro dal\u0161\
      \xED dodan\xE1 nebude generalizova N\xE1prava je pou\u017Eit\xED v\u011Bt\u0161\
      \xEDho vzorku tr\xE9novac\xEDch dat aby se regresn\xED k\u0159\xEDvka (jej\xED\
      \ parametry) mohli l\xE9pe natr\xE9novat."
    truth: 4
  8:
    pred: 1
    text: "Turing\u016Fv test ur\u010Duje, zda je/nen\xED stroj inteligentn\xED. z\xE1\
      v\u011Bry CO je inteligentn\xED (2) nen\xED inteligentn\xED Vych\xE1z\xED z\
      \ p\u0159edpokladu, \u017Ee \u010Dlov\u011Bk je inteligentn\xED.;Zasadn\xED\
      m nedostatkem m\u016F\u017Ee b\xFDt, \u017Ee stroj m\u016F\u017Ee m\xEDt k dispozici\
      \ velk\xE9 mno\u017Estv\xED dat a velk\xFD v\xFDpo\u010Detn\xED v\xFDkon, tak\u017E\
      e jednotliv\xE9 probl\xE9my vy\u0159e\u0161\xED a budou nerozpoznateln\xE9 od\
      \ \u010Dlov\u011Bka to v\u0161ak ze stroje ned\u011Bl\xE1 stroj inteligentn\xED\
      . Inteligence je mnohem komplexn\u011Bj\u0161\xED vlastnost, ne\u017E jen vracet\
      \ vhodn\xE9 odpov\u011Bdi. V dne\u0161n\xED dob\u011B nen\xED tento test p\u0159\
      \xEDli\u0161 pou\u017Eiteln\xFD, jeliko\u017E ji\u017E existuj\xED syst\xE9\
      my, kter\xE9 maj\xED odpov\u011Bdi nerozpoznateln\xE9 od \u010Dlov\u011Bka,\
      \ ale st\xE1le nejsou pova\u017Eov\xE1ny jako inteligentn\xED."
    truth: 0
  9:
    pred: 0
    text: ''
    truth: 0
  10:
    pred: 0
    text: ''
    truth: 0
  11:
    pred: 0
    text: ''
    truth: 0
  12:
    pred: 0
    text: ''
    truth: 0
ce1e0e61482d8d323c9af9f6dddd0a6b:
  0:
    pred: 1
    text: "vede k \u0159e\u0161en\xED;pamatuji si, kter\xFD ze 2 32) stav\u016F s.\
      \ a sz vedl k \u0159e\u0161en\xED;and: pokud naraz\xEDm na and v\u011Btev, u\u017E\
      \ m\xE1m v pam\u011Bti, \u017Ee uzel Sz vede k \u0159e\u0161en\xED, tedy v tomto\
      \ p\u0159\xEDpad\u011B Sx vede rovnou do SB"
    truth: 1
  1:
    pred: 4
    text: "protihr\xE1\u010D maximalizuje sv\u016Fj u\u017Eitek minimalizac\xED m\xE9\
      ho zisku, na jeho taz\xEDch tedy vyb\xEDr\xE1m hodnoty, kter\xE9 jsou pro m\u011B\
      \ nejhor\u0161\xED (ty nejmen\u0161\xED) lze pou\u017E\xEDt pro hry, kde hraj\xED\
      \ 2 hr\xE1\u010Di proti sob\u011B a sna\u017E\xED se maximalizovat sv\u016F\
      j u\u017Eitek minimalizov\xE1n\xEDm protihr\xE1\u010Dova u\u017Eitku tedy pokud\
      \ by protihr\xE1\u010D hr\xE1l nap\u0159. n\xE1hodn\xE9 tahy, je t\u0159eba\
      \ Minimax upravit a hr\xE1t v potaz pr\u016Fm\u011Br hodnot"
    truth: 3
  4:
    pred: 4
    text: "1. parametr - apriorn\xED pravd\u011Bpodobnost p(C) pro ka\u017Edou ze\
      \ 3 t\u0159\xEDd (odhad): po\u010D. dat v \u010D p(c\xED) = po\u010D. dat celkem,\
      \ p(c2), p(c3) - stejn\xFDm zp\u016Fsobem - ka\u017Ed\xE1 1 re\xE1ln\xE9 \u010D\
      \xEDslo 2. odhad parametr\u016F a E v\xEDcerozm. gaus. rozlo\u017Een\xED pro\
      \ ka\u017Edou t\u0159\xEDdu: nee = N\xE9 Exten, Se = Ne E (Xon - vec)? \uFFFD\
      \ 2D vektor - 2 re\xE1ln\xE1 \u010D\xEDsla \uFFFD korela\u010Dn\xED matice -\
      \ 2 re\xE1ln\xE1 \u010D\xEDsla (na diagon\xE1le jsou \uFFFD pomoc\xED t\u011B\
      chto v\xFDpo\u010Dt\u016F mohu odhadnout rozlo\u017Een\xED pozorov\xE1n\xED\
      \ pro dan\xE9 t\u0159\xEDdy: p(X|C) posteriorn\xED pravd. \uFFFD odhad metodou\
      \ maxim\xE1ln\xED v\u011Brohodnosti vyu\u017Eiji tyto hodnoty pro v\xFDpo\u010D\
      et pravd\u011Bpodobnosti, \u017Ee dan\xE1 hodnota pat\u0159\xED p(x) do ka\u017E\
      d\xE9 ze 3 t\u0159\xEDd, pomoc\xED Bayessova vzorce: p(C|x) = p(X|C) p(c) =\
      \ p(x|c) - p(c) suma p\u0159es ka\u017Ed\xE1 ze 3 t\u0159\xEDd m\xE1 tedy: EP(x|k)\
      \ p(k) K v\u0161echny t\u0159\xEDdy p(c) apriorn\xED pravd. (1 \u010D\xEDslo),\
      \ v\xEDc 2D vektor (z \u010D\xEDsla), E 2x2 korela\u010Dn\xED matice (2 \u010D\
      \xEDsla)"
    truth: 4
  5:
    pred: 4
    text: "line\xE1rn\xED logistick\xE1 regrese, polynomi\xE1ln\xED logistick\xE1\
      \ regrese (jako ugenerativn\xEDho modelu v p\u0159\xEDkladu 5) nemus\xEDm odhadovat\
      \ rozlo\u017Een\xED dat p(x|c) a a\u017E pak z n\u011Bj posterior. pr. p(c|x),\
      \ ale soust\u0159ed\xEDm se rovnou na odhad pravd\u011Bpodobnosti p(C|X) - odhad\
      \ parametr\u016F aktiva\u010Dn\xED fce signorida O (XII) - sna\u017E\xEDm se\
      \ ji maximalizovat, m\u011Bn\xEDm parametr w - metoda maxim\xE1ln\xED v\u011B\
      rohodnosti;\uFFFD;\uFFFD p\u0159\xEDp. mohu vyu\u017E\xEDt logaretmizace a cross-entropy\
      \ objektivn\xED fce pro optimalizaci \uFFFD max. aposteriory probability rule\
      \ \uFFFD vyberu tu t\u0159\xEDdu, kter\xE1 m\xE1 vy\u0161\u0161\xED F"
    truth: 4
  6:
    pred: 3
    text: "N - naka\u017Een\xED 2- zdrav\xED pozitivn\xED - negativn\xED P(N|=0, 2,\
      \ 2, P(2|7-0,8) P(t|IN) =0, 9 P(-l2) -0, 975 P(N|+) P(tlz) = 0, 025;P(N|+;P(t)\
      \ = P(t|N|+ P(t, 2) = P(t|N) P(N) + P(H|Z) P(z) 0,18 0,02 P(t) = 0,9-0, 2 +\
      \ 0,025. 0,8=0,2 P(N|H) = 09: AL okr"
    truth: 4
  7:
    pred: 2
    text: "1,51 1 0,5;dat je m\xE1lo, tedy v\xFDsledn\xE1 funkce bude proch\xE1zet\
      \ p\u0159\xEDmo n\u011Bkter\xFDmi z bod\u016F a nebude schopen generalizace\
      \ d\xE1 se \u0159e\u0161it p\u0159id\xE1n\xEDm tr\xE9novac\xEDch dat nebo sn\xED\
      \u017Een\xEDm hodnoty k to by ale v tomto konkr\xE9tn\xEDm p\u0159\xEDpad\u011B\
      \ p\u0159\xEDli\u0161 nepomohlo, K je ji\u017E dost n\xEDzk\xE9 a dat by bylo\
      \ i tak m\xE1lo)"
    truth: 2
  8:
    pred: 4
    text: "c\xEDlem je zjistit, zda n\u011Bjak\xE1 zkouman\xE1 AI spl\u0148uje po\u017E\
      adavky, aby mohla b\xFDt \u201Estrong AI\u201C, tedy aby m\u011Bla kognitivn\xED\
      \ schopnosti nerozpoznateln\xE9 od \u010Dlov\u011Bka \uFFFD z\xE1v\u011Bry:\
      \ je strong Al, nen\xED strong AI nedostatek porovn\xE1n\xED prob\xEDh\xE1 s\
      \ \u010Dlov\u011Bkem ale m\u016F\u017Ee existovat i jin\xFD druh inteligence,\
      \ nap\u0159. mimozemsk\xE1, kter\xE1 se od t\xE9 lidsk\xE9 li\u0161\xED, tedy\
      \ nebude rozpozn\xE1na \uFFFD osoba, kter\xE1 klade ot\xE1zky, se nemus\xED\
      \ um\u011Bt dot\xE1zat tak, aby bylo rozpoznateln\xE9, \u017Ee ti nen\xED stromy"
    truth: 4
  9:
    pred: 3
    text: "vstupem jsou: o\u010Dek\xE1van\xFD v\xFDstup pro danou hodnotu a v\xFD\
      stup, kter\xFD jsme od modelu dostali v\xFDstupem je: jak moc se na\u0161e hodnota\
      \ a o\u010Dek\xE1van\xE1 hodnota li\u0161\xED tyto loss fce pro dan\xE9 mno\u017E\
      stv\xED dat se pak mohou se\u010D\xEDst a tato hodnota - celkov\xE1 chyba -\
      \ ur\u010D\xED, zda je model spr\xE1vn\u011B natr\xE9novan\xFD, \u010Di nikoliv"
    truth: 0
  10:
    pred: 4
    text: "p\u0159i p\u0159\xEDli\u0161 vysok\xFDch hodnot\xE1ch l. r. m\u016F\u017E\
      e ano v\xFDsledek \u010D\xEDm d\xE1l v\xEDc sk\xE1kat a pak diverguje - p\u0159\
      i p\u0159\xEDli\u0161 n\xEDzk\xFDch hodnot\xE1ch bude model dob\u0159e nau\u010D\
      en\xFD, ale v\u0161e bude trvat p\u0159\xEDli\u0161 dlouho pro komplexn\xED\
      \ \xFAlohu);p\u0159\xEDli\u0161n\xE1 korekce zp\u016Fsob skok o vysokou hodnotu\
      \ tak, \u017Ee p\u0159es\xE1hne cht\u011Bn\xFD v\xFDsledek a\u017E p\u0159\xED\
      li\u0161 a nedok\xE1\u017Ee se srovnat zp\u011Bt"
    truth: 4
  11:
    pred: 4
    text: "\u0161\xED\u0159ka x v\xFD\u0161ka konvolu\u010Dn\xEDho j\xE1dra * po\u010D\
      . vstupn\xEDch kan\xE1l\u016F x po\u010D. v\xFDstupn\xEDch kan\xE1l\u016F"
    truth: 4
  12:
    pred: 2
    text: "slova, kter\xE1 jsou si t\xE9manticky podobn\xE1, by m\u011Bla b\xFDt \u201E\
      bl\xEDzko\" (tedy odpov\xEDdaj\xEDc\xED vektory by m\u011Bly m\xEDt n\xEDzkou\
      \ euklidovskou vzd\xE1lenost) d\xEDky LUT, kter\xE1 na ka\u017Ed\xE9m indexu\
      \ \u0159\xE1dku obsahuje slovo a u\u010D\xED se, abychom t\xE9to vlastnosti\
      \ dos\xE1hli;Word Vector aritmetika - umo\u017E\u0148uje se slovy (vektory)\
      \ prov\xE1d\u011Bt r\u016Fzn\xE9 aritmetick\xE9 operace nap\u0159. den - noc\
      \ = obloha"
    truth: 4
  13:
    pred: 4
    text: "modeluje Q-funkci - vstupy jsou: aktu\xE1ln\xED stav, dan\xE1 akce - v\xFD\
      stupem je: ohodnocen\xED dan\xE9 akce;Funkce tedy ohodnocuje akce pro dan\xE9\
      \ stavy. Pou\u017E\xEDv\xE1 se pak ke zvolen\xED cht\u011Bn\xE9 strategie (max\
      \ ohodnocen\xED, samoling...)."
    truth: 4
d47558962966c8b741426336d3ebfe9c:
  0:
    pred: 0
    text: ''
    truth: 0
  1:
    pred: 1
    text: "Pokud jsem hr\xE1\u010D na tahu, p\u0159edpokl\xE1d\xE1m, \u017Ee po mn\u011B\
      \ bude na tahu protihr\xE1\u010D, kter\xFD bude cht\xEDt sv\u016Fj v\xFDsledek\
      \ maximalizovat tedy provede tah kter\xFD povede k nejvy\u0161\u0161\xED \u201E\
      hodnot\u011B\u201C v\xFDsledku - abych tuto hodnotu co nejv\xEDce minimalizovala,\
      \ p\u0159i sv\xE9m tahu vyb\xEDr\xE1m nejni\u017E\u0161\xED mo\u017En\xE9 ohodnocen\xED\
      \ dal\u0161\xEDho tahu, proto\u017Ee to bude tak protihr\xE1\u010De.;m\u016F\
      j t vyb\xEDr\xE1m minim\xE1ln\xED ohodnocen\xED;protihr\xE1\u010D \uFFFD vyb\xED\
      r\xE1 max;6;odd\u011Blen\xED;6"
    truth: 0
  2:
    pred: 1
    text: 'DFS: 1;od;d*'
    truth: 0
  3:
    pred: 0
    text: ''
    truth: 0
  4:
    pred: 0
    text: ''
    truth: 0
  5:
    pred: 0
    text: ''
    truth: 0
  6:
    pred: 3
    text: "P(N|) - nen\xED naka\u017Een, P(P) - poz. rest;naka\u017Een P(N) P(PIN|=0,\
      \ 9 ; P(NEGIN) = 1-P(PIN) =0, 1 P(NEGIN|=0, 975; p(p|p|N|) = 0, 0, 05 P(N|)\
      \ = D, 2, P(NN|) = 1-P(n) = 0, 8;P(NEG) - neg. rest;P(N|L);P(PIN) - P(N);P(P;0,9\
      \ .0,12;0,1845;0,18;0,1845 1800;P(PIN|PIN) P(N) + P|PINN) . P(NN) = 0, 9. 0,\
      \ 2 + 0, 0, 0, 005. 0,8 = 0, 18 + 0, 0045 = 0, 1845"
    truth: 3
  7:
    pred: 1
    text: "7;= a \uFFFD x = 1, y = 1, 5 \uFFFDx=0; y = 015 ax2 + 6 x 0,5 = 1,5 0,5\
      \ = 0 +0 + C a + b = 1 C = 0,5 a = 1 - 6;x2 + 6x C (polynom 2. \u0159\xE1du);a\
      \ = 1 - 1,75;1 = 49 + 25 + 0,5 4-46 + 26 _0,5 26 = 3,5 b = 1,75;-0,75 x 2;a\
      \ = 0,75;1,75 x 0,5;1,75x2 1,75x + 0,5;Model se nau\u010D\xED \u0159e\u0161\
      en\xED pomoc polynomu 2. stupn\u011B. Dat je p\u0159\xEDli\u0161 m\xE1lo pro\
      \ takovou regr. \xFAryvku, model je p\u0159etr\xE9novan\xFD Napravit by se dal\
      \ zv\xFD\u0161en\xEDm mno\u017Estv\xED dat"
    truth: 0
  8:
    pred: 1
    text: "Jen pro panstv\xED lesa je na za\u010D\xE1tku schopn\xFD dan\xE9 stavb\u011B\
      \ \u010Dlov\u011Bk nebo strojov\xFD vztah na veden\xED;do pens;C\xEDlem Turingova\
      \ testu je \u010Dlov\u011Bkem ur\u010Dit, zda na druh\xE9 stran\u011B je stroj,\
      \ nebo nejsme schopni ur\u010Dit, zda je to stroj nebo \u010Dlov\u011Bk. Jeho\
      \ dva mo\u017En\xE9 z\xE1v\u011Bry tedy jsou - je to stroj nev\xEDm, je to stroj\
      \ nebo \u010Dlov\u011Bk Nedostatkem je, \u017Ee hodnot\xEDme pouze odpov\u011B\
      di, ne zp\u016Fsob, jak jsme k nim do\u0161li - m\u016F\u017Eou to b\xFDt tedy\
      \ nacvi\u010Den\xE9 ot\xE1zky a odpov\u011Bdi, bez pochopen\xED \u0159e\u0161\
      en\xED dan\xE9 problematiky. Nap\u0159. p\u0159i p\u0159ekladu m\u016F\u017E\
      e m\xEDt stroj nau\u010Den\xE9 fr\xE1ze, ale samotn\xFD jazyk nech\xE1pe, tud\xED\
      \u017E se ne komplexn\xEDmu p\u0159ekladu nehod\xED, jeliko\u017E by mohl p\u0159\
      ekl\xE1dat doslovn\u011B sr\xE1ze, kter\xE9 nezn\xE1, co\u017E by mohlo v\xE9\
      st v druh\xE9m jazyce k nesmysl\u016Fm."
    truth: 0
  10:
    pred: 0
    text: ''
    truth: 0
  11:
    pred: 0
    text: ''
    truth: 0
  12:
    pred: 0
    text: ''
    truth: 0
  13:
    pred: 0
    text: ''
    truth: 0
e3fcfce792cba2bd9b1f688e09b8636d:
  0:
    pred: 0
    text: "dr\u017Eel k napatov\xE1n\xED zapo\u010Dtov\xE9;datasetu su\u017Eitkuje\
      \ zapomenut\xED;K se\u017Eitkov\xE1n\xED dojede \u017Ee AND stumy nemus\xED\
      \ prad\xE1rek v\u0161echny aby se na vyhodnotil poduzky"
    truth: 0
  1:
    pred: 1
    text: "hodnot. Vysv\u011Btlete tento rozpor a pojmenujte odpov\xEDdaj\xEDc\xED\
      \ vlastnost her, pro n\u011B\u017E minimax lze pou\u017E\xEDt.;Prot\xE9re ve\
      \ sv\xE9m minimaxu po\u010D\xEDt\xE1m druho pr\xE1ce jako sope\u0159e, kter\xFD\
      \ je roz\u0161a\u0148\xE1k, kter\xE9ho \xFAkol je v m\u011Bn\xED minm\xE1xu\
      \ minimalizovat m\u016Fj u\u017Eitek pokud 0 = vyrovn\xE1no, ka\u017Ed\xFD m\xE1\
      \ svoji stromu m\u011B\u0159\xEDtka, kde jeden maximalizuje pozitivn\xED hodnoty\
      \ a druh\xFD mocimolizuje negativn\xED;hry mus\xED m\xEDt zp\u016Fsob jak je\
      \ ohodnotit, podle aktu\xE1ln\xEDho stavu"
    truth: 1
  2:
    pred: 0
    text: -d Db BESID = DESID = DA (b-d)
    truth: 0
  3:
    pred: 1
    text: "atunick\xE1 - jenom ud\xE1v\xE1 lep\u0161\xED / hou\u017E\xED faktorizovan\xE1\
      \ - ohodnocena \u010D\xEDslem strukturovan\xE1 - m\u016F\u017Ee m\xEDt dal\u0161\
      \xED infunkce o stran ne\u017E jen ohodnocen\xED"
    truth: 1
  4:
    pred: 4
    text: "- parametry - Sx3 = 15 parametr\u016F - apriorn\xED pravede pudrost st\u0159\
      edn\xED hodnota rozptyl"
    truth: 0
  5:
    pred: 2
    text: "- bogistick\xE1 regrese;chatrno-v\xFDpo\u010Det funkce, kter\xE1 odd\u011B\
      luje jednotliv\u011B t\u0159\xEDdy;lustering;gener\xE1ln\xED - po\u010D\xED\
      taj\xED s hustoty pravd\u011Bpodobst"
    truth: 0
  6:
    pred: 2
    text: P(poz);P(sak (poz) =;P(pozlavk) P(rok) 407. 201. P(voz);981;20/6
    truth: 0
  7:
    pred: 2
    text: "W probl\xE9m - negenerolizov\xE1n - p\u0159\xEDli\u017E ran\u011Bn\xFD\
      \ na t\u0159enovac\xEDch datech, upravit parametry pro lep\u0161\xED generalizaci;pokynem\
      \ druh\xE9ho \u0159\xE1du parabola - proch\xE1z\xED t\u0159enov\xE1ni body"
    truth: 2
  8:
    pred: 1
    text: "C\xEDl je otestnost zda n\u011Bco (t\u0159eba AI) se d\xE1 rozpoznat od\
      \ \u010Dlov\u011Bka, zda je inteligen\xED jako \u010Dlov\u011Bk Z\xE1v\u011B\
      ry - sen\xED \u010Dlov\u011Bk - rozpoznalo se - je \u010Dlov\u011Bk - nebylo\
      \ rozpozn\xE1no \u017Ee doopravdy nen\xED,;\u010Dlov\u011Bk;nedstatky - nemus\xED\
      \ j\xEDt o inteligenci rovnou \u010Dlov\u011Bku. ale o algoritmus, kter\xFD\
      \ testovatele o\u017E\xE1l\xED."
    truth: 2
  9:
    pred: 2
    text: "P\u0159eje s\xE1m chybu na z\xE1klad\u011B o\u010Dek\xE1van\xE9ho v\xFD\
      sledku a podle n\xED m\u016F\u017Ee upravit model vztypy: v\xFDsledek u\u010D\
      en\xED a o\u010Dek\xE1van\xFD v\xFDsledek v\xFDstr: chybov\xE1 funkce - \xFA\
      prava modelu"
    truth: 2
  10:
    pred: 4
    text: "P\u0159i velmi n\xEDzk\xFDch hodnot\xE1ch se m\u016F\u017Ee st\xE1t, \u017E\
      e se bude u\u010Dit a\u017E velmi pomalu a t\u0159eba i nemus\xED doj\xEDt k\
      \ \u0159e\u0161en\xED - neefektivn\xED Narpsk p\u0159i vyskytl hodnot\u011B\
      l m\u016F\u017Ee divergovat, nap\u0159i, zk\u0159ikat nap\u0159. fork\xFA ,\
      \ \u0161patn\u011B tedy modeluje postup \xFAkol"
    truth: 4
  11:
    pred: 3
    text: "X - \u017E\xEDrka vrsty y - v\xFD\u0161ka vrsty z - hloubka vraty b-lias;y\
      \ + b) . z"
    truth: 0
  12:
    pred: 2
    text: "Chceme aby byl reprezentov\xE1n v Look > v Table aby \u0161li slova / vektory\
      \ indexovat Chceme aby slova kter\xE9 jsou podobn\u011B, jejich vektory byli\
      \ bl\xEDzk\xE9;pracovat Word Vertor aritmetika - umo\u017En\u011Bje slovy s\
      \ aritmetick\xFDmi operacemi na z\xE1klad\u011B nap\u0159: st\u016Fl - nohy\
      \ = deska;se v\xFDznamu V m\u011Bnit v\xFDznam"
    truth: 4
  13:
    pred: 2
    text: "Funkci, kter\xE1 vyb\xEDr\xE1 stvy, kde agent dostane nejv\u011Bt\u0161\
      \xED odm\u011Bnu Vstup: stav agetu, p\u0159\xEDpadn\u011B okol\xED V\xFDstup:\
      \ stavy/akce, kter\xE9 m\u016F\u017Ee agent prov\xE9st (pro nau\u010Divali;Aget\
      \ na z\xE1klad\u011B p\u0159edchoz\xEDch zku\u0161enost\xED vyli\u0161n\xE1\
      \ stvy;odm\u011Bny,"
    truth: 1
ee09d9aaa8474a6513133aa8452fad6f:
  0:
    pred: 0
    text: ''
    truth: 0
  1:
    pred: 0
    text: "u\u017E algoritmus se sna\u017E\xED maximalizovat tisk hr\xE1\u010De a\
      \ minimalizovat tisk soupe\u0159e - hry bez n\xE1hodn\xFDch jev\u016F sero-sum"
    truth: 0
  2:
    pred: 3
    text: "Pam\u011B\u0165ov\xE1 n\xE1ro\u010Dnost BFS. O AI v nejhor\u0161\xEDm p\u0159\
      \xEDpad\u011B jsme \u017E\xE1dn\xE9 uzly do dosud nep\u0159idali. v nejlep\u0161\
      \xEDm p\u0159\xEDpad\u011B;O are\xE1l DFS: O Old) (D old)"
    truth: 0
  3:
    pred: 3
    text: "agent pot\u0159ebuje od prost\u0159ed\xED: reprezentaci aktu\xE1ln\xED\
      ho stavu a budouc\xED stav (podle kt. se rozhodne) prost\u0159ed\xED (probl\xE9\
      m) vyj\xE1d\u0159eno, jako funkce k(C) - reprezentace stavu: atomick\xE9 - stav\
      \ reprezentov\xE1n jednoduch\xFDm \u010D\xEDslem (nap\u0159. po\u010Det voln\xFD\
      ch m\xEDst na \u0161achovnici N dam)"
    truth: 0
  4:
    pred: 0
    text: "tyto parametry reprezentov\xE1ny? Jak jsme tyto parametry;u - st\u0159\
      edn\xED hodnota, vektor s dv\u011Bmi hodnotami u =;- st\u0159ed v grafu;[- konvolu\u010D\
      n\xED matice, matice 2x2 (as aug), kde \"a\", a\" n\xE1m ur\u010Duj\xED v\xFD\
      \u0161ku a \u0161\xED\u0159ku,\u201C a \"aj ur\u010Duj\xED rotaci - v grafu;20\
      \ BERN;- Pro ka\u017Edou t\u0159\xEDdu odhadneme parametry a vytvo\u0159\xED\
      me hustotu pravd\u011Bpodobnosti -> tzn. m\xE1me 3 hustoty pravd\u011Bpodobnosti\
      \ - p\u0159i p\u0159echodu nov\xE9ho vzoru x vypo\u010D\xEDt\xE1me pravd\u011B\
      podobnost p\u0159\xEDslu\u0161nosti ke ka\u017Ed\xE9 t\u0159\xEDd\u011B - z\
      \ odhadnut\xFDch hustot pravd\u011Bpodobnost\xED - parametry odhadneme z tr\xE9\
      novac\xEDch dat - klasifikace - v\xFDb\u011Br nejvy\u0161\u0161\xED pravd\u011B\
      podobnosti maximum likelihood"
    truth: 0
  5:
    pred: 2
    text: "v\xFDpo\u010Det li\u0161\xED ve srovn\xE1n\xED s generativn\xEDmi klasifika\u010D\
      n\xEDmi modely?;- logistick\xE1 regrese;- jednoduch\xE1 neuronov\xE1 s\xED\u0165\
      \ \uFFFD y = sign\xE1l (W.: apo\u0161tolsk\xE1 pravd\u011Bpodobnost;- v\xFD\
      po\u010Det se li\u0161\xED v: o generativn\xED - odhad hustoty pravd\u011Bpodobnosti\
      \ - slo\u017Eit\u011Bj\u0161\xED modely jsou poskl\xE1d\xE1ny z jednodu\u0161\
      \u0161\xEDch diskriminativn\xED - optimalizujeme n\u011Bjakou funkci"
    truth: 2
  6:
    pred: 0
    text: "pozor;P(satel pp\u0159) p(pak) po\u010Det P(Pol) pap. P(Plnek) VLKA P(port\
      \ nab) = P(nak) P(nak pos) + Prostranov P(poz) nak) P(pozitivak) = P(nak) ,\
      \ P(nak / pos) = 0, 2. 0, 9 = 0, 19;18%;Radost"
    truth: 0
  7:
    pred: 3
    text: "- model bude p\u0159etr\xE9novan\xFD - dob\u0159e odhaduje tr\xE9novac\xED\
      \ data, av\u0161ak nen\xED schopen spr\xE1vn\u011B gene zovat (pro nov\u011B\
      \ p\u0159ichoz\xED data) \u0159e\u0161en\xED - poskytnout v\xEDce tr\xE9novac\xED\
      ch dat probl\xE9m vznikl - mal\xFDm po\u010Dtem tr\xE9novac\xEDch dat"
    truth: 0
  8:
    pred: 1
    text: "- c\xEDlem je - ur\u010Dit, zda-li je um\u011Bl\xE1 iteligence nerozpoznateln\xE1\
      \ od \u010Dlov\u011Bka - test je velice v\xE1\u017En\u011B definov\xE1n - nen\xED\
      \ mo\u017En\xE9 ur\u010Dit um\u011Blou inteligenci podle souboru ot\xE1zek (psan\xFD\
      ch), je pot\u0159eba se i zam\u011B\u0159it na tv\u016Fr\u010Denost, nap\u0159\
      . b\xE1sni\u010Dky, obr\xE1zky, atd.;\xFA\u010Delu?"
    truth: 2
  9:
    pred: 2
    text: "- v\xFDpo\u010Det ohodnocen\xED v\xFDsledku pro dan\xE9 vstupy (nap\u0159\
      . binary eras-;- vyu\u017E\xEDv\xE1 se k ohodnocen\xED p\u0159i u\u010Den\xED\
      \ - vstup: v\xFDstupy modelu + tr\xE9novac\xED data - v\xFDstupem: ohodnocen\xED\
      \ v\xFDstupu modelu - pou\u017E\xEDv\xE1 se k ov\u011B\u0159en\xED, \u017Ee\
      \ p\u0159i tr\xE9nov\xE1n\xED se bl\xED\u017E\xEDme k optimu (\u0159e\u0161\
      en\xED)"
    truth: 2
  10:
    pred: 4
    text: "mal\xFD:;dobr\xFD:;- pokud je learning rate p\u0159\xEDli\u0161 - mal\xFD\
      \ - m\u016F\u017Eeme se \u201Ezaseknout\u201C v lok\xE1ln\xEDm minimu a tr\xE9\
      nov\xE1n\xED se \u201Ezastav\xED\u201C velk\xFD - m\u016F\u017Ee se st\xE1t,\
      \ \u017Ee n\xE1m bude loss p\u0159\xEDli\u0161 \u201Ezk\xE1kat\u201C a nebudeme\
      \ konverz. ovat k optimu.;moc velk\xFD prsty"
    truth: 4
  11:
    pred: 4
    text: "Pokud m\xE1 konvolu\u010Dn\xED vrstva x jader s velikost\xED yxy, pak je\
      \ pot\u0159eba prov\xE9st x rysy n\xE1soben\xED pro ka\u017Ed\xFD kan\xE1l vstupn\xED\
      ch dat. Pro jeden pixel: x = 1 po\u010Det han\xE1k\u016F = po\u010Det n\xE1\
      soben\xED"
    truth: 3
  12:
    pred: 4
    text: "- vlastnosti - aby se pomoc\xED matematick\xFDch v\xFDpo\u010Dt\u016F dala\
      \ ur\u010Dit nap\u0159. podobnost slov (nap\u0159. pomoc\xED euklidovsk\xE9\
      \ vzd\xE1lenosti) - nap\u0159. vzd\xE1lenost (king, quen) - vzd\xE1lenost (king,\
      \ ship);Word vector aritmetika - matematick\xE9 operace se slovy n\xE1m vytvo\u0159\
      \xED nov\xE9 slovo nap\u0159 king + quen = kingdom king-ship = castle;Apod."
    truth: 3
  13:
    pred: 3
    text: "Nurronov\xE1 s\xED\u0165 - vyb\xEDr\xE1 jak\xE9 akce by se v dan\xE9m stavu\
      \ m\u011Bli prov\xE9st - vstup - stav v\xFDstup - akce vektor akc\xED + pravd\u011B\
      podobnosti NN - modeluje policy - agent NN vyu\u017E\xEDv\xE1 pro v\xFDb\u011B\
      r sv\xE9 n\xE1sleduj\xEDc\xED akce"
    truth: 1
ee4b7041a56afa5dba176c9bb60a631d:
  0:
    pred: 0
    text: ''
    truth: 0
  1:
    pred: 0
    text: "P\u0159edpoklad\xE1me, \u017Ee protihr\xE1\u010D so sna\u017E\xED minimalizovat\
      \ Ide o hry s protihr\xE1\u010Dom n\xE1\u0161 zisk. Teda po\u010D\xEDtan\xE9\
      , \u017Ee vol\xED pro n\xE1s v\u017Edy;najhor\u0161\xED mo\u017Enost.;je racion\xE1\
      lny a"
    truth: 0
  2:
    pred: 1
    text: "O;BFS OL DFS =;0. 6;(sou\u010D\xE1st\xED 20. August;: A spole\u010Dn\u011B\
      \ s tebou vypravujeme. 22. listopadu 1919 v Brn\u011B 19 Vyhl\xE1\u0161ka o\
      \ pozn\xE1n\xED Martin a pozdravuje 1950.;BFS 0 (b) DFS OLPE d;+ o;o;Star\xE9\
      \ domy. postaven\xED v obci. za svobodu 5. dubna 1917 gestattet. nemocnice."
    truth: 1
  3:
    pred: 4
    text: "pot\u0159ebuje vede\u0165 hodnotu v mieste kde pr\xE1ve je a ni\u017E\u0161\
      \xED atmich\xE1x"
    truth: 0
  4:
    pred: 0
    text: ''
    truth: 0
  5:
    pred: 0
    text: ''
    truth: 0
  6:
    pred: 1
    text: "v 20% PIN) ... 90% NI;I... 20\xB0C P(T|L) 1. 40% . P(T|x) (F AT;X;97,5\
      \ %;P(P) =;0,2 => P(I|) = 0,8 P(I).. ...0,9 P(PII) NIE)... 0,975 = P(pie) =0,025\
      \ P(IP)... x;P(IP);P(PIE) . P(I);0,95 . 0,12;P(P) 0,2 P(P) = P(D). P(PIID) +\
      \ P(P|PIE) P(P) = 0,2 . 0,9 + 0,8 . 0,025 P(P) = 0,18 + 0,02 = 0,2;0,9"
    truth: 0
  7:
    pred: 0
    text: ''
    truth: 0
  8:
    pred: 1
    text: "nebude rozoznateln\xE1 Cielom je n\xE1js\u0165 re\xE1lner AI. AI. AI pomy\u0161\
      len\xED od \u010Dloveka alebo bude (zlykala). Vdne\u0161nej dobu ho u\u017E\
      \ ur\u010Dite vieme prekna\u0165 s AI, ktor\xE9 by sme rozhodne nepova\u017E\
      ovali za \u201Einteligentn\xE9\" (napr. chatbots). Dal\u0161\xEDm argumentem\
      \ m\xF4\u017Ee by\u0165 \u010Dinsk\xE1 m\xEDstnost s;Dnes u\u017E;zamyslel prakticky\
      \ nem\xE1."
    truth: 2
  9:
    pred: 2
    text: "Vy\u0161\u0161\xEDa hodnota \u201Etrest\xE1\u201C zl\xFD postup. Vstupem\
      \ je dan\xFD konkr\xE9tnym tr\xE9nom. modelem a v\xFDstup je jedno \u010D\xED\
      slo."
    truth: 2
  10:
    pred: 0
    text: ''
    truth: 0
  11:
    pred: 0
    text: 8x8x8x8 r g b a
    truth: 0
  12:
    pred: 1
    text: "Chceme vedie\u0165 pracova\u0165 s textova rovnak\xE1 alo s \u010D\xED\
      slami. WV aritme- tika n\xE1m s takto reprezentovan\xFDm textom umo\u017E\u0148\
      uje pracova\u0165 (a + = b);"
    truth: 1
  13:
    pred: 3
    text: "(D);ny;Modeluje jednotliv\xE9 v\xE1hy vdanej konvolu\u010Dnej vrstve a\
      \ ato vstup berie ram dat v\xFDstup je jedna z o\u010Dek\xE1van\xFDch mo\u017E\
      nost\xED. Agent porovn\xE1 v\xFDsledek s testovacou sadou pri u\u010Den\xED\
      \ a v p\u0159\xEDpade nejlep\u0161\xEDch v\xFDsledkov ich posunie do dal\u0161\
      \xEDj gener\xE1cie;."
    truth: 0
fcec38d56ab77c2f5a4f79fc88d2b39b:
  3:
    pred: 1
    text: "atomick\xE1 - pouze 1 mo\u017En\xFD tah;faktorizovan\xE1 - - strukturovan\xE1\
      \ - v\xEDce tah\u016F na v\xFDb\u011Br"
    truth: 0
fd4c95ac222b1b1ce4780a446a0662ff:
  0:
    pred: 1
    text: "na;NN;0;Ak budem ma\u0165 v\u0161etky uzly a viem \u017Ee prv\xFD vedie\
      \ k ni\u010D\xEDm potom aj ostatn\u011B p\u0159ijdu;66"
    truth: 0
  1:
    pred: 0
    text: "Ked s\xFAper o\u010Dak\xE1va maximaliz\xE1cin ale pou\u017Eijeme minimalizacin,\
      \ je mo\u017En\xE9 \u017Ee dosiahneme lep\u0161ie v\xFDsledky ako s klasick\xFD\
      m pr\xEDstupem"
    truth: 0
  2:
    pred: 1
    text: "0 (2) EXPIORED BFS - EXPLORED DFS - O(\u010F by\u010F) BFS - 0 (20) DFS\
      \ - o (a)"
    truth: 2
  3:
    pred: 1
    text: "- reprezent\xE1cia stavu: atomick\xE1"
    truth: 1
  4:
    pred: 3
    text: "Popisany: Kovarian\u010Dna maxim. v tvare Vektor s\xFA radnic v tvare;20/6\
      \ 90"
    truth: 0
  5:
    pred: 1
    text: "logistick\xE1 rogresia, K-means neighborrs;Diskriminativny model ur\u010D\
      uje priamo pr\xEDslu\u0161nos\u0165 k triede a Generativny model ur\u010Duje\
      \ rozlo\u017Eenie hustoty pravdepodobnosti rozd\u011Blenia do tr"
    truth: 0
  6:
    pred: 1
    text: p(nak) = 20 4/ P(pozlrak) = 90% (nak / poz) = ?;= 80% (zdrav) (neglnak)
      = 10% P(neg / zdrav) = 97, 5% P(pozdrav) = 2, 5%;P(X|C) P(c) P(c) = EP(c|x)
      P(cyx) = P(ok) Me);P(x|c) = P(nakl poz;P(nak / poz;P(c|x) . p(x);P(c|x) . P(x)
      + P(c|y) . P(c|x) P(poznak) - P(nak);P(poznak). P(nak) + P(poz / zdrav). P(zdrav);10.20;1800;90.20
      t 2,5. 80 180 + 200 = 188 = 90%
    truth: 4
  7:
    pred: 4
    text: "20;1,5;0,5;R\xE1d polynomi\xE1lnej regresie je pr\xEDli\u0161 velk\xFD\
      \ vzhladom na po\u010Det tr\xE9novac\xEDch vzorov. Model sa pretr\xE9noval a\
      \ presne kopiruje tr\xE9novacie vzory a t\xFDm p\xE1dom negeneralizuje a nebude\
      \ moc\u0165 bo\u0165 pou\u017Eit\xFD Dalo by sa to napravit v\xE4\u010D\u0161\
      \xEDm mno\u017Estv\xEDm tr\xE9novac\xEDch vzorov"
    truth: 0
  8:
    pred: 3
    text: "-z\xE1v\u011Bry: stroj je inteligentn\xFD alebo meje inteligentn\xFD;-\
      \ Nedostatky: stroj sa m\xF4\u017Ee tv\xE1ri\u0165 inteligentne ale v skute\u010D\
      nosti je len datab\xE1za pln\xE1 d\xE1t. Na pouk\xE1zanie tohoto probl\xE9mu\
      \ existuje test \u201E\u010D\xEDnska izba\u201C. - vyu\u017Eitie: overenie schopnost\xED\
      \ textov\xFDch umel\xFDch inteligenc\xED"
    truth: 3
  9:
    pred: 1
    text: "Ur\u010Duje ako moc sa zlep\u0161ujeme vo v\xFDsledkoch u\u010Denia - vstup:\
      \ Learning rate, v\xE1ha, hodnota"
    truth: 1
  10:
    pred: 2
    text: "M\xF4\u017Ee dojs\u0165 k pretr\xE9novaniu a potom model neuronovej siete\
      \ nemus\xED by\u0165 dobre nau\u010Den\xFD"
    truth: 0
  11:
    pred: 3
    text: "v\xFD\u0161ka - obraz na \u0161\xEDrka - obrazu po\u010Det - Kan\xE1lov\
      \ v\xFD\u0161ka - konvolu\u010Dn\xE9ho jadra - \u0161\xED\u0159ka - konvolu\u010D\
      n\xE9ho - jadra"
    truth: 1
  12:
    pred: 2
    text: "- aby boli v\xFDznamovo bl\xEDzko, mali n\xEDzku enklidovsk\xFA vzdialenos\u0165\
      ;Word vetor - reprezentacia slov pomocou vektorou"
    truth: 2
  13:
    pred: 1
    text: "- funkcia vyu\u017E\xEDva informacie o aktu\xE1lnom stave agenta a aj inform\xE1\
      cie o v\u0161etk\xFDch nadch\xE1dzaj\xFAc\xEDch \u0165ahoch agenta na rozhodnutie\
      \ o tom ako bude vyzera\u0165 dal\u0161\xED krok"
    truth: 1
fdb0df15e7ad924fe4403d60cca91fc6:
  0:
    pred: 1
    text: "Nevel.;Ak pri tomto strom\u011B v 2 nevedie k me\u0161eriu, nic je nutn\xE9\
      \ prohlad\xE1va\u0165 vzol B.;uzlol;Ak podstrom v vzty 2 ved\u0159e k v\xFD\
      sledku. nic je nutn\xE9 prohlad\xE1va\u0165 podstrom resp. vzol 3.;vlastnos\u0165\
      \ hry: - losi by\u0165 ohodnotiteln\xE1 na tom hr\xE1\u010D. Musia sa strieda\u0165\
      \ v \u0165ukoch - po jednom resp. po rovinakom po\u010Dtu;jakou funkcion (jako\
      \ dobre/zle) je"
    truth: 0
  1:
    pred: 0
    text: "v tomto algoritme t\xFDm, \u017Ee predpoklad\xE1me \u017Ee s\xFA obedraja\
      \ hr\xE1\u010Di razion\xE1lny, vyber\xE1me v\u017Edy vzor, kt. redie NIE K n\xE1\
      \u0161mu maximu ale s\xFAperovmu minimu, t\xFDm nic ned\xE1vame 2 E mo\u017E\
      nos\u0165 dosiakr\xFA\u0165 r\xE1\u010D\u0161ieho v\xFDsledku. Na obr. vid\xED\
      me, \u017Ee v\u017Edy vyberieme minim\xE1ly vzol aby sme vedeli, al\xFA maxim\xE1\
      ln\xED podstroue. Pri odnotu vie s\xFAper dosiahn\xFA\u0165 v tomto stavovom\
      \ gberan\xED t\xE2ta - potom Vyberieme podstrom s vy\u0161\u0161iou hodnotou\
      \ MAX;Minmax: rozhodovanie;trou;SOPLAN"
    truth: 0
  2:
    pred: 1
    text: ".;...... Sir,;..;Bt 1) Odb. Bd (P-d) 27;o DFS 1) Obr\xE1t t z holist\u016F\
      \ ta se zav\xE1zala a prohl\xEDd\xE1 2 ostat 2) spravovan\xE9;z\xE1bavn\xED\
      ;0 (b !)"
    truth: 0
  3:
    pred: 3
    text: "Agent potrebuje existenciu \u0159\xED\u0161enia - pot\u0159ebuje dism\xE9\
      tny stavov\xFD prieston agentova reprezent\xE1cia stavou bude potom strukturovan\xE1"
    truth: 0
  4:
    pred: 0
    text: ''
    truth: 0
  5:
    pred: 0
    text: ''
    truth: 0
  6:
    pred: 1
    text: "P(N) = 012 P(P|N|=0, 9) 14;P(PiN) = 019 0012;0,9-012 =;P(N|P). P(P);0,9\
      \ .0,2;\xFA\u010Dinnos\u0165 pre N = 0 v\u0161innos\u0165 P = 0,9;K;0795;0,2\
      \ - 0,9 + 0,8 . 0,975;P(pozit) = P(nakazen\xFD). p(u\u010Dinnost) + P(nenakazuj).\
      \ P(\xFA\u010Dinnos\u0165 P(pozit) = 0,2 . 0,9 + 0,8 P(nakazeny|pozit) =;P(P|N)\
      \ . P(N);P(POZIT););= P(naka\u017Eliv\xE1 port);3."
    truth: 1
  7:
    pred: 1
    text: "pokyn\xE1m \u0159\xE1du 2, m\xF4\u017Ee - nasta\u0165 probl\xE9m, \u017E\
      e pokus\xEDm bude zle orientovan\xFD, mo\u017En\xE9 \u0159e\u0161i\u0165 prodan\xED\
      m vstupn\xED lv\u016F dal\u0161\xEDch regres\xFDch."
    truth: 0
  8:
    pred: 1
    text: "Ciel\xF3m testu je ur\u010Dit, \u010Di je koncov\xFD bod\u201C po\u010D\
      \xEDta\u010D alebo \u010Dlovek. Test je ohnedzen\xFD - aspo\u0148 v pr\xEDpade\
      \ ale bol origin\xE1lu op\xEDsav\xFD - t\xFDm, \u017Ee je nutn\xE9 si s \u201C\
      koncov\xFDm bodem\u201C p\xEDsa\u0165 a to, \u017Ee stroj odpisuj\xFAci na ot\xE1\
      zky \u010Dste nemus\xED by\u0165 \"inteligentn\xFD\" - \u010D\xEDnsk\xFD poloj"
    truth: 0
  9:
    pred: 4
    text: "Loss funkce n\xE1m pri tomto u\u010Den\xED ur\u010Duje,\u201C ako daleko\"\
      \ sne od spr\xE1vn\xE9ho ne\u0161enia. Vstupom je aktu\xE1ln\xED stav ku ht.\
      \ sa NS dostala a v\xFDstupem je hodnota, podl\xE1 kt. vieme nasledovne upravi\u0165\
      \ r\xE1ly."
    truth: 2
  10:
    pred: 4
    text: "obidra algoritmi Gradient decenda a stochastic GAGD Sleduj\xFA modelovan\xED\
      \ funkciu - zpou\u017E\xEDvaj\xED deriv\xE1cie na ur\u010Denie smeru k minimu.\
      \ Av\u0161ak t\xFDm \u017Ee ur\u010Duj\xED iba smer k nimim sa n\xE1m pri vysok\xFD\
      ch hodnot\xE1ch learning rate m\xF4\u017Ee sta\u0165, \u017Ee extr\xE9 lok\xE1\
      lny budeme preskakova\u0165 - v 1D \u017Ee, a tak nikdy nedosiativneme dobre\
      \ nau\u010Den\xFD model NS."
    truth: 4
  11:
    pred: 2
    text: "- ct C n\xE1soben\xED, kde c je velkos\u0165 (\u0161\xEDrka ver v\xFD\u0161\
      ka) \u0161abl\xF3ny konvoluc\xEDe"
    truth: 2
  12:
    pred: 2
    text: "Chceme, aby ka\u017Ed\xE9 slovo malo vnika\u010Dky vektor, ale z\xE1rove\u0148\
      \ chceme, aby slov\xE1 podobn\xE9ho v\xFDznam boli bl\xEDzko seba a opa\u010D\
      n\xE9ho v iaverznom vektore. T\xE1to aritmetika so slovami ahoj s vekt. slova\
      \ \"dobr\xFD\" by Uzly!!!;n\xE1m umo\u017E\u0148uje pracova\u0165 \u010D\xED\
      slami -> pri vyn\xE1soben\xED sme vzali dosta\u0165 rektor slova"
    truth: 4
  13:
    pred: 0
    text: "Pri deep Q-kamnay sa;vyu\u017E\xEDva rektor Qu."
    truth: 0
fdd9ca784e674c04aa5436a352eb8651:
  0:
    pred: 0
    text: ''
    truth: 0
  1:
    pred: 1
    text: "sov\u011Btem k p\u0159ibl\xED\u017Eit se D. Pokud hled\xE1 Algoritmus se\
      \ sna\u017E\xED co nejv\xEDce maximum z hodnot x hr\xE1\u010De A, pak bude hledat\
      \ minimum z hodnot -x hr\xE1\u010De B.;M\xEDst"
    truth: 0
  2:
    pred: 3
    text: "Bon;S;d;BAFS;m\xE1 v pam\u011Bti pouze vrstvu d+1;m\xE1 v pam\u011Bti v\u0161\
      echny p\u0159ede\u0161l\xE9 vrstvy + n\xE1sleduj\xEDc\xED;DAFS;m\xE1 pouze cestu\
      \ k c\xEDli . 1) 0 (d) 2) O (2 b?) - mus\xED udr\u017Eet v\u0161echny vztahy\
      \ kter\xE9 pro\u0161el - PFS Nepou\u017E\xEDv\xE1;Pokud se jedn\xE1 o necyklick\xFD\
      \ probl\xE9m, nen\xED pot\u0159eba mno\u017Eina CLOSED."
    truth: 0
  3:
    pred: 4
    text: "pot\u0159ebuje pot\u0159ebuje pot\u0159ebuje;prostor, ve kter\xE9m se pohybuje\
      \ funkci, kter\xE1 ohodnot\xED jeho aktu\xE1ln\xED krok seznam akc\xED, kter\xE9\
      \ m\u016F\u017Ee prov\xE1d\u011Bt"
    truth: 4
  4:
    pred: 0
    text: ''
    truth: 0
  5:
    pred: 1
    text: "K - nejbli\u017E\u0161\xEDch soused\u016F;-;pokud m\xE1m k =9, mohu vyj\xE1\
      d\u0159it a\u017E 10 r\u016Fzn\xFDch zastoupen\xED p\u0159. bod m\xE1 3 jedn\xE9\
      \ t\u0159\xEDdy a 6/9 druh\xE9, 6 soused\u016F 3 sousedi;diskriminativn\xED\
      \ modely ur\u010D\xED na z\xE1klad\u011B hodnoty x hodnoty - klasifika\u010D\
      n\xED modely procuj\xED na z\xE1klad\u011B pravd\u011Bpodobnosti."
    truth: 0
  6:
    pred: 2
    text: "P(naka\u017Eeno) = 0,2 P(zdr\xE1vo) - 0,8 P(naka\u017Een\xFD/pozitivn\xED\
      ) = 9:0,2 P(nakaz/pozitivn\xED);0,2;P(poz) nakaz P (hak) P(pozit);P(pozitivn\xED\
      \ i nakazeny) = 0,9 P(zdravy / negativn\xED) =0, 975 P(negativn\xED (nakazen\xFD\
      ) = 0,1 P(naka\u017Een / negativn\xED) =0,025;9;P(poka\u017Een\xFD lucentin\
      \ poziti (valeaz). Plna P(x|x) - P(P|r);P(x);negativn\xED P(negativ| nakecae)\
      \ P(nakaze) P(ROZ) = P(negativn\xED) = P(poziti.) \uFFFD 1P (negativn\xED) =\
      \ 1/7;P(nakaz/nej) 0,1 . 0,2;0,025;F025 25;0,02"
    truth: 2
  7:
    pred: 4
    text: "g);je polynom druh\xE9ho \u0159\xE1du parabola, data jsou danou k\u0159\
      ivkou perfektn\u011B protrut\xE1.;Pro takto m\xE1lo dat se st\xE1v\xE1, \u017E\
      e je dan\xFD model p\u0159etr\xE9novan\xFD, tedy pro dal\u0161\xED p\u0159\xED\
      choz\xED data m\u016F\u017Ee vyhodnocovat \u0161patn\xE9 v\xFDstupy Lze p\u0159\
      idat v\xEDce trenovac\xEDch dat a model znovu p\u0159etr\xE9novat. U v\xEDce\
      \ dat lze i po\u010D\xEDtat s vn\u011Bj\u0161\xEDm"
    truth: 4
  8:
    pred: 3
    text: "c\xEDlem TT je zjistit;zda m\xE1;stroj um\u011Blou inteligenci;hodnou \u010D\
      lov\u011Bka.;stroj je chytr\xFD jak \u010Dlov\u011Bk - nen\xED - ,-;- test se\
      \ zam\u011B\u0159uje pouze na znalosti, co\u017E dokazuje teorie o \u010D\xED\
      nsk\xE9 sk nemluv\xEDc\xEDm \u010Dlov\u011Bkovi zav\u0159en\xE9m v neomezen\xE9\
      \ knihovn\u011B \u010D\xEDnsk\xFDch knih a v\u011Bd\u011Bn\xED, kde najde odpov\u011B\
      d na ka\u017Edou ot\xE1zku, Tedy je schopn\xFD odpov\u011Bd\u011Bt \u010D\xED\
      nsky na \u010D\xEDnskou ot\xE1zku bez znalosti \u010D\xEDn\u0161tiny."
    truth: 3
  9:
    pred: 3
    text: "loss funkce ur\u010Duje, jak moc se v\xFDstup neuronov\xE9 s\xEDt\u011B\
      \ li\u0161\xED od re\xE1ln\xE9 hodnoty. V\xFDstup loss funkce je pak pou\u017E\
      \xEDt k p\u0159etr\xE9nov\xE1n\xED (dotr\xE9nov\xE1n\xED) NS.;vstupem: vektor\
      \ hodnot v\xFDstupem: je to \u010D\xEDslo"
    truth: 3
  12:
    pred: 4
    text: "chceme, aby vektory slov, kter\xE9 spolu souvis\xED byly bl\xEDzko sebe.\
      \ Nap\u0159. slovo \u201Ekr\xE1l\" bude bl\xEDzko slovu \u201Emu\u017E\u201C\
      , ale daleko od slova \u201E\u017Eena\u201C.;World Vector aritmetika n\xE1m\
      \ umo\u017E\u0148uje d\u011Blat aritmetick\xE9 operace nad slovy. mu\u017E +\
      \ panovn\xEDk = kr\xE1l"
    truth: 4
  13:
    pred: 2
    text: "Modeluje Q-funkci;- funkce ohodnocuje okoln\xED stavy. Na z\xE1klad\u011B\
      \ t\u011Bchto hodnot se pak agent rozhoduje do jak\xE9ho stavu pokra\u010Dovat"
    truth: 2
ffd524f75656215b0379cb7da3820608:
  0:
    pred: 2
    text: "G GOAL-C;Po;6;P\u0159i prohled\xE1van\xED stavu UI u\u017E nemus\xEDm preh\u013E\
      ad\xE1vat stav \uFFFD lebo u\u017E v\xEDm, \u017Ee vedie k cielu."
    truth: 2
  1:
    pred: 3
    text: "\u017Eito u\u201E To ist\xE9 plat\xED aj naopak, teda Souve\u0159ovo ztr\xE1\
      ta se rovn\xE1 he\u010F prehlad\xE1vam stavov\xFD prostor a p\u0159edpokl\xE1\
      d\xE1m, \u017Ee je na tahu soupe\u0159, beru uzel s nejmen\u0161\xEDm ohodnocen\xED\
      m.;Ary, kde sa strieduj\xFA hr\xE1\u010Di na \u0165ahu. \u0165ahov\xE9"
    truth: 3
  2:
    pred: 1
    text: BFS = 0 (6 h) DFS = OBRIG (bAd);III;dosed;d*;a
    truth: 1
  3:
    pred: 3
    text: "toho;odprostredia potrebuje vedie\u0165 ak\xE9 m\u016F\u017Ee vykon\xE1\
      vat, a na jak\xE9 stavy vedou Potrebuje taktie\u017E vedie\u0165 vz\u0165ahy\
      \ medzi prvnami prost\u0159ed\xED aby vedot ohodnotit dan\xFD stav strukturovan\xE1\
      \ reprezentace stav\u016F."
    truth: 0
  4:
    pred: 1
    text: "Alg. P(g);bayes;(G);p(realic);potrebujeme vypo\u010D\xEDta\u0165 posteriorn\xED\
      \ pravd\u011Bpodobnost ka\u017Ed\xE9 ze 3 t\u0159\xEDd. P(4) ur\u010Dit pro\
      \ ka\u017Edou t\u0159\xEDdu grusovsk\xE9 rozlo\u017Een\xED: M - st\u0159edn\xED\
      \ hodnota 2 rozm\u011Brn\xFD vektor \uFFFD rozptil ve 2D \uFFFD 2x2 matice N\
      \ a vyu\u017Eijeme pro v\xFDpo\u010Det hodnot gaussovsk\xE9ho rozlo\u017Een\xED\
      \ ka\u017Ed\xE9 t\u0159\xEDdy tieto z parametre odhadneme pomoc\xED gradientn\xED\
      ho sestupu s vyu\u017Eit\xEDm loss t-ce v ka\u017Ed\xE9 iteraci tr\xE9novan\xED\
      ."
    truth: 1
  5:
    pred: 4
    text: "Pri diskriminativn\xEDch klasifik\xE1torech po\u010D\xEDt\xE1me rovno p(C|X)\
      \ trebujeme pre to odhadn\xFA\u0165 menej parametrov.;modely: klasifik\xE1tor\
      \ kategorick\xFDch dat"
    truth: 0
  6:
    pred: 2
    text: "0,025;P(pozitivn\xED/zdrav\xFD) = P(naho\u0159en\xFD) = 0,2 zdrav\xFD)\
      \ = 0,8 P(;nalo\u017Een\xED nahu\u0159en\xED P(pozitivn\xED);naka\u017Een\xFD\
      \ pozitivn\xED) = naka\u017Een\xED (pozitivn\xED):;P(pozitivn\xED zdrav\xED\
      ). P(zdrav\xED) + P(pozitivn\xED / naka\u017Een\xED) P(naka\u017Een\xED) 0,\
      \ 9 . 0,2;0,18;20;0,18 + 0,02;0, A. 0, 2 + 0,025.008;10;0,02 %"
    truth: 4
  7:
    pred: 4
    text: "1,5;polynomi\xE1ln\xED regresi 2. \u0159\xE1du se nakonec vytvo\u0159\xED\
      \ h\u0159ivna reprezentuj\xEDc\xED n\u011Bjakou kvadratickou t. ci. Probl\xE9\
      m je v tom, \u017Ee pri takto malom po\u016Fze dat nebude probl\xE9m pre model\
      \ protnout v\u0161echno dato. T\xFDm p\xE1dem nebude dobr\xE9 generalizova\u0165\
      \ pro nov\xE9 n\xE1da - probl\xE9m overfitting, ktor\xFD by sa dal napravi\u0165\
      \ z\xEDskan\xEDm viac tr\xE9novac\xEDch dat"
    truth: 4
  8:
    pred: 2
    text: "Probl\xE9my:;C\xEDlem je ov\u011B\u0159it zda je n\u011Bjak\xFD stroj siln\xE1\
      \ um\u011Bl\xE1 inteligence, t.j. nejde rozli\u0161it jej\xED chr\xE1n\xED na\
      \ z\xE1klad\u011B odpov\u011Bd\xED od chr\xE1n\xED \u010Dlov\u011Bka. Z\xE1\
      vis\xED na schopnosti ach toho, kter\xE9 pokl\xE1d\xE1 ot\xE1zky, aj toho, kto\
      \ na n\u011B odpoved\xE1: Probl\xE9m \u201E\u010Dinske m\xEDstnosti\u201C \uFFFD\
      \ stroj m\xF4\u017Ee generovat odpovede n\xE1hodne a ten, kto ich overuje nemus\xED\
      \ napr\xEDklad vedic\u0165 po\u010D\xEDnsky a rozozna\u0165, \u010Di ide \u201E\
      inteligentn\xED\u201C odpov\u011B\u010F."
    truth: 2
  9:
    pred: 4
    text: "Jej\xED vstupem je v\xFDstup modelu a v\xFDstup tr\xE9novac\xEDch dat.\
      \ V\xFDstupem je rozd\xEDl mezi t\xFDmito d\xE1tami -> napr\xEDklad mean-synared\
      \ errov. V u\u010Den\xED s u\u010Ditelem je jej\xED role proporov\xE1n\xED v\xFD\
      stupu modelu s v\xFDstupem v tr\xE9novac\xEDch datech. Sna\u017E\xEDme se o\
      \ jej\xED minimalizaci."
    truth: 4
  10:
    pred: 4
    text: "hodnota 14. sp\xF4sob\xED, \u017Ee sa model bude u\u010Di\u0165 pomaly.\
      \ Prili\u0161 mal\xE1 pr\xEDli\u0161 ve\u013Ek\xE1 zas spojen\xED, \u017Ee bude\
      \ odchylova\u0165 od po\u017Eadov rie\u0161enia -> pak se ned\xE1 z\xEDskat\
      \ dob\u0159e nau\u010Den\xFD model."
    truth: 4
  11:
    pred: 1
    text: "n\u016F;Eratice konvolu\u010Dn\xEDho vstupn\xEDho obr\xE1zku) \uFFFD 2\
      \ matice konvolu\u010Dn\xEDho j\xE1dra)"
    truth: 1
  12:
    pred: 2
    text: "Chceme aby vektory pre podobn\u011B slov\xE1 boli podobn\u011B.;Aritretilm:\
      \ V Popis pravidel pro \u201Ep\u0159epis\u201C slov z textu do vektoru;; stavy\
      \ vedouc\xED stavy)"
    truth: 0
  13:
    pred: 2
    text: "Modeluje ohodnocen\xED \xFA\u017Eitku n\u011Bjak\xE9 akce agenta. Agent\
      \ ji pou\u017E\xEDva p\u0159i rozhodov\xE1n\xED o tom, jakou akci ud\u011Bl\xE1\
      ."
    truth: 1
